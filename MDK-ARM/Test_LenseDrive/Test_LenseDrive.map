Component: Arm Compiler for Embedded 6.18 Tool: armlink [5e4cc100]

==============================================================================

Section Cross References

    startup_stm32l476xx.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32l476xx.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32l476xx.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32l476xx.o(RESET) refers to startup_stm32l476xx.o(STACK) for __initial_sp
    startup_stm32l476xx.o(RESET) refers to startup_stm32l476xx.o(.text) for Reset_Handler
    startup_stm32l476xx.o(RESET) refers to stm32l4xx_mc_it.o(.text.HardFault_Handler) for HardFault_Handler
    startup_stm32l476xx.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_stm32l476xx.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_stm32l476xx.o(RESET) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_stm32l476xx.o(RESET) refers to stm32l4xx_mc_it.o(.text.DMA1_Channel6_IRQHandler) for DMA1_Channel6_IRQHandler
    startup_stm32l476xx.o(RESET) refers to stm32l4xx_mc_it.o(.text.ADC1_2_IRQHandler) for ADC1_2_IRQHandler
    startup_stm32l476xx.o(RESET) refers to stm32l4xx_mc_it.o(.text.TIM1_BRK_TIM15_IRQHandler) for TIM1_BRK_TIM15_IRQHandler
    startup_stm32l476xx.o(RESET) refers to stm32l4xx_mc_it.o(.text.TIM1_UP_TIM16_IRQHandler) for TIM1_UP_TIM16_IRQHandler
    startup_stm32l476xx.o(RESET) refers to stm32l4xx_mc_it.o(.text.TIM3_IRQHandler) for TIM3_IRQHandler
    startup_stm32l476xx.o(RESET) refers to stm32l4xx_mc_it.o(.text.USART2_IRQHandler) for USART2_IRQHandler
    startup_stm32l476xx.o(RESET) refers to stm32l4xx_mc_it.o(.text.EXTI15_10_IRQHandler) for EXTI15_10_IRQHandler
    startup_stm32l476xx.o(RESET) refers to stm32l4xx_it.o(.text.TIM6_DAC_IRQHandler) for TIM6_DAC_IRQHandler
    startup_stm32l476xx.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32l476xx.o(.text) refers to system_stm32l4xx.o(.text.SystemInit) for SystemInit
    startup_stm32l476xx.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32l476xx.o(.text) refers to startup_stm32l476xx.o(HEAP) for Heap_Mem
    startup_stm32l476xx.o(.text) refers to startup_stm32l476xx.o(STACK) for Stack_Mem
    main.o(.text.main) refers to stm32l4xx_hal.o(.text.HAL_Init) for HAL_Init
    main.o(.text.main) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    main.o(.text.main) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) for HAL_PWREx_ControlVoltageScaling
    main.o(.text.main) refers to stm32l4xx_hal_rcc.o(.text.HAL_RCC_OscConfig) for HAL_RCC_OscConfig
    main.o(.text.main) refers to stm32l4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) for HAL_RCC_ClockConfig
    main.o(.text.main) refers to stm32l4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    main.o(.text.main) refers to stm32l4xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    main.o(.text.main) refers to main.o(.bss.hadc1) for hadc1
    main.o(.text.main) refers to stm32l4xx_hal_adc.o(.text.HAL_ADC_Init) for HAL_ADC_Init
    main.o(.text.main) refers to stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeConfigChannel) for HAL_ADCEx_MultiModeConfigChannel
    main.o(.text.main) refers to stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_DisableInjectedQueue) for HAL_ADCEx_DisableInjectedQueue
    main.o(.text.main) refers to stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConfigChannel) for HAL_ADCEx_InjectedConfigChannel
    main.o(.text.main) refers to stm32l4xx_hal_adc.o(.text.HAL_ADC_ConfigChannel) for HAL_ADC_ConfigChannel
    main.o(.text.main) refers to main.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    main.o(.text.main) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_Base_Init) for HAL_TIM_Base_Init
    main.o(.text.main) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_Init) for HAL_TIM_PWM_Init
    main.o(.text.main) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro) for HAL_TIM_SlaveConfigSynchro
    main.o(.text.main) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_MasterConfigSynchronization) for HAL_TIMEx_MasterConfigSynchronization
    main.o(.text.main) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigBreakInput) for HAL_TIMEx_ConfigBreakInput
    main.o(.text.main) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) for HAL_TIM_PWM_ConfigChannel
    main.o(.text.main) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigBreakDeadTime) for HAL_TIMEx_ConfigBreakDeadTime
    main.o(.text.main) refers to stm32l4xx_hal_msp.o(.text.HAL_TIM_MspPostInit) for HAL_TIM_MspPostInit
    main.o(.text.main) refers to main.o(.bss.huart2) for huart2
    main.o(.text.main) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_Init) for HAL_UART_Init
    main.o(.text.main) refers to motorcontrol.o(.text.MX_MotorControl_Init) for MX_MotorControl_Init
    main.o(.text.main) refers to main.o(.bss.huart4) for huart4
    main.o(.text.main) refers to stm32l4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    main.o(.text.main) refers to stm32l4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for HAL_NVIC_EnableIRQ
    main.o(.text.main) refers to main.o(.rodata..L__const.main.os_thread_def_mediumFrequency) for .L__const.main.os_thread_def_mediumFrequency
    main.o(.text.main) refers to cmsis_os.o(.text.osThreadCreate) for osThreadCreate
    main.o(.text.main) refers to main.o(.rodata..L__const.main.os_thread_def_safety) for .L__const.main.os_thread_def_safety
    main.o(.text.main) refers to cmsis_os.o(.text.osKernelStart) for osKernelStart
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.SystemClock_Config) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    main.o(.text.SystemClock_Config) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) for HAL_PWREx_ControlVoltageScaling
    main.o(.text.SystemClock_Config) refers to stm32l4xx_hal_rcc.o(.text.HAL_RCC_OscConfig) for HAL_RCC_OscConfig
    main.o(.text.SystemClock_Config) refers to stm32l4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) for HAL_RCC_ClockConfig
    main.o(.ARM.exidx.text.SystemClock_Config) refers to main.o(.text.SystemClock_Config) for [Anonymous Symbol]
    main.o(.text.startMediumFrequencyTask) refers to cmsis_os.o(.text.osDelay) for osDelay
    main.o(.ARM.exidx.text.startMediumFrequencyTask) refers to main.o(.text.startMediumFrequencyTask) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.Error_Handler) refers to main.o(.text.Error_Handler) for [Anonymous Symbol]
    main.o(.text.HAL_TIM_PeriodElapsedCallback) refers to stm32l4xx_hal.o(.text.HAL_IncTick) for HAL_IncTick
    main.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback) refers to main.o(.text.HAL_TIM_PeriodElapsedCallback) for [Anonymous Symbol]
    main.o(.rodata..L__const.main.os_thread_def_mediumFrequency) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    main.o(.rodata..L__const.main.os_thread_def_mediumFrequency) refers to mc_tasks.o(.text.startMediumFrequencyTask) for startMediumFrequencyTask
    main.o(.rodata..L__const.main.os_thread_def_safety) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    main.o(.rodata..L__const.main.os_thread_def_safety) refers to mc_tasks.o(.text.StartSafetyTask) for StartSafetyTask
    freertos.o(.text.vApplicationGetIdleTaskMemory) refers to freertos.o(.bss.xIdleTaskTCBBuffer) for xIdleTaskTCBBuffer
    freertos.o(.text.vApplicationGetIdleTaskMemory) refers to freertos.o(.bss.xIdleStack) for xIdleStack
    freertos.o(.ARM.exidx.text.vApplicationGetIdleTaskMemory) refers to freertos.o(.text.vApplicationGetIdleTaskMemory) for [Anonymous Symbol]
    motorcontrol.o(.text.MX_MotorControl_Init) refers to motorcontrol.o(.bss.pMCI) for pMCI
    motorcontrol.o(.text.MX_MotorControl_Init) refers to mc_tasks.o(.text.MCboot) for MCboot
    motorcontrol.o(.text.MX_MotorControl_Init) refers to mc_tasks.o(.text.mc_lock_pins) for mc_lock_pins
    motorcontrol.o(.ARM.exidx.text.MX_MotorControl_Init) refers to motorcontrol.o(.text.MX_MotorControl_Init) for [Anonymous Symbol]
    motorcontrol.o(.text.vPortSetupTimerInterrupt) refers to stm32l4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    motorcontrol.o(.text.vPortSetupTimerInterrupt) refers to stm32l4xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for HAL_SYSTICK_Config
    motorcontrol.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to motorcontrol.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    mc_api.o(.text.MC_StartMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_StartMotor1) refers to mc_interface.o(.text.MCI_StartMotor) for MCI_StartMotor
    mc_api.o(.ARM.exidx.text.MC_StartMotor1) refers to mc_api.o(.text.MC_StartMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_StopMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_StopMotor1) refers to mc_interface.o(.text.MCI_StopMotor) for MCI_StopMotor
    mc_api.o(.ARM.exidx.text.MC_StopMotor1) refers to mc_api.o(.text.MC_StopMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_ProgramSpeedRampMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_ProgramSpeedRampMotor1) refers to mc_interface.o(.text.MCI_ExecSpeedRamp) for MCI_ExecSpeedRamp
    mc_api.o(.ARM.exidx.text.MC_ProgramSpeedRampMotor1) refers to mc_api.o(.text.MC_ProgramSpeedRampMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_ProgramSpeedRampMotor1_F) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_ProgramSpeedRampMotor1_F) refers to mc_interface.o(.text.MCI_ExecSpeedRamp_F) for MCI_ExecSpeedRamp_F
    mc_api.o(.ARM.exidx.text.MC_ProgramSpeedRampMotor1_F) refers to mc_api.o(.text.MC_ProgramSpeedRampMotor1_F) for [Anonymous Symbol]
    mc_api.o(.text.MC_ProgramTorqueRampMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_ProgramTorqueRampMotor1) refers to mc_interface.o(.text.MCI_ExecTorqueRamp) for MCI_ExecTorqueRamp
    mc_api.o(.ARM.exidx.text.MC_ProgramTorqueRampMotor1) refers to mc_api.o(.text.MC_ProgramTorqueRampMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_ProgramTorqueRampMotor1_F) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_ProgramTorqueRampMotor1_F) refers to mc_interface.o(.text.MCI_ExecTorqueRamp_F) for MCI_ExecTorqueRamp_F
    mc_api.o(.ARM.exidx.text.MC_ProgramTorqueRampMotor1_F) refers to mc_api.o(.text.MC_ProgramTorqueRampMotor1_F) for [Anonymous Symbol]
    mc_api.o(.text.MC_ProgramPositionCommandMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_ProgramPositionCommandMotor1) refers to mc_interface.o(.text.MCI_ExecPositionCommand) for MCI_ExecPositionCommand
    mc_api.o(.ARM.exidx.text.MC_ProgramPositionCommandMotor1) refers to mc_api.o(.text.MC_ProgramPositionCommandMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_SetCurrentReferenceMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_SetCurrentReferenceMotor1) refers to mc_interface.o(.text.MCI_SetCurrentReferences) for MCI_SetCurrentReferences
    mc_api.o(.ARM.exidx.text.MC_SetCurrentReferenceMotor1) refers to mc_api.o(.text.MC_SetCurrentReferenceMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_SetCurrentReferenceMotor1_F) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_SetCurrentReferenceMotor1_F) refers to mc_interface.o(.text.MCI_SetCurrentReferences_F) for MCI_SetCurrentReferences_F
    mc_api.o(.ARM.exidx.text.MC_SetCurrentReferenceMotor1_F) refers to mc_api.o(.text.MC_SetCurrentReferenceMotor1_F) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetCommandStateMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_GetCommandStateMotor1) refers to mc_interface.o(.text.MCI_IsCommandAcknowledged) for MCI_IsCommandAcknowledged
    mc_api.o(.ARM.exidx.text.MC_GetCommandStateMotor1) refers to mc_api.o(.text.MC_GetCommandStateMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_StopSpeedRampMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_StopSpeedRampMotor1) refers to mc_interface.o(.text.MCI_StopSpeedRamp) for MCI_StopSpeedRamp
    mc_api.o(.ARM.exidx.text.MC_StopSpeedRampMotor1) refers to mc_api.o(.text.MC_StopSpeedRampMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_StopRampMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_StopRampMotor1) refers to mc_interface.o(.text.MCI_StopRamp) for MCI_StopRamp
    mc_api.o(.ARM.exidx.text.MC_StopRampMotor1) refers to mc_api.o(.text.MC_StopRampMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_HasRampCompletedMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_HasRampCompletedMotor1) refers to mc_interface.o(.text.MCI_RampCompleted) for MCI_RampCompleted
    mc_api.o(.ARM.exidx.text.MC_HasRampCompletedMotor1) refers to mc_api.o(.text.MC_HasRampCompletedMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetMecSpeedReferenceMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_GetMecSpeedReferenceMotor1) refers to mc_interface.o(.text.MCI_GetMecSpeedRefUnit) for MCI_GetMecSpeedRefUnit
    mc_api.o(.ARM.exidx.text.MC_GetMecSpeedReferenceMotor1) refers to mc_api.o(.text.MC_GetMecSpeedReferenceMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetMecSpeedReferenceMotor1_F) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_GetMecSpeedReferenceMotor1_F) refers to mc_interface.o(.text.MCI_GetMecSpeedRef_F) for MCI_GetMecSpeedRef_F
    mc_api.o(.ARM.exidx.text.MC_GetMecSpeedReferenceMotor1_F) refers to mc_api.o(.text.MC_GetMecSpeedReferenceMotor1_F) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetMecSpeedAverageMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_GetMecSpeedAverageMotor1) refers to mc_interface.o(.text.MCI_GetAvrgMecSpeedUnit) for MCI_GetAvrgMecSpeedUnit
    mc_api.o(.ARM.exidx.text.MC_GetMecSpeedAverageMotor1) refers to mc_api.o(.text.MC_GetMecSpeedAverageMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetAverageMecSpeedMotor1_F) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_GetAverageMecSpeedMotor1_F) refers to mc_interface.o(.text.MCI_GetAvrgMecSpeed_F) for MCI_GetAvrgMecSpeed_F
    mc_api.o(.ARM.exidx.text.MC_GetAverageMecSpeedMotor1_F) refers to mc_api.o(.text.MC_GetAverageMecSpeedMotor1_F) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetLastRampFinalSpeedMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_GetLastRampFinalSpeedMotor1) refers to mc_interface.o(.text.MCI_GetLastRampFinalSpeed) for MCI_GetLastRampFinalSpeed
    mc_api.o(.ARM.exidx.text.MC_GetLastRampFinalSpeedMotor1) refers to mc_api.o(.text.MC_GetLastRampFinalSpeedMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetLastRampFinalSpeedM1_F) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_GetLastRampFinalSpeedM1_F) refers to mc_interface.o(.text.MCI_GetLastRampFinalSpeed_F) for MCI_GetLastRampFinalSpeed_F
    mc_api.o(.ARM.exidx.text.MC_GetLastRampFinalSpeedM1_F) refers to mc_api.o(.text.MC_GetLastRampFinalSpeedM1_F) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetControlModeMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_GetControlModeMotor1) refers to mc_interface.o(.text.MCI_GetControlMode) for MCI_GetControlMode
    mc_api.o(.ARM.exidx.text.MC_GetControlModeMotor1) refers to mc_api.o(.text.MC_GetControlModeMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetImposedDirectionMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_GetImposedDirectionMotor1) refers to mc_interface.o(.text.MCI_GetImposedMotorDirection) for MCI_GetImposedMotorDirection
    mc_api.o(.ARM.exidx.text.MC_GetImposedDirectionMotor1) refers to mc_api.o(.text.MC_GetImposedDirectionMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetSpeedSensorReliabilityMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_GetSpeedSensorReliabilityMotor1) refers to mc_interface.o(.text.MCI_GetSpdSensorReliability) for MCI_GetSpdSensorReliability
    mc_api.o(.ARM.exidx.text.MC_GetSpeedSensorReliabilityMotor1) refers to mc_api.o(.text.MC_GetSpeedSensorReliabilityMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetPhaseCurrentAmplitudeMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_GetPhaseCurrentAmplitudeMotor1) refers to mc_interface.o(.text.MCI_GetPhaseCurrentAmplitude) for MCI_GetPhaseCurrentAmplitude
    mc_api.o(.ARM.exidx.text.MC_GetPhaseCurrentAmplitudeMotor1) refers to mc_api.o(.text.MC_GetPhaseCurrentAmplitudeMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetPhaseVoltageAmplitudeMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_GetPhaseVoltageAmplitudeMotor1) refers to mc_interface.o(.text.MCI_GetPhaseVoltageAmplitude) for MCI_GetPhaseVoltageAmplitude
    mc_api.o(.ARM.exidx.text.MC_GetPhaseVoltageAmplitudeMotor1) refers to mc_api.o(.text.MC_GetPhaseVoltageAmplitudeMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetIabMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_GetIabMotor1) refers to mc_interface.o(.text.MCI_GetIab) for MCI_GetIab
    mc_api.o(.ARM.exidx.text.MC_GetIabMotor1) refers to mc_api.o(.text.MC_GetIabMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetIabMotor1_F) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_GetIabMotor1_F) refers to mc_interface.o(.text.MCI_GetIab_F) for MCI_GetIab_F
    mc_api.o(.ARM.exidx.text.MC_GetIabMotor1_F) refers to mc_api.o(.text.MC_GetIabMotor1_F) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetIalphabetaMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_GetIalphabetaMotor1) refers to mc_interface.o(.text.MCI_GetIalphabeta) for MCI_GetIalphabeta
    mc_api.o(.ARM.exidx.text.MC_GetIalphabetaMotor1) refers to mc_api.o(.text.MC_GetIalphabetaMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetIqdMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_GetIqdMotor1) refers to mc_interface.o(.text.MCI_GetIqd) for MCI_GetIqd
    mc_api.o(.ARM.exidx.text.MC_GetIqdMotor1) refers to mc_api.o(.text.MC_GetIqdMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetIqdMotor1_F) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_GetIqdMotor1_F) refers to mc_interface.o(.text.MCI_GetIqd_F) for MCI_GetIqd_F
    mc_api.o(.ARM.exidx.text.MC_GetIqdMotor1_F) refers to mc_api.o(.text.MC_GetIqdMotor1_F) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetIqdrefMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_GetIqdrefMotor1) refers to mc_interface.o(.text.MCI_GetIqdref) for MCI_GetIqdref
    mc_api.o(.ARM.exidx.text.MC_GetIqdrefMotor1) refers to mc_api.o(.text.MC_GetIqdrefMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetIqdrefMotor1_F) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_GetIqdrefMotor1_F) refers to mc_interface.o(.text.MCI_GetIqdref_F) for MCI_GetIqdref_F
    mc_api.o(.ARM.exidx.text.MC_GetIqdrefMotor1_F) refers to mc_api.o(.text.MC_GetIqdrefMotor1_F) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetVqdMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_GetVqdMotor1) refers to mc_interface.o(.text.MCI_GetVqd) for MCI_GetVqd
    mc_api.o(.ARM.exidx.text.MC_GetVqdMotor1) refers to mc_api.o(.text.MC_GetVqdMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetValphabetaMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_GetValphabetaMotor1) refers to mc_interface.o(.text.MCI_GetValphabeta) for MCI_GetValphabeta
    mc_api.o(.ARM.exidx.text.MC_GetValphabetaMotor1) refers to mc_api.o(.text.MC_GetValphabetaMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetElAngledppMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_GetElAngledppMotor1) refers to mc_interface.o(.text.MCI_GetElAngledpp) for MCI_GetElAngledpp
    mc_api.o(.ARM.exidx.text.MC_GetElAngledppMotor1) refers to mc_api.o(.text.MC_GetElAngledppMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetTerefMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_GetTerefMotor1) refers to mc_interface.o(.text.MCI_GetTeref) for MCI_GetTeref
    mc_api.o(.ARM.exidx.text.MC_GetTerefMotor1) refers to mc_api.o(.text.MC_GetTerefMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetTerefMotor1_F) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_GetTerefMotor1_F) refers to mc_interface.o(.text.MCI_GetTeref_F) for MCI_GetTeref_F
    mc_api.o(.ARM.exidx.text.MC_GetTerefMotor1_F) refers to mc_api.o(.text.MC_GetTerefMotor1_F) for [Anonymous Symbol]
    mc_api.o(.text.MC_Clear_IqdrefMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_Clear_IqdrefMotor1) refers to mc_interface.o(.text.MCI_Clear_Iqdref) for MCI_Clear_Iqdref
    mc_api.o(.ARM.exidx.text.MC_Clear_IqdrefMotor1) refers to mc_api.o(.text.MC_Clear_IqdrefMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_AcknowledgeFaultMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_AcknowledgeFaultMotor1) refers to mc_interface.o(.text.MCI_FaultAcknowledged) for MCI_FaultAcknowledged
    mc_api.o(.ARM.exidx.text.MC_AcknowledgeFaultMotor1) refers to mc_api.o(.text.MC_AcknowledgeFaultMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetOccurredFaultsMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_GetOccurredFaultsMotor1) refers to mc_interface.o(.text.MCI_GetOccurredFaults) for MCI_GetOccurredFaults
    mc_api.o(.ARM.exidx.text.MC_GetOccurredFaultsMotor1) refers to mc_api.o(.text.MC_GetOccurredFaultsMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetCurrentFaultsMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_GetCurrentFaultsMotor1) refers to mc_interface.o(.text.MCI_GetCurrentFaults) for MCI_GetCurrentFaults
    mc_api.o(.ARM.exidx.text.MC_GetCurrentFaultsMotor1) refers to mc_api.o(.text.MC_GetCurrentFaultsMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetSTMStateMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_GetSTMStateMotor1) refers to mc_interface.o(.text.MCI_GetSTMState) for MCI_GetSTMState
    mc_api.o(.ARM.exidx.text.MC_GetSTMStateMotor1) refers to mc_api.o(.text.MC_GetSTMStateMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_SetPolarizationOffsetsMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_SetPolarizationOffsetsMotor1) refers to mc_interface.o(.text.MCI_SetCalibratedOffsetsMotor) for MCI_SetCalibratedOffsetsMotor
    mc_api.o(.ARM.exidx.text.MC_SetPolarizationOffsetsMotor1) refers to mc_api.o(.text.MC_SetPolarizationOffsetsMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetPolarizationOffsetsMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_GetPolarizationOffsetsMotor1) refers to mc_interface.o(.text.MCI_GetCalibratedOffsetsMotor) for MCI_GetCalibratedOffsetsMotor
    mc_api.o(.ARM.exidx.text.MC_GetPolarizationOffsetsMotor1) refers to mc_api.o(.text.MC_GetPolarizationOffsetsMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_StartPolarizationOffsetsMeasurementMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_StartPolarizationOffsetsMeasurementMotor1) refers to mc_interface.o(.text.MCI_StartOffsetMeasurments) for MCI_StartOffsetMeasurments
    mc_api.o(.ARM.exidx.text.MC_StartPolarizationOffsetsMeasurementMotor1) refers to mc_api.o(.text.MC_StartPolarizationOffsetsMeasurementMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetAveragePowerMotor1_F) refers to mc_config.o(.data.pMPM) for pMPM
    mc_api.o(.text.MC_GetAveragePowerMotor1_F) refers to pqd_motor_power_measurement.o(.text.PQD_GetAvrgElMotorPowerW) for PQD_GetAvrgElMotorPowerW
    mc_api.o(.ARM.exidx.text.MC_GetAveragePowerMotor1_F) refers to mc_api.o(.text.MC_GetAveragePowerMotor1_F) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetControlPositionStatusMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_GetControlPositionStatusMotor1) refers to mc_interface.o(.text.MCI_GetCtrlPositionState) for MCI_GetCtrlPositionState
    mc_api.o(.ARM.exidx.text.MC_GetControlPositionStatusMotor1) refers to mc_api.o(.text.MC_GetControlPositionStatusMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetAlignmentStatusMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_GetAlignmentStatusMotor1) refers to mc_interface.o(.text.MCI_GetAlignmentStatus) for MCI_GetAlignmentStatus
    mc_api.o(.ARM.exidx.text.MC_GetAlignmentStatusMotor1) refers to mc_api.o(.text.MC_GetAlignmentStatusMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetCurrentPosition1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_GetCurrentPosition1) refers to mc_interface.o(.text.MCI_GetCurrentPosition) for MCI_GetCurrentPosition
    mc_api.o(.ARM.exidx.text.MC_GetCurrentPosition1) refers to mc_api.o(.text.MC_GetCurrentPosition1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetTargetPosition1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_GetTargetPosition1) refers to mc_interface.o(.text.MCI_GetTargetPosition) for MCI_GetTargetPosition
    mc_api.o(.ARM.exidx.text.MC_GetTargetPosition1) refers to mc_api.o(.text.MC_GetTargetPosition1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetMoveDuration1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.text.MC_GetMoveDuration1) refers to mc_interface.o(.text.MCI_GetMoveDuration) for MCI_GetMoveDuration
    mc_api.o(.ARM.exidx.text.MC_GetMoveDuration1) refers to mc_api.o(.text.MC_GetMoveDuration1) for [Anonymous Symbol]
    mc_api.o(.ARM.exidx.text.MC_ProfilerCommand) refers to mc_api.o(.text.MC_ProfilerCommand) for [Anonymous Symbol]
    mc_config.o(.data.PWM_Handle_M1) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_GetPhaseCurrents) for R3_1_GetPhaseCurrents
    mc_config.o(.data.PWM_Handle_M1) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOffPWM) for R3_1_SwitchOffPWM
    mc_config.o(.data.PWM_Handle_M1) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOnPWM) for R3_1_SwitchOnPWM
    mc_config.o(.data.PWM_Handle_M1) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration) for R3_1_CurrentReadingCalibration
    mc_config.o(.data.PWM_Handle_M1) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_TurnOnLowSides) for R3_1_TurnOnLowSides
    mc_config.o(.data.PWM_Handle_M1) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointSectX) for R3_1_SetADCSampPointSectX
    mc_config.o(.data.PWM_Handle_M1) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLDetectionModeEnable) for R3_1_RLDetectionModeEnable
    mc_config.o(.data.PWM_Handle_M1) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLDetectionModeDisable) for R3_1_RLDetectionModeDisable
    mc_config.o(.data.PWM_Handle_M1) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLDetectionModeSetDuty) for R3_1_RLDetectionModeSetDuty
    mc_config.o(.data.PWM_Handle_M1) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLTurnOnLowSidesAndStart) for R3_1_RLTurnOnLowSidesAndStart
    mc_config.o(.data.PWM_Handle_M1) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_SetOffsetCalib) for R3_1_SetOffsetCalib
    mc_config.o(.data.PWM_Handle_M1) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_GetOffsetCalib) for R3_1_GetOffsetCalib
    mc_config.o(.data.PWM_Handle_M1) refers to mc_parameters.o(.rodata.R3_1_ParamsM1) for R3_1_ParamsM1
    mc_config.o(.data.BusVoltageSensor_M1) refers to mc_config.o(.bss.RealBusVoltageSensorFilterBufferM1) for [Anonymous Symbol]
    mc_config.o(.data.pSTC) refers to mc_config.o(.data.SpeednTorqCtrlM1) for SpeednTorqCtrlM1
    mc_config.o(.data.pTemperatureSensor) refers to mc_config.o(.data.TempSensor_M1) for TempSensor_M1
    mc_config.o(.data.pPIDIq) refers to mc_config.o(.data.PIDIqHandle_M1) for PIDIqHandle_M1
    mc_config.o(.data.pPIDId) refers to mc_config.o(.data.PIDIdHandle_M1) for PIDIdHandle_M1
    mc_config.o(.data.pMPM) refers to mc_config.o(.data.PQD_MotorPowMeasM1) for PQD_MotorPowMeasM1
    mc_config.o(.data.pPosCtrl) refers to mc_config.o(.data.PosCtrlM1) for PosCtrlM1
    mcp_config.o(.data.aspepOverUartA) refers to aspep.o(.text.ASPEP_getBuffer) for ASPEP_getBuffer
    mcp_config.o(.data.aspepOverUartA) refers to aspep.o(.text.ASPEP_sendPacket) for ASPEP_sendPacket
    mcp_config.o(.data.aspepOverUartA) refers to aspep.o(.text.ASPEP_RXframeProcess) for ASPEP_RXframeProcess
    mcp_config.o(.data.aspepOverUartA) refers to mcp_config.o(.data.UASPEP_A) for [Anonymous Symbol]
    mcp_config.o(.data.aspepOverUartA) refers to mcp_config.o(.bss.MCPSyncRXBuff) for [Anonymous Symbol]
    mcp_config.o(.data.aspepOverUartA) refers to mcp_config.o(.bss.MCPSyncTxBuff) for [Anonymous Symbol]
    mcp_config.o(.data.aspepOverUartA) refers to mcp_config.o(.bss.MCPAsyncBuffUARTA_A) for [Anonymous Symbol]
    mcp_config.o(.data.aspepOverUartA) refers to mcp_config.o(.bss.MCPAsyncBuffUARTA_B) for [Anonymous Symbol]
    mcp_config.o(.data.aspepOverUartA) refers to usart_aspep_driver.o(.text.UASPEP_INIT) for UASPEP_INIT
    mcp_config.o(.data.aspepOverUartA) refers to usart_aspep_driver.o(.text.UASPEP_IDLE_ENABLE) for UASPEP_IDLE_ENABLE
    mcp_config.o(.data.aspepOverUartA) refers to usart_aspep_driver.o(.text.UASPEP_RECEIVE_BUFFER) for UASPEP_RECEIVE_BUFFER
    mcp_config.o(.data.aspepOverUartA) refers to usart_aspep_driver.o(.text.UASPEP_SEND_PACKET) for UASPEP_SEND_PACKET
    mcp_config.o(.data.MCP_Over_UartA) refers to mcp_config.o(.data.aspepOverUartA) for aspepOverUartA
    mcp_config.o(.data.MCPA_UART_A) refers to mcp_config.o(.data.aspepOverUartA) for aspepOverUartA
    mcp_config.o(.data.MCPA_UART_A) refers to mcp_config.o(.bss.dataPtrTableA) for [Anonymous Symbol]
    mcp_config.o(.data.MCPA_UART_A) refers to mcp_config.o(.bss.dataPtrTableBuffA) for [Anonymous Symbol]
    mcp_config.o(.data.MCPA_UART_A) refers to mcp_config.o(.bss.dataSizeTableA) for [Anonymous Symbol]
    mcp_config.o(.data.MCPA_UART_A) refers to mcp_config.o(.bss.dataSizeTableBuffA) for [Anonymous Symbol]
    mc_tasks.o(.text.MCboot) refers to mc_tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.PWM_Handle_M1) for PWM_Handle_M1
    mc_tasks.o(.text.MCboot) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_Init) for R3_1_Init
    mc_tasks.o(.text.MCboot) refers to mcp_config.o(.data.aspepOverUartA) for aspepOverUartA
    mc_tasks.o(.text.MCboot) refers to aspep.o(.text.ASPEP_start) for ASPEP_start
    mc_tasks.o(.text.MCboot) refers to pwm_common.o(.text.startTimers) for startTimers
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.PIDSpeedHandle_M1) for PIDSpeedHandle_M1
    mc_tasks.o(.text.MCboot) refers to pid_regulator.o(.text.PID_HandleInit) for PID_HandleInit
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.ENCODER_M1) for ENCODER_M1
    mc_tasks.o(.text.MCboot) refers to encoder_speed_pos_fdbk.o(.text.ENC_Init) for ENC_Init
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.pSTC) for pSTC
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.EncAlignCtrlM1) for EncAlignCtrlM1
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.VirtualSpeedSensorM1) for VirtualSpeedSensorM1
    mc_tasks.o(.text.MCboot) refers to enc_align_ctrl.o(.text.EAC_Init) for EAC_Init
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.PID_PosParamsM1) for PID_PosParamsM1
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.PosCtrlM1) for PosCtrlM1
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.SpeednTorqCtrlM1) for SpeednTorqCtrlM1
    mc_tasks.o(.text.MCboot) refers to trajectory_ctrl.o(.text.TC_Init) for TC_Init
    mc_tasks.o(.text.MCboot) refers to speed_torq_ctrl.o(.text.STC_Init) for STC_Init
    mc_tasks.o(.text.MCboot) refers to virtual_speed_sensor.o(.text.VSS_Init) for VSS_Init
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.PIDIqHandle_M1) for PIDIqHandle_M1
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.PIDIdHandle_M1) for PIDIdHandle_M1
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.VbusRegConv_M1) for VbusRegConv_M1
    mc_tasks.o(.text.MCboot) refers to regular_conversion_manager.o(.text.RCM_RegisterRegConv) for RCM_RegisterRegConv
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.BusVoltageSensor_M1) for BusVoltageSensor_M1
    mc_tasks.o(.text.MCboot) refers to r_divider_bus_voltage_sensor.o(.text.RVBS_Init) for RVBS_Init
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.pMPM) for pMPM
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.TempRegConv_M1) for TempRegConv_M1
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.TempSensor_M1) for TempSensor_M1
    mc_tasks.o(.text.MCboot) refers to ntc_temperature_sensor.o(.text.NTC_Init) for NTC_Init
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.RampExtMngrHFParamsM1) for RampExtMngrHFParamsM1
    mc_tasks.o(.text.MCboot) refers to ramp_ext_mngr.o(.text.REMNG_Init) for REMNG_Init
    mc_tasks.o(.text.MCboot) refers to mc_tasks.o(.text.FOC_Clear) for FOC_Clear
    mc_tasks.o(.text.MCboot) refers to speed_torq_ctrl.o(.text.STC_GetDefaultIqdref) for STC_GetDefaultIqdref
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.pPosCtrl) for pPosCtrl
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.bss.Mci) for Mci
    mc_tasks.o(.text.MCboot) refers to mc_interface.o(.text.MCI_Init) for MCI_Init
    mc_tasks.o(.text.MCboot) refers to mc_parameters.o(.data.scaleParams_M1) for scaleParams_M1
    mc_tasks.o(.text.MCboot) refers to speed_torq_ctrl.o(.text.STC_GetMecSpeedRefUnitDefault) for STC_GetMecSpeedRefUnitDefault
    mc_tasks.o(.text.MCboot) refers to mc_interface.o(.text.MCI_ExecSpeedRamp) for MCI_ExecSpeedRamp
    mc_tasks.o(.text.MCboot) refers to mc_perf.o(.text.MC_Perf_Measure_Init) for MC_Perf_Measure_Init
    mc_tasks.o(.text.MCboot) refers to mc_app_hooks.o(.text.MC_APP_BootHook) for MC_APP_BootHook
    mc_tasks.o(.ARM.exidx.text.MCboot) refers to mc_tasks.o(.text.MCboot) for [Anonymous Symbol]
    mc_tasks.o(.text.FOC_Clear) refers to mc_tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    mc_tasks.o(.text.FOC_Clear) refers to mc_config.o(.data.pPIDIq) for pPIDIq
    mc_tasks.o(.text.FOC_Clear) refers to pid_regulator.o(.text.PID_SetIntegralTerm) for PID_SetIntegralTerm
    mc_tasks.o(.text.FOC_Clear) refers to mc_config.o(.data.pPIDId) for pPIDId
    mc_tasks.o(.text.FOC_Clear) refers to mc_config.o(.data.pSTC) for pSTC
    mc_tasks.o(.text.FOC_Clear) refers to speed_torq_ctrl.o(.text.STC_Clear) for STC_Clear
    mc_tasks.o(.text.FOC_Clear) refers to pwm_curr_fdbk.o(.text.PWMC_SwitchOffPWM) for PWMC_SwitchOffPWM
    mc_tasks.o(.text.FOC_Clear) refers to mc_perf.o(.text.MC_Perf_Clear) for MC_Perf_Clear
    mc_tasks.o(.ARM.exidx.text.FOC_Clear) refers to mc_tasks.o(.text.FOC_Clear) for [Anonymous Symbol]
    mc_tasks.o(.text.MC_RunMotorControlTasks) refers to mc_tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    mc_tasks.o(.text.MC_RunMotorControlTasks) refers to mc_tasks.o(.text.MC_Scheduler) for MC_Scheduler
    mc_tasks.o(.ARM.exidx.text.MC_RunMotorControlTasks) refers to mc_tasks.o(.text.MC_RunMotorControlTasks) for [Anonymous Symbol]
    mc_tasks.o(.text.MC_Scheduler) refers to mc_tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    mc_tasks.o(.text.MC_Scheduler) refers to mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) for TSK_MediumFrequencyTaskM1
    mc_tasks.o(.text.MC_Scheduler) refers to mc_app_hooks.o(.text.MC_APP_PostMediumFrequencyHook_M1) for MC_APP_PostMediumFrequencyHook_M1
    mc_tasks.o(.text.MC_Scheduler) refers to mcp_config.o(.data.MCP_Over_UartA) for MCP_Over_UartA
    mc_tasks.o(.text.MC_Scheduler) refers to mcp.o(.text.MCP_ReceivedPacket) for MCP_ReceivedPacket
    mc_tasks.o(.ARM.exidx.text.MC_Scheduler) refers to mc_tasks.o(.text.MC_Scheduler) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_MF_StopProcessing) refers to mc_tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    mc_tasks.o(.text.TSK_MF_StopProcessing) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOffPWM) for R3_1_SwitchOffPWM
    mc_tasks.o(.text.TSK_MF_StopProcessing) refers to mc_tasks.o(.text.FOC_Clear) for FOC_Clear
    mc_tasks.o(.text.TSK_MF_StopProcessing) refers to mc_config.o(.data.pMPM) for pMPM
    mc_tasks.o(.text.TSK_MF_StopProcessing) refers to pqd_motor_power_measurement.o(.text.PQD_Clear) for PQD_Clear
    mc_tasks.o(.text.TSK_MF_StopProcessing) refers to mc_tasks.o(.text.TSK_SetStopPermanencyTimeM1) for TSK_SetStopPermanencyTimeM1
    mc_tasks.o(.text.TSK_MF_StopProcessing) refers to mc_config.o(.bss.Mci) for Mci
    mc_tasks.o(.ARM.exidx.text.TSK_MF_StopProcessing) refers to mc_tasks.o(.text.TSK_MF_StopProcessing) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_SetStopPermanencyTimeM1) refers to mc_tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    mc_tasks.o(.ARM.exidx.text.TSK_SetStopPermanencyTimeM1) refers to mc_tasks.o(.text.TSK_SetStopPermanencyTimeM1) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_perf.o(.text.MC_BG_Perf_Measure_Start) for MC_BG_Perf_Measure_Start
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_config.o(.data.ENCODER_M1) for ENCODER_M1
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to encoder_speed_pos_fdbk.o(.text.ENC_CalcAvrgMecSpeedUnit) for ENC_CalcAvrgMecSpeedUnit
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_config.o(.data.pMPM) for pMPM
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to pqd_motor_power_measurement.o(.text.PQD_CalcElMotorPower) for PQD_CalcElMotorPower
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_config.o(.bss.Mci) for Mci
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_interface.o(.text.MCI_GetCurrentFaults) for MCI_GetCurrentFaults
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_interface.o(.text.MCI_GetOccurredFaults) for MCI_GetOccurredFaults
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_perf.o(.text.MC_BG_Perf_Measure_Stop) for MC_BG_Perf_Measure_Stop
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to pwm_curr_fdbk.o(.text.PWMC_CurrentReadingCalibr) for PWMC_CurrentReadingCalibr
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_TurnOnLowSides) for R3_1_TurnOnLowSides
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_tasks.o(.text.TSK_SetChargeBootCapDelayM1) for TSK_SetChargeBootCapDelayM1
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_tasks.o(.text.TSK_MF_StopProcessing) for TSK_MF_StopProcessing
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_tasks.o(.text.TSK_StopPermanencyTimeHasElapsedM1) for TSK_StopPermanencyTimeHasElapsedM1
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_config.o(.data.EncAlignCtrlM1) for EncAlignCtrlM1
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to enc_align_ctrl.o(.text.EAC_IsAligned) for EAC_IsAligned
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to enc_align_ctrl.o(.text.EAC_Exec) for EAC_Exec
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOffPWM) for R3_1_SwitchOffPWM
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_config.o(.data.pSTC) for pSTC
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to speed_torq_ctrl.o(.text.STC_SetControlMode) for STC_SetControlMode
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to speed_torq_ctrl.o(.text.STC_SetSpeedSensor) for STC_SetSpeedSensor
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_tasks.o(.text.FOC_Clear) for FOC_Clear
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_tasks.o(.text.TSK_SetStopPermanencyTimeM1) for TSK_SetStopPermanencyTimeM1
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_config.o(.data.pPosCtrl) for pPosCtrl
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to trajectory_ctrl.o(.text.TC_PositionRegulation) for TC_PositionRegulation
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_interface.o(.text.MCI_ExecBufferedCommands) for MCI_ExecBufferedCommands
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_tasks.o(.text.FOC_CalcCurrRef) for FOC_CalcCurrRef
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_tasks.o(.text.TSK_ChargeBootCapDelayHasElapsedM1) for TSK_ChargeBootCapDelayHasElapsedM1
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_config.o(.data.VirtualSpeedSensorM1) for VirtualSpeedSensorM1
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to encoder_speed_pos_fdbk.o(.text.ENC_Clear) for ENC_Clear
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_tasks.o(.text.FOC_InitAdditionalMethods) for FOC_InitAdditionalMethods
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to speed_torq_ctrl.o(.text.STC_ForceSpeedReferenceToCurrentSpeed) for STC_ForceSpeedReferenceToCurrentSpeed
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to pqd_motor_power_measurement.o(.text.PQD_Clear) for PQD_Clear
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOnPWM) for R3_1_SwitchOnPWM
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to trajectory_ctrl.o(.text.TC_EncAlignmentCommand) for TC_EncAlignmentCommand
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to speed_torq_ctrl.o(.text.STC_CalcTorqueReference) for STC_CalcTorqueReference
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to enc_align_ctrl.o(.text.EAC_StartAlignment) for EAC_StartAlignment
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to pwm_curr_fdbk.o(.text.PWMC_SwitchOnPWM) for PWMC_SwitchOnPWM
    mc_tasks.o(.ARM.exidx.text.TSK_MediumFrequencyTaskM1) refers to mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_SetChargeBootCapDelayM1) refers to mc_tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    mc_tasks.o(.ARM.exidx.text.TSK_SetChargeBootCapDelayM1) refers to mc_tasks.o(.text.TSK_SetChargeBootCapDelayM1) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_ChargeBootCapDelayHasElapsedM1) refers to mc_tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    mc_tasks.o(.ARM.exidx.text.TSK_ChargeBootCapDelayHasElapsedM1) refers to mc_tasks.o(.text.TSK_ChargeBootCapDelayHasElapsedM1) for [Anonymous Symbol]
    mc_tasks.o(.ARM.exidx.text.FOC_InitAdditionalMethods) refers to mc_tasks.o(.text.FOC_InitAdditionalMethods) for [Anonymous Symbol]
    mc_tasks.o(.text.FOC_CalcCurrRef) refers to mc_tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    mc_tasks.o(.text.FOC_CalcCurrRef) refers to mc_config.o(.data.pSTC) for pSTC
    mc_tasks.o(.text.FOC_CalcCurrRef) refers to speed_torq_ctrl.o(.text.STC_CalcTorqueReference) for STC_CalcTorqueReference
    mc_tasks.o(.ARM.exidx.text.FOC_CalcCurrRef) refers to mc_tasks.o(.text.FOC_CalcCurrRef) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_StopPermanencyTimeHasElapsedM1) refers to mc_tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    mc_tasks.o(.ARM.exidx.text.TSK_StopPermanencyTimeHasElapsedM1) refers to mc_tasks.o(.text.TSK_StopPermanencyTimeHasElapsedM1) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_perf.o(.text.MC_Perf_Measure_Start) for MC_Perf_Measure_Start
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_config.o(.data.ENCODER_M1) for ENCODER_M1
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to encoder_speed_pos_fdbk.o(.text.ENC_CalcAngle) for ENC_CalcAngle
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_config.o(.data.pSTC) for pSTC
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to speed_torq_ctrl.o(.text.STC_GetSpeedSensor) for STC_GetSpeedSensor
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to speed_pos_fdbk.o(.text.SPD_GetElAngle) for SPD_GetElAngle
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to pwm_curr_fdbk.o(.text.PWMC_GetPhaseCurrents) for PWMC_GetPhaseCurrents
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_math.o(.text.MCM_Clarke) for MCM_Clarke
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_math.o(.text.MCM_Park) for MCM_Park
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_config.o(.data.pPIDIq) for pPIDIq
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to pid_regulator.o(.text.PI_Controller) for PI_Controller
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_config.o(.data.pPIDId) for pPIDId
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_config.o(.data.CircleLimitationM1) for CircleLimitationM1
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to circle_limitation.o(.text.Circle_Limitation) for Circle_Limitation
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to speed_pos_fdbk.o(.text.SPD_GetInstElSpeedDpp) for SPD_GetInstElSpeedDpp
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_math.o(.text.MCM_Rev_Park) for MCM_Rev_Park
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to pwm_curr_fdbk.o(.text.PWMC_SetPhaseVoltage) for PWMC_SetPhaseVoltage
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_config.o(.bss.Mci) for Mci
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_interface.o(.text.MCI_FaultProcessing) for MCI_FaultProcessing
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mcpa.o(.bss.GLOBAL_TIMESTAMP) for GLOBAL_TIMESTAMP
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mcp_config.o(.data.MCPA_UART_A) for MCPA_UART_A
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mcpa.o(.text.MCPA_dataLog) for MCPA_dataLog
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_perf.o(.text.MC_Perf_Measure_Stop) for MC_Perf_Measure_Stop
    mc_tasks.o(.ARM.exidx.text.TSK_HighFrequencyTask) refers to mc_tasks.o(.text.TSK_HighFrequencyTask) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_SafetyTask) refers to mc_tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    mc_tasks.o(.text.TSK_SafetyTask) refers to mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) for TSK_SafetyTask_PWMOFF
    mc_tasks.o(.text.TSK_SafetyTask) refers to regular_conversion_manager.o(.text.RCM_ExecUserConv) for RCM_ExecUserConv
    mc_tasks.o(.ARM.exidx.text.TSK_SafetyTask) refers to mc_tasks.o(.text.TSK_SafetyTask) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to mc_config.o(.data.TempRegConv_M1) for TempRegConv_M1
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to regular_conversion_manager.o(.text.RCM_ExecRegularConv) for RCM_ExecRegularConv
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to mc_config.o(.data.TempSensor_M1) for TempSensor_M1
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to ntc_temperature_sensor.o(.text.NTC_CalcAvTemp) for NTC_CalcAvTemp
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to mc_tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to pwm_curr_fdbk.o(.text.PWMC_IsFaultOccurred) for PWMC_IsFaultOccurred
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to mc_config.o(.data.VbusRegConv_M1) for VbusRegConv_M1
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to mc_config.o(.data.BusVoltageSensor_M1) for BusVoltageSensor_M1
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to r_divider_bus_voltage_sensor.o(.text.RVBS_CalcAvVbus) for RVBS_CalcAvVbus
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to mc_config.o(.bss.Mci) for Mci
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to mc_interface.o(.text.MCI_FaultProcessing) for MCI_FaultProcessing
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to mc_interface.o(.text.MCI_GetFaultState) for MCI_GetFaultState
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to enc_align_ctrl.o(.text.EAC_SetRestartState) for EAC_SetRestartState
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to pwm_curr_fdbk.o(.text.PWMC_SwitchOffPWM) for PWMC_SwitchOffPWM
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to mcp_config.o(.data.MCPA_UART_A) for MCPA_UART_A
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to mcpa.o(.text.MCPA_flushDataLog) for MCPA_flushDataLog
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to mc_tasks.o(.text.FOC_Clear) for FOC_Clear
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to mc_config.o(.data.pMPM) for pMPM
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to pqd_motor_power_measurement.o(.text.PQD_Clear) for PQD_Clear
    mc_tasks.o(.ARM.exidx.text.TSK_SafetyTask_PWMOFF) refers to mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) for [Anonymous Symbol]
    mc_tasks.o(.text.GetMCI) refers to mc_config.o(.bss.Mci) for Mci
    mc_tasks.o(.ARM.exidx.text.GetMCI) refers to mc_tasks.o(.text.GetMCI) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_HardwareFaultTask) refers to mc_tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    mc_tasks.o(.text.TSK_HardwareFaultTask) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOffPWM) for R3_1_SwitchOffPWM
    mc_tasks.o(.text.TSK_HardwareFaultTask) refers to mc_config.o(.bss.Mci) for Mci
    mc_tasks.o(.text.TSK_HardwareFaultTask) refers to mc_interface.o(.text.MCI_FaultProcessing) for MCI_FaultProcessing
    mc_tasks.o(.ARM.exidx.text.TSK_HardwareFaultTask) refers to mc_tasks.o(.text.TSK_HardwareFaultTask) for [Anonymous Symbol]
    mc_tasks.o(.text.startMediumFrequencyTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    mc_tasks.o(.text.startMediumFrequencyTask) refers to mc_tasks.o(.text.MC_RunMotorControlTasks) for MC_RunMotorControlTasks
    mc_tasks.o(.ARM.exidx.text.startMediumFrequencyTask) refers to mc_tasks.o(.text.startMediumFrequencyTask) for [Anonymous Symbol]
    mc_tasks.o(.text.StartSafetyTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    mc_tasks.o(.text.StartSafetyTask) refers to mc_tasks.o(.text.TSK_SafetyTask) for TSK_SafetyTask
    mc_tasks.o(.ARM.exidx.text.StartSafetyTask) refers to mc_tasks.o(.text.StartSafetyTask) for [Anonymous Symbol]
    mc_tasks.o(.text.UI_HandleStartStopButton_cb) refers to mc_api.o(.text.MC_GetSTMStateMotor1) for MC_GetSTMStateMotor1
    mc_tasks.o(.text.UI_HandleStartStopButton_cb) refers to mc_api.o(.text.MC_StopMotor1) for MC_StopMotor1
    mc_tasks.o(.text.UI_HandleStartStopButton_cb) refers to mc_api.o(.text.MC_StartMotor1) for MC_StartMotor1
    mc_tasks.o(.ARM.exidx.text.UI_HandleStartStopButton_cb) refers to mc_tasks.o(.text.UI_HandleStartStopButton_cb) for [Anonymous Symbol]
    mc_tasks.o(.ARM.exidx.text.mc_lock_pins) refers to mc_tasks.o(.text.mc_lock_pins) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_Clear) refers to pwm_curr_fdbk.o(.text.PWMC_Clear) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_SetOffsetCalib) refers to pwm_curr_fdbk.o(.text.PWMC_SetOffsetCalib) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_GetOffsetCalib) refers to pwm_curr_fdbk.o(.text.PWMC_GetOffsetCalib) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_GetPhaseCurrents) refers to pwm_curr_fdbk.o(.text.PWMC_GetPhaseCurrents) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_SetPhaseVoltage) refers to pwm_curr_fdbk.o(.text.PWMC_SetPhaseVoltage) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_SwitchOffPWM) refers to pwm_curr_fdbk.o(.text.PWMC_SwitchOffPWM) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_SwitchOnPWM) refers to pwm_curr_fdbk.o(.text.PWMC_SwitchOnPWM) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.text.PWMC_CurrentReadingCalibr) refers to pwm_curr_fdbk.o(.text.PWMC_SwitchOffPWM) for PWMC_SwitchOffPWM
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_CurrentReadingCalibr) refers to pwm_curr_fdbk.o(.text.PWMC_CurrentReadingCalibr) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.text.PWMC_CalcPhaseCurrentsEst) refers to mc_math.o(.text.MCM_Rev_Park) for MCM_Rev_Park
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_CalcPhaseCurrentsEst) refers to pwm_curr_fdbk.o(.text.PWMC_CalcPhaseCurrentsEst) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_TurnOnLowSides) refers to pwm_curr_fdbk.o(.text.PWMC_TurnOnLowSides) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_OCP_Handler) refers to pwm_curr_fdbk.o(.text.PWMC_OCP_Handler) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_DP_Handler) refers to pwm_curr_fdbk.o(.text.PWMC_DP_Handler) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_OVP_Handler) refers to pwm_curr_fdbk.o(.text.PWMC_OVP_Handler) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_IsFaultOccurred) refers to pwm_curr_fdbk.o(.text.PWMC_IsFaultOccurred) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_OCPSetReferenceVoltage) refers to pwm_curr_fdbk.o(.text.PWMC_OCPSetReferenceVoltage) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_GetTurnOnLowSidesAction) refers to pwm_curr_fdbk.o(.text.PWMC_GetTurnOnLowSidesAction) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_DPWM_ModeEnable) refers to pwm_curr_fdbk.o(.text.PWMC_DPWM_ModeEnable) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_DPWM_ModeDisable) refers to pwm_curr_fdbk.o(.text.PWMC_DPWM_ModeDisable) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_GetDPWM_Mode) refers to pwm_curr_fdbk.o(.text.PWMC_GetDPWM_Mode) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RLDetectionModeEnable) refers to pwm_curr_fdbk.o(.text.PWMC_RLDetectionModeEnable) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RLDetectionModeDisable) refers to pwm_curr_fdbk.o(.text.PWMC_RLDetectionModeDisable) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RLDetectionModeSetDuty) refers to pwm_curr_fdbk.o(.text.PWMC_RLDetectionModeSetDuty) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RLTurnOnLowSidesAndStart) refers to pwm_curr_fdbk.o(.text.PWMC_RLTurnOnLowSidesAndStart) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_SetAlignFlag) refers to pwm_curr_fdbk.o(.text.PWMC_SetAlignFlag) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterGetPhaseCurrentsCallBack) refers to pwm_curr_fdbk.o(.text.PWMC_RegisterGetPhaseCurrentsCallBack) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterSwitchOffPwmCallBack) refers to pwm_curr_fdbk.o(.text.PWMC_RegisterSwitchOffPwmCallBack) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterSwitchonPwmCallBack) refers to pwm_curr_fdbk.o(.text.PWMC_RegisterSwitchonPwmCallBack) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterReadingCalibrationCallBack) refers to pwm_curr_fdbk.o(.text.PWMC_RegisterReadingCalibrationCallBack) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterTurnOnLowSidesCallBack) refers to pwm_curr_fdbk.o(.text.PWMC_RegisterTurnOnLowSidesCallBack) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterSampPointSectXCallBack) refers to pwm_curr_fdbk.o(.text.PWMC_RegisterSampPointSectXCallBack) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterOCPSetRefVoltageCallBack) refers to pwm_curr_fdbk.o(.text.PWMC_RegisterOCPSetRefVoltageCallBack) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterRLDetectionModeEnableCallBack) refers to pwm_curr_fdbk.o(.text.PWMC_RegisterRLDetectionModeEnableCallBack) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterRLDetectionModeDisableCallBack) refers to pwm_curr_fdbk.o(.text.PWMC_RegisterRLDetectionModeDisableCallBack) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterRLDetectionModeSetDutyCallBack) refers to pwm_curr_fdbk.o(.text.PWMC_RegisterRLDetectionModeSetDutyCallBack) for [Anonymous Symbol]
    regular_conversion_manager.o(.text.RCM_RegisterRegConv_WithCB) refers to regular_conversion_manager.o(.text.RCM_RegisterRegConv) for RCM_RegisterRegConv
    regular_conversion_manager.o(.text.RCM_RegisterRegConv_WithCB) refers to regular_conversion_manager.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    regular_conversion_manager.o(.ARM.exidx.text.RCM_RegisterRegConv_WithCB) refers to regular_conversion_manager.o(.text.RCM_RegisterRegConv_WithCB) for [Anonymous Symbol]
    regular_conversion_manager.o(.text.RCM_RegisterRegConv) refers to regular_conversion_manager.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    regular_conversion_manager.o(.ARM.exidx.text.RCM_RegisterRegConv) refers to regular_conversion_manager.o(.text.RCM_RegisterRegConv) for [Anonymous Symbol]
    regular_conversion_manager.o(.text.RCM_ExecRegularConv) refers to regular_conversion_manager.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    regular_conversion_manager.o(.ARM.exidx.text.RCM_ExecRegularConv) refers to regular_conversion_manager.o(.text.RCM_ExecRegularConv) for [Anonymous Symbol]
    regular_conversion_manager.o(.text.RCM_RequestUserConv) refers to regular_conversion_manager.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    regular_conversion_manager.o(.ARM.exidx.text.RCM_RequestUserConv) refers to regular_conversion_manager.o(.text.RCM_RequestUserConv) for [Anonymous Symbol]
    regular_conversion_manager.o(.text.RCM_GetUserConv) refers to regular_conversion_manager.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    regular_conversion_manager.o(.ARM.exidx.text.RCM_GetUserConv) refers to regular_conversion_manager.o(.text.RCM_GetUserConv) for [Anonymous Symbol]
    regular_conversion_manager.o(.text.RCM_ExecUserConv) refers to regular_conversion_manager.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    regular_conversion_manager.o(.ARM.exidx.text.RCM_ExecUserConv) refers to regular_conversion_manager.o(.text.RCM_ExecUserConv) for [Anonymous Symbol]
    regular_conversion_manager.o(.text.RCM_GetUserConvState) refers to regular_conversion_manager.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    regular_conversion_manager.o(.ARM.exidx.text.RCM_GetUserConvState) refers to regular_conversion_manager.o(.text.RCM_GetUserConvState) for [Anonymous Symbol]
    mc_math.o(.ARM.exidx.text.MCM_Clarke) refers to mc_math.o(.text.MCM_Clarke) for [Anonymous Symbol]
    mc_math.o(.text.MCM_Park) refers to mc_math.o(.text.MCM_Trig_Functions) for MCM_Trig_Functions
    mc_math.o(.ARM.exidx.text.MCM_Park) refers to mc_math.o(.text.MCM_Park) for [Anonymous Symbol]
    mc_math.o(.text.MCM_Trig_Functions) refers to mc_math.o(.rodata.hSin_Cos_Table) for hSin_Cos_Table
    mc_math.o(.ARM.exidx.text.MCM_Trig_Functions) refers to mc_math.o(.text.MCM_Trig_Functions) for [Anonymous Symbol]
    mc_math.o(.text.MCM_Rev_Park) refers to mc_math.o(.text.MCM_Trig_Functions) for MCM_Trig_Functions
    mc_math.o(.ARM.exidx.text.MCM_Rev_Park) refers to mc_math.o(.text.MCM_Rev_Park) for [Anonymous Symbol]
    mc_math.o(.ARM.exidx.text.MCM_Sqrt) refers to mc_math.o(.text.MCM_Sqrt) for [Anonymous Symbol]
    mc_math.o(.ARM.exidx.text.MCM_floatToIntBit) refers to mc_math.o(.text.MCM_floatToIntBit) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_Init) refers to mc_interface.o(.text.MCI_Init) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_ExecSpeedRamp) refers to mc_interface.o(.text.MCI_ExecSpeedRamp) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_ExecSpeedRamp_F) refers to mc_interface.o(.text.MCI_ExecSpeedRamp) for MCI_ExecSpeedRamp
    mc_interface.o(.ARM.exidx.text.MCI_ExecSpeedRamp_F) refers to mc_interface.o(.text.MCI_ExecSpeedRamp_F) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_ExecTorqueRamp) refers to mc_interface.o(.text.MCI_ExecTorqueRamp) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_ExecTorqueRamp_F) refers to mc_interface.o(.text.MCI_ExecTorqueRamp) for MCI_ExecTorqueRamp
    mc_interface.o(.ARM.exidx.text.MCI_ExecTorqueRamp_F) refers to mc_interface.o(.text.MCI_ExecTorqueRamp_F) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_SetCurrentReferences) refers to mc_interface.o(.text.MCI_SetCurrentReferences) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_SetCurrentReferences_F) refers to mc_interface.o(.text.MCI_SetCurrentReferences) for MCI_SetCurrentReferences
    mc_interface.o(.ARM.exidx.text.MCI_SetCurrentReferences_F) refers to mc_interface.o(.text.MCI_SetCurrentReferences_F) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_ExecPositionCommand) refers to speed_torq_ctrl.o(.text.STC_GetSpeedSensor) for STC_GetSpeedSensor
    mc_interface.o(.text.MCI_ExecPositionCommand) refers to speed_pos_fdbk.o(.text.SPD_GetMecAngle) for SPD_GetMecAngle
    mc_interface.o(.text.MCI_ExecPositionCommand) refers to trajectory_ctrl.o(.text.TC_MoveCommand) for TC_MoveCommand
    mc_interface.o(.text.MCI_ExecPositionCommand) refers to trajectory_ctrl.o(.text.TC_FollowCommand) for TC_FollowCommand
    mc_interface.o(.ARM.exidx.text.MCI_ExecPositionCommand) refers to mc_interface.o(.text.MCI_ExecPositionCommand) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_StartMotor) refers to mc_interface.o(.text.MCI_GetSTMState) for MCI_GetSTMState
    mc_interface.o(.text.MCI_StartMotor) refers to mc_interface.o(.text.MCI_GetOccurredFaults) for MCI_GetOccurredFaults
    mc_interface.o(.text.MCI_StartMotor) refers to mc_interface.o(.text.MCI_GetCurrentFaults) for MCI_GetCurrentFaults
    mc_interface.o(.ARM.exidx.text.MCI_StartMotor) refers to mc_interface.o(.text.MCI_StartMotor) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetSTMState) refers to mc_interface.o(.text.MCI_GetSTMState) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetOccurredFaults) refers to mc_interface.o(.text.MCI_GetOccurredFaults) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetCurrentFaults) refers to mc_interface.o(.text.MCI_GetCurrentFaults) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_StartWithPolarizationMotor) refers to mc_interface.o(.text.MCI_GetSTMState) for MCI_GetSTMState
    mc_interface.o(.text.MCI_StartWithPolarizationMotor) refers to mc_interface.o(.text.MCI_GetOccurredFaults) for MCI_GetOccurredFaults
    mc_interface.o(.text.MCI_StartWithPolarizationMotor) refers to mc_interface.o(.text.MCI_GetCurrentFaults) for MCI_GetCurrentFaults
    mc_interface.o(.ARM.exidx.text.MCI_StartWithPolarizationMotor) refers to mc_interface.o(.text.MCI_StartWithPolarizationMotor) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_StartOffsetMeasurments) refers to mc_interface.o(.text.MCI_GetSTMState) for MCI_GetSTMState
    mc_interface.o(.text.MCI_StartOffsetMeasurments) refers to mc_interface.o(.text.MCI_GetOccurredFaults) for MCI_GetOccurredFaults
    mc_interface.o(.text.MCI_StartOffsetMeasurments) refers to mc_interface.o(.text.MCI_GetCurrentFaults) for MCI_GetCurrentFaults
    mc_interface.o(.ARM.exidx.text.MCI_StartOffsetMeasurments) refers to mc_interface.o(.text.MCI_StartOffsetMeasurments) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetCalibratedOffsetsMotor) refers to pwm_curr_fdbk.o(.text.PWMC_GetOffsetCalib) for PWMC_GetOffsetCalib
    mc_interface.o(.ARM.exidx.text.MCI_GetCalibratedOffsetsMotor) refers to mc_interface.o(.text.MCI_GetCalibratedOffsetsMotor) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_SetCalibratedOffsetsMotor) refers to mc_interface.o(.text.MCI_GetSTMState) for MCI_GetSTMState
    mc_interface.o(.text.MCI_SetCalibratedOffsetsMotor) refers to mc_interface.o(.text.MCI_GetOccurredFaults) for MCI_GetOccurredFaults
    mc_interface.o(.text.MCI_SetCalibratedOffsetsMotor) refers to mc_interface.o(.text.MCI_GetCurrentFaults) for MCI_GetCurrentFaults
    mc_interface.o(.text.MCI_SetCalibratedOffsetsMotor) refers to pwm_curr_fdbk.o(.text.PWMC_SetOffsetCalib) for PWMC_SetOffsetCalib
    mc_interface.o(.ARM.exidx.text.MCI_SetCalibratedOffsetsMotor) refers to mc_interface.o(.text.MCI_SetCalibratedOffsetsMotor) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_StopMotor) refers to mc_interface.o(.text.MCI_GetSTMState) for MCI_GetSTMState
    mc_interface.o(.text.MCI_StopMotor) refers to mc_interface.o(.text.MCI_GetOccurredFaults) for MCI_GetOccurredFaults
    mc_interface.o(.text.MCI_StopMotor) refers to mc_interface.o(.text.MCI_GetCurrentFaults) for MCI_GetCurrentFaults
    mc_interface.o(.ARM.exidx.text.MCI_StopMotor) refers to mc_interface.o(.text.MCI_StopMotor) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_FaultAcknowledged) refers to mc_interface.o(.text.MCI_GetSTMState) for MCI_GetSTMState
    mc_interface.o(.text.MCI_FaultAcknowledged) refers to mc_interface.o(.text.MCI_GetCurrentFaults) for MCI_GetCurrentFaults
    mc_interface.o(.ARM.exidx.text.MCI_FaultAcknowledged) refers to mc_interface.o(.text.MCI_FaultAcknowledged) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_FaultProcessing) refers to mc_interface.o(.text.MCI_FaultProcessing) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_ExecBufferedCommands) refers to speed_torq_ctrl.o(.text.STC_SetControlMode) for STC_SetControlMode
    mc_interface.o(.text.MCI_ExecBufferedCommands) refers to speed_torq_ctrl.o(.text.STC_ExecRamp) for STC_ExecRamp
    mc_interface.o(.ARM.exidx.text.MCI_ExecBufferedCommands) refers to mc_interface.o(.text.MCI_ExecBufferedCommands) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_IsCommandAcknowledged) refers to mc_interface.o(.text.MCI_IsCommandAcknowledged) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetCtrlPositionState) refers to trajectory_ctrl.o(.text.TC_GetControlPositionStatus) for TC_GetControlPositionStatus
    mc_interface.o(.ARM.exidx.text.MCI_GetCtrlPositionState) refers to mc_interface.o(.text.MCI_GetCtrlPositionState) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetAlignmentStatus) refers to trajectory_ctrl.o(.text.TC_GetAlignmentStatus) for TC_GetAlignmentStatus
    mc_interface.o(.ARM.exidx.text.MCI_GetAlignmentStatus) refers to mc_interface.o(.text.MCI_GetAlignmentStatus) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetCurrentPosition) refers to trajectory_ctrl.o(.text.TC_GetCurrentPosition) for TC_GetCurrentPosition
    mc_interface.o(.ARM.exidx.text.MCI_GetCurrentPosition) refers to mc_interface.o(.text.MCI_GetCurrentPosition) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetTargetPosition) refers to trajectory_ctrl.o(.text.TC_GetTargetPosition) for TC_GetTargetPosition
    mc_interface.o(.ARM.exidx.text.MCI_GetTargetPosition) refers to mc_interface.o(.text.MCI_GetTargetPosition) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetMoveDuration) refers to trajectory_ctrl.o(.text.TC_GetMoveDuration) for TC_GetMoveDuration
    mc_interface.o(.ARM.exidx.text.MCI_GetMoveDuration) refers to mc_interface.o(.text.MCI_GetMoveDuration) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetFaultState) refers to mc_interface.o(.text.MCI_GetFaultState) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetControlMode) refers to mc_interface.o(.text.MCI_GetControlMode) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetImposedMotorDirection) refers to mc_interface.o(.text.MCI_GetImposedMotorDirection) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetLastRampFinalSpeed) refers to mc_interface.o(.text.MCI_GetLastRampFinalSpeed) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetLastRampFinalTorque) refers to mc_interface.o(.text.MCI_GetLastRampFinalTorque) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetLastRampFinalDuration) refers to mc_interface.o(.text.MCI_GetLastRampFinalDuration) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetLastRampFinalSpeed_F) refers to mc_interface.o(.text.MCI_GetLastRampFinalSpeed_F) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_RampCompleted) refers to mc_interface.o(.text.MCI_GetSTMState) for MCI_GetSTMState
    mc_interface.o(.text.MCI_RampCompleted) refers to speed_torq_ctrl.o(.text.STC_RampCompleted) for STC_RampCompleted
    mc_interface.o(.ARM.exidx.text.MCI_RampCompleted) refers to mc_interface.o(.text.MCI_RampCompleted) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_StopSpeedRamp) refers to speed_torq_ctrl.o(.text.STC_StopSpeedRamp) for STC_StopSpeedRamp
    mc_interface.o(.ARM.exidx.text.MCI_StopSpeedRamp) refers to mc_interface.o(.text.MCI_StopSpeedRamp) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_StopRamp) refers to speed_torq_ctrl.o(.text.STC_StopRamp) for STC_StopRamp
    mc_interface.o(.ARM.exidx.text.MCI_StopRamp) refers to mc_interface.o(.text.MCI_StopRamp) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetSpdSensorReliability) refers to speed_torq_ctrl.o(.text.STC_GetSpeedSensor) for STC_GetSpeedSensor
    mc_interface.o(.text.MCI_GetSpdSensorReliability) refers to speed_pos_fdbk.o(.text.SPD_Check) for SPD_Check
    mc_interface.o(.ARM.exidx.text.MCI_GetSpdSensorReliability) refers to mc_interface.o(.text.MCI_GetSpdSensorReliability) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetAvrgMecSpeedUnit) refers to speed_torq_ctrl.o(.text.STC_GetSpeedSensor) for STC_GetSpeedSensor
    mc_interface.o(.text.MCI_GetAvrgMecSpeedUnit) refers to speed_pos_fdbk.o(.text.SPD_GetAvrgMecSpeedUnit) for SPD_GetAvrgMecSpeedUnit
    mc_interface.o(.ARM.exidx.text.MCI_GetAvrgMecSpeedUnit) refers to mc_interface.o(.text.MCI_GetAvrgMecSpeedUnit) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetAvrgMecSpeed_F) refers to speed_torq_ctrl.o(.text.STC_GetSpeedSensor) for STC_GetSpeedSensor
    mc_interface.o(.text.MCI_GetAvrgMecSpeed_F) refers to speed_pos_fdbk.o(.text.SPD_GetAvrgMecSpeedUnit) for SPD_GetAvrgMecSpeedUnit
    mc_interface.o(.ARM.exidx.text.MCI_GetAvrgMecSpeed_F) refers to mc_interface.o(.text.MCI_GetAvrgMecSpeed_F) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetMecSpeedRefUnit) refers to speed_torq_ctrl.o(.text.STC_GetMecSpeedRefUnit) for STC_GetMecSpeedRefUnit
    mc_interface.o(.ARM.exidx.text.MCI_GetMecSpeedRefUnit) refers to mc_interface.o(.text.MCI_GetMecSpeedRefUnit) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetMecSpeedRef_F) refers to speed_torq_ctrl.o(.text.STC_GetMecSpeedRefUnit) for STC_GetMecSpeedRefUnit
    mc_interface.o(.ARM.exidx.text.MCI_GetMecSpeedRef_F) refers to mc_interface.o(.text.MCI_GetMecSpeedRef_F) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetIab) refers to mc_interface.o(.text.MCI_GetIab) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetIab_F) refers to mc_interface.o(.text.MCI_GetIab_F) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetIalphabeta) refers to mc_interface.o(.text.MCI_GetIalphabeta) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetIqd) refers to mc_interface.o(.text.MCI_GetIqd) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetIqd_F) refers to mc_interface.o(.text.MCI_GetIqd_F) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetIqdHF) refers to mc_interface.o(.text.MCI_GetIqdHF) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetIqdref) refers to mc_interface.o(.text.MCI_GetIqdref) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetIqdref_F) refers to mc_interface.o(.text.MCI_GetIqdref_F) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetVqd) refers to mc_interface.o(.text.MCI_GetVqd) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetValphabeta) refers to mc_interface.o(.text.MCI_GetValphabeta) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetElAngledpp) refers to mc_interface.o(.text.MCI_GetElAngledpp) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetTeref) refers to mc_interface.o(.text.MCI_GetTeref) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetTeref_F) refers to mc_interface.o(.text.MCI_GetTeref_F) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetPhaseCurrentAmplitude) refers to mc_math.o(.text.MCM_Sqrt) for MCM_Sqrt
    mc_interface.o(.ARM.exidx.text.MCI_GetPhaseCurrentAmplitude) refers to mc_interface.o(.text.MCI_GetPhaseCurrentAmplitude) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetPhaseVoltageAmplitude) refers to mc_math.o(.text.MCM_Sqrt) for MCM_Sqrt
    mc_interface.o(.ARM.exidx.text.MCI_GetPhaseVoltageAmplitude) refers to mc_interface.o(.text.MCI_GetPhaseVoltageAmplitude) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_Clear_Iqdref) refers to speed_torq_ctrl.o(.text.STC_GetDefaultIqdref) for STC_GetDefaultIqdref
    mc_interface.o(.ARM.exidx.text.MCI_Clear_Iqdref) refers to mc_interface.o(.text.MCI_Clear_Iqdref) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_Clear_PerfMeasure) refers to mc_perf.o(.text.MC_Perf_Clear) for MC_Perf_Clear
    mc_interface.o(.ARM.exidx.text.MCI_Clear_PerfMeasure) refers to mc_interface.o(.text.MCI_Clear_PerfMeasure) for [Anonymous Symbol]
    stm32l4xx_mc_it.o(.text.ADC1_2_IRQHandler) refers to mc_tasks.o(.text.TSK_HighFrequencyTask) for TSK_HighFrequencyTask
    stm32l4xx_mc_it.o(.ARM.exidx.text.ADC1_2_IRQHandler) refers to stm32l4xx_mc_it.o(.text.ADC1_2_IRQHandler) for [Anonymous Symbol]
    stm32l4xx_mc_it.o(.text.TIM1_UP_TIM16_IRQHandler) refers to mc_config.o(.data.PWM_Handle_M1) for PWM_Handle_M1
    stm32l4xx_mc_it.o(.text.TIM1_UP_TIM16_IRQHandler) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_TIMx_UP_IRQHandler) for R3_1_TIMx_UP_IRQHandler
    stm32l4xx_mc_it.o(.ARM.exidx.text.TIM1_UP_TIM16_IRQHandler) refers to stm32l4xx_mc_it.o(.text.TIM1_UP_TIM16_IRQHandler) for [Anonymous Symbol]
    stm32l4xx_mc_it.o(.text.TIM1_BRK_TIM15_IRQHandler) refers to mc_tasks.o(.text.MC_Scheduler) for MC_Scheduler
    stm32l4xx_mc_it.o(.text.TIM1_BRK_TIM15_IRQHandler) refers to mc_config.o(.data.PWM_Handle_M1) for PWM_Handle_M1
    stm32l4xx_mc_it.o(.text.TIM1_BRK_TIM15_IRQHandler) refers to pwm_curr_fdbk.o(.text.PWMC_DP_Handler) for PWMC_DP_Handler
    stm32l4xx_mc_it.o(.text.TIM1_BRK_TIM15_IRQHandler) refers to pwm_curr_fdbk.o(.text.PWMC_OVP_Handler) for PWMC_OVP_Handler
    stm32l4xx_mc_it.o(.ARM.exidx.text.TIM1_BRK_TIM15_IRQHandler) refers to stm32l4xx_mc_it.o(.text.TIM1_BRK_TIM15_IRQHandler) for [Anonymous Symbol]
    stm32l4xx_mc_it.o(.text.TIM3_IRQHandler) refers to mc_config.o(.data.ENCODER_M1) for ENCODER_M1
    stm32l4xx_mc_it.o(.text.TIM3_IRQHandler) refers to encoder_speed_pos_fdbk.o(.text.ENC_IRQHandler) for ENC_IRQHandler
    stm32l4xx_mc_it.o(.ARM.exidx.text.TIM3_IRQHandler) refers to stm32l4xx_mc_it.o(.text.TIM3_IRQHandler) for [Anonymous Symbol]
    stm32l4xx_mc_it.o(.text.DMA1_Channel6_IRQHandler) refers to mcp_config.o(.data.aspepOverUartA) for aspepOverUartA
    stm32l4xx_mc_it.o(.text.DMA1_Channel6_IRQHandler) refers to aspep.o(.text.ASPEP_HWDataReceivedIT) for ASPEP_HWDataReceivedIT
    stm32l4xx_mc_it.o(.ARM.exidx.text.DMA1_Channel6_IRQHandler) refers to stm32l4xx_mc_it.o(.text.DMA1_Channel6_IRQHandler) for [Anonymous Symbol]
    stm32l4xx_mc_it.o(.text.USART2_IRQHandler) refers to mcp_config.o(.data.aspepOverUartA) for aspepOverUartA
    stm32l4xx_mc_it.o(.text.USART2_IRQHandler) refers to aspep.o(.text.ASPEP_HWDataTransmittedIT) for ASPEP_HWDataTransmittedIT
    stm32l4xx_mc_it.o(.text.USART2_IRQHandler) refers to aspep.o(.text.ASPEP_HWDMAReset) for ASPEP_HWDMAReset
    stm32l4xx_mc_it.o(.ARM.exidx.text.USART2_IRQHandler) refers to stm32l4xx_mc_it.o(.text.USART2_IRQHandler) for [Anonymous Symbol]
    stm32l4xx_mc_it.o(.text.HardFault_Handler) refers to mc_tasks.o(.text.TSK_HardwareFaultTask) for TSK_HardwareFaultTask
    stm32l4xx_mc_it.o(.ARM.exidx.text.HardFault_Handler) refers to stm32l4xx_mc_it.o(.text.HardFault_Handler) for [Anonymous Symbol]
    stm32l4xx_mc_it.o(.text.EXTI15_10_IRQHandler) refers to mc_tasks.o(.text.UI_HandleStartStopButton_cb) for UI_HandleStartStopButton_cb
    stm32l4xx_mc_it.o(.ARM.exidx.text.EXTI15_10_IRQHandler) refers to stm32l4xx_mc_it.o(.text.EXTI15_10_IRQHandler) for [Anonymous Symbol]
    register_interface.o(.ARM.exidx.text.RI_SetRegisterGlobal) refers to register_interface.o(.text.RI_SetRegisterGlobal) for [Anonymous Symbol]
    register_interface.o(.ARM.exidx.text.RI_MovString) refers to register_interface.o(.text.RI_MovString) for [Anonymous Symbol]
    register_interface.o(.text.RI_SetRegisterMotor1) refers to mc_config.o(.bss.Mci) for Mci
    register_interface.o(.text.RI_SetRegisterMotor1) refers to mc_interface.o(.text.MCI_GetTeref) for MCI_GetTeref
    register_interface.o(.text.RI_SetRegisterMotor1) refers to mc_interface.o(.text.MCI_ExecTorqueRamp) for MCI_ExecTorqueRamp
    register_interface.o(.text.RI_SetRegisterMotor1) refers to mc_config.o(.data.PIDIdHandle_M1) for PIDIdHandle_M1
    register_interface.o(.text.RI_SetRegisterMotor1) refers to mc_interface.o(.text.MCI_ExecSpeedRamp) for MCI_ExecSpeedRamp
    register_interface.o(.text.RI_SetRegisterMotor1) refers to mc_config.o(.data.PID_PosParamsM1) for PID_PosParamsM1
    register_interface.o(.text.RI_SetRegisterMotor1) refers to mc_interface.o(.text.MCI_GetIqdref) for MCI_GetIqdref
    register_interface.o(.text.RI_SetRegisterMotor1) refers to mc_config.o(.data.PIDIqHandle_M1) for PIDIqHandle_M1
    register_interface.o(.text.RI_SetRegisterMotor1) refers to mc_config.o(.data.PIDSpeedHandle_M1) for PIDSpeedHandle_M1
    register_interface.o(.text.RI_SetRegisterMotor1) refers to mc_interface.o(.text.MCI_GetMecSpeedRefUnit) for MCI_GetMecSpeedRefUnit
    register_interface.o(.text.RI_SetRegisterMotor1) refers to mc_interface.o(.text.MCI_SetCurrentReferences) for MCI_SetCurrentReferences
    register_interface.o(.text.RI_SetRegisterMotor1) refers to mc_interface.o(.text.MCI_ExecPositionCommand) for MCI_ExecPositionCommand
    register_interface.o(.text.RI_SetRegisterMotor1) refers to mcp_config.o(.data.MCPA_UART_A) for MCPA_UART_A
    register_interface.o(.text.RI_SetRegisterMotor1) refers to mcpa.o(.text.MCPA_cfgLog) for MCPA_cfgLog
    register_interface.o(.text.RI_SetRegisterMotor1) refers to pid_regulator.o(.text.PID_SetKI) for PID_SetKI
    register_interface.o(.text.RI_SetRegisterMotor1) refers to pid_regulator.o(.text.PID_SetKD) for PID_SetKD
    register_interface.o(.text.RI_SetRegisterMotor1) refers to pid_regulator.o(.text.PID_SetKPDivisorPOW2) for PID_SetKPDivisorPOW2
    register_interface.o(.text.RI_SetRegisterMotor1) refers to pid_regulator.o(.text.PID_SetKIDivisorPOW2) for PID_SetKIDivisorPOW2
    register_interface.o(.text.RI_SetRegisterMotor1) refers to pid_regulator.o(.text.PID_SetKP) for PID_SetKP
    register_interface.o(.text.RI_SetRegisterMotor1) refers to pid_regulator.o(.text.PID_SetKDDivisorPOW2) for PID_SetKDDivisorPOW2
    register_interface.o(.ARM.exidx.text.RI_SetRegisterMotor1) refers to register_interface.o(.text.RI_SetRegisterMotor1) for [Anonymous Symbol]
    register_interface.o(.text.RI_GetRegisterGlobal) refers to mc_config.o(.bss.Mci) for Mci
    register_interface.o(.text.RI_GetRegisterGlobal) refers to mc_perf.o(.text.MC_Perf_GetCPU_Load) for MC_Perf_GetCPU_Load
    register_interface.o(.text.RI_GetRegisterGlobal) refers to mc_configuration_registers.o(.rodata.FIRMWARE_NAME) for FIRMWARE_NAME
    register_interface.o(.text.RI_GetRegisterGlobal) refers to mc_configuration_registers.o(.rodata.CTL_BOARD) for CTL_BOARD
    register_interface.o(.text.RI_GetRegisterGlobal) refers to mc_configuration_registers.o(.rodata.globalConfig_reg) for globalConfig_reg
    register_interface.o(.text.RI_GetRegisterGlobal) refers to mc_perf.o(.text.MC_Perf_GetMaxCPU_Load) for MC_Perf_GetMaxCPU_Load
    register_interface.o(.text.RI_GetRegisterGlobal) refers to mc_perf.o(.text.MC_Perf_GetMinCPU_Load) for MC_Perf_GetMinCPU_Load
    register_interface.o(.ARM.exidx.text.RI_GetRegisterGlobal) refers to register_interface.o(.text.RI_GetRegisterGlobal) for [Anonymous Symbol]
    register_interface.o(.text.RI_GetRegisterMotor1) refers to mc_config.o(.bss.Mci) for Mci
    register_interface.o(.text.RI_GetRegisterMotor1) refers to mc_interface.o(.text.MCI_GetControlMode) for MCI_GetControlMode
    register_interface.o(.text.RI_GetRegisterMotor1) refers to mc_config.o(.data.PIDSpeedHandle_M1) for PIDSpeedHandle_M1
    register_interface.o(.text.RI_GetRegisterMotor1) refers to pid_regulator.o(.text.PID_GetKP) for PID_GetKP
    register_interface.o(.text.RI_GetRegisterMotor1) refers to mc_config.o(.data.pMPM) for pMPM
    register_interface.o(.text.RI_GetRegisterMotor1) refers to pqd_motor_power_measurement.o(.text.PQD_GetAvrgElMotorPowerW) for PQD_GetAvrgElMotorPowerW
    register_interface.o(.text.RI_GetRegisterMotor1) refers to mc_configuration_registers.o(.data.PWR_BOARD_NAME) for PWR_BOARD_NAME
    register_interface.o(.text.RI_GetRegisterMotor1) refers to mc_configuration_registers.o(.data.MotorConfig_reg) for MotorConfig_reg
    register_interface.o(.text.RI_GetRegisterMotor1) refers to mc_config.o(.data.PosCtrlM1) for PosCtrlM1
    register_interface.o(.text.RI_GetRegisterMotor1) refers to trajectory_ctrl.o(.text.TC_GetAlignmentStatus) for TC_GetAlignmentStatus
    register_interface.o(.text.RI_GetRegisterMotor1) refers to mc_interface.o(.text.MCI_GetAvrgMecSpeedUnit) for MCI_GetAvrgMecSpeedUnit
    register_interface.o(.text.RI_GetRegisterMotor1) refers to mc_interface.o(.text.MCI_GetSTMState) for MCI_GetSTMState
    register_interface.o(.text.RI_GetRegisterMotor1) refers to trajectory_ctrl.o(.text.TC_GetControlPositionStatus) for TC_GetControlPositionStatus
    register_interface.o(.text.RI_GetRegisterMotor1) refers to mc_interface.o(.text.MCI_GetLastRampFinalSpeed) for MCI_GetLastRampFinalSpeed
    register_interface.o(.text.RI_GetRegisterMotor1) refers to mc_interface.o(.text.MCI_GetLastRampFinalDuration) for MCI_GetLastRampFinalDuration
    register_interface.o(.text.RI_GetRegisterMotor1) refers to mc_interface.o(.text.MCI_GetLastRampFinalTorque) for MCI_GetLastRampFinalTorque
    register_interface.o(.text.RI_GetRegisterMotor1) refers to mc_interface.o(.text.MCI_GetIqdref) for MCI_GetIqdref
    register_interface.o(.text.RI_GetRegisterMotor1) refers to trajectory_ctrl.o(.text.TC_GetMoveDuration) for TC_GetMoveDuration
    register_interface.o(.text.RI_GetRegisterMotor1) refers to trajectory_ctrl.o(.text.TC_GetTargetPosition) for TC_GetTargetPosition
    register_interface.o(.text.RI_GetRegisterMotor1) refers to mc_interface.o(.text.MCI_GetMecSpeedRefUnit) for MCI_GetMecSpeedRefUnit
    register_interface.o(.text.RI_GetRegisterMotor1) refers to mc_interface.o(.text.MCI_GetCurrentPosition) for MCI_GetCurrentPosition
    register_interface.o(.text.RI_GetRegisterMotor1) refers to mc_interface.o(.text.MCI_GetFaultState) for MCI_GetFaultState
    register_interface.o(.text.RI_GetRegisterMotor1) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    register_interface.o(.text.RI_GetRegisterMotor1) refers to mc_configuration_registers.o(.data.ApplicationConfig_reg) for ApplicationConfig_reg
    register_interface.o(.text.RI_GetRegisterMotor1) refers to mc_configuration_registers.o(.data.FOCConfig_reg) for FOCConfig_reg
    register_interface.o(.text.RI_GetRegisterMotor1) refers to mc_parameters.o(.data.scaleParams_M1) for scaleParams_M1
    register_interface.o(.text.RI_GetRegisterMotor1) refers to pid_regulator.o(.text.PID_GetKI) for PID_GetKI
    register_interface.o(.text.RI_GetRegisterMotor1) refers to pid_regulator.o(.text.PID_GetKD) for PID_GetKD
    register_interface.o(.text.RI_GetRegisterMotor1) refers to mc_config.o(.data.PIDIqHandle_M1) for PIDIqHandle_M1
    register_interface.o(.text.RI_GetRegisterMotor1) refers to mc_config.o(.data.PIDIdHandle_M1) for PIDIdHandle_M1
    register_interface.o(.text.RI_GetRegisterMotor1) refers to mc_config.o(.data.BusVoltageSensor_M1) for BusVoltageSensor_M1
    register_interface.o(.text.RI_GetRegisterMotor1) refers to bus_voltage_sensor.o(.text.VBS_GetAvBusVoltage_V) for VBS_GetAvBusVoltage_V
    register_interface.o(.text.RI_GetRegisterMotor1) refers to mc_config.o(.data.TempSensor_M1) for TempSensor_M1
    register_interface.o(.text.RI_GetRegisterMotor1) refers to ntc_temperature_sensor.o(.text.NTC_GetAvTemp_C) for NTC_GetAvTemp_C
    register_interface.o(.text.RI_GetRegisterMotor1) refers to mc_interface.o(.text.MCI_GetIab) for MCI_GetIab
    register_interface.o(.text.RI_GetRegisterMotor1) refers to mc_interface.o(.text.MCI_GetIalphabeta) for MCI_GetIalphabeta
    register_interface.o(.text.RI_GetRegisterMotor1) refers to mc_interface.o(.text.MCI_GetIqd) for MCI_GetIqd
    register_interface.o(.text.RI_GetRegisterMotor1) refers to mc_interface.o(.text.MCI_GetVqd) for MCI_GetVqd
    register_interface.o(.text.RI_GetRegisterMotor1) refers to mc_interface.o(.text.MCI_GetValphabeta) for MCI_GetValphabeta
    register_interface.o(.text.RI_GetRegisterMotor1) refers to mc_config.o(.data.ENCODER_M1) for ENCODER_M1
    register_interface.o(.text.RI_GetRegisterMotor1) refers to speed_pos_fdbk.o(.text.SPD_GetElAngle) for SPD_GetElAngle
    register_interface.o(.text.RI_GetRegisterMotor1) refers to speed_pos_fdbk.o(.text.SPD_GetS16Speed) for SPD_GetS16Speed
    register_interface.o(.text.RI_GetRegisterMotor1) refers to mc_config.o(.data.PID_PosParamsM1) for PID_PosParamsM1
    register_interface.o(.text.RI_GetRegisterMotor1) refers to pid_regulator.o(.text.PID_GetKPDivisorPOW2) for PID_GetKPDivisorPOW2
    register_interface.o(.text.RI_GetRegisterMotor1) refers to pid_regulator.o(.text.PID_GetKIDivisorPOW2) for PID_GetKIDivisorPOW2
    register_interface.o(.text.RI_GetRegisterMotor1) refers to pid_regulator.o(.text.PID_GetKDDivisorPOW2) for PID_GetKDDivisorPOW2
    register_interface.o(.ARM.exidx.text.RI_GetRegisterMotor1) refers to register_interface.o(.text.RI_GetRegisterMotor1) for [Anonymous Symbol]
    register_interface.o(.ARM.exidx.text.RI_GetIDSize) refers to register_interface.o(.text.RI_GetIDSize) for [Anonymous Symbol]
    register_interface.o(.text.RI_GetPtrReg) refers to mc_config.o(.bss.Mci) for Mci
    register_interface.o(.text.RI_GetPtrReg) refers to register_interface.o(.bss.RI_GetPtrReg.nullData16) for RI_GetPtrReg.nullData16
    register_interface.o(.text.RI_GetPtrReg) refers to mc_config.o(.data.ENCODER_M1) for ENCODER_M1
    register_interface.o(.ARM.exidx.text.RI_GetPtrReg) refers to register_interface.o(.text.RI_GetPtrReg) for [Anonymous Symbol]
    mcp.o(.text.RI_SetRegCommandParser) refers to mcp.o(.rodata..L__const.RI_SetRegCommandParser.SetRegFcts) for .L__const.RI_SetRegCommandParser.SetRegFcts
    mcp.o(.ARM.exidx.text.RI_SetRegCommandParser) refers to mcp.o(.text.RI_SetRegCommandParser) for [Anonymous Symbol]
    mcp.o(.text.RI_GetRegCommandParser) refers to mcp.o(.rodata..L__const.RI_GetRegCommandParser.GetRegFcts) for .L__const.RI_GetRegCommandParser.GetRegFcts
    mcp.o(.ARM.exidx.text.RI_GetRegCommandParser) refers to mcp.o(.text.RI_GetRegCommandParser) for [Anonymous Symbol]
    mcp.o(.text.MCP_ReceivedPacket) refers to mc_config.o(.bss.Mci) for Mci
    mcp.o(.text.MCP_ReceivedPacket) refers to mcp.o(.rodata..L__const.RI_SetRegCommandParser.SetRegFcts) for .L__const.RI_SetRegCommandParser.SetRegFcts
    mcp.o(.text.MCP_ReceivedPacket) refers to mcp.o(.rodata..L__const.RI_GetRegCommandParser.GetRegFcts) for .L__const.RI_GetRegCommandParser.GetRegFcts
    mcp.o(.text.MCP_ReceivedPacket) refers to mc_interface.o(.text.MCI_StartWithPolarizationMotor) for MCI_StartWithPolarizationMotor
    mcp.o(.text.MCP_ReceivedPacket) refers to mc_interface.o(.text.MCI_StopMotor) for MCI_StopMotor
    mcp.o(.text.MCP_ReceivedPacket) refers to mc_interface.o(.text.MCI_GetSTMState) for MCI_GetSTMState
    mcp.o(.text.MCP_ReceivedPacket) refers to mc_interface.o(.text.MCI_StopRamp) for MCI_StopRamp
    mcp.o(.text.MCP_ReceivedPacket) refers to mc_interface.o(.text.MCI_FaultAcknowledged) for MCI_FaultAcknowledged
    mcp.o(.text.MCP_ReceivedPacket) refers to mc_interface.o(.text.MCI_Clear_PerfMeasure) for MCI_Clear_PerfMeasure
    mcp.o(.text.MCP_ReceivedPacket) refers to mc_interface.o(.text.MCI_Clear_Iqdref) for MCI_Clear_Iqdref
    mcp.o(.text.MCP_ReceivedPacket) refers to mc_api.o(.text.MC_ProfilerCommand) for MC_ProfilerCommand
    mcp.o(.text.MCP_ReceivedPacket) refers to mcp_config.o(.bss.MCP_UserCallBack) for MCP_UserCallBack
    mcp.o(.ARM.exidx.text.MCP_ReceivedPacket) refers to mcp.o(.text.MCP_ReceivedPacket) for [Anonymous Symbol]
    mcp.o(.text.MCP_RegisterCallBack) refers to mcp_config.o(.bss.MCP_UserCallBack) for MCP_UserCallBack
    mcp.o(.ARM.exidx.text.MCP_RegisterCallBack) refers to mcp.o(.text.MCP_RegisterCallBack) for [Anonymous Symbol]
    mcp.o(.rodata..L__const.RI_SetRegCommandParser.SetRegFcts) refers to register_interface.o(.text.RI_SetRegisterGlobal) for RI_SetRegisterGlobal
    mcp.o(.rodata..L__const.RI_SetRegCommandParser.SetRegFcts) refers to register_interface.o(.text.RI_SetRegisterMotor1) for RI_SetRegisterMotor1
    mcp.o(.rodata..L__const.RI_GetRegCommandParser.GetRegFcts) refers to register_interface.o(.text.RI_GetRegisterGlobal) for RI_GetRegisterGlobal
    mcp.o(.rodata..L__const.RI_GetRegCommandParser.GetRegFcts) refers to register_interface.o(.text.RI_GetRegisterMotor1) for RI_GetRegisterMotor1
    mc_perf.o(.ARM.exidx.text.MC_Perf_Measure_Init) refers to mc_perf.o(.text.MC_Perf_Measure_Init) for [Anonymous Symbol]
    mc_perf.o(.ARM.exidx.text.MC_Perf_Clear) refers to mc_perf.o(.text.MC_Perf_Clear) for [Anonymous Symbol]
    mc_perf.o(.ARM.exidx.text.MC_Perf_Measure_Start) refers to mc_perf.o(.text.MC_Perf_Measure_Start) for [Anonymous Symbol]
    mc_perf.o(.ARM.exidx.text.MC_BG_Perf_Measure_Start) refers to mc_perf.o(.text.MC_BG_Perf_Measure_Start) for [Anonymous Symbol]
    mc_perf.o(.ARM.exidx.text.MC_Perf_Measure_Stop) refers to mc_perf.o(.text.MC_Perf_Measure_Stop) for [Anonymous Symbol]
    mc_perf.o(.ARM.exidx.text.MC_BG_Perf_Measure_Stop) refers to mc_perf.o(.text.MC_BG_Perf_Measure_Stop) for [Anonymous Symbol]
    mc_perf.o(.ARM.exidx.text.MC_Perf_GetCPU_Load) refers to mc_perf.o(.text.MC_Perf_GetCPU_Load) for [Anonymous Symbol]
    mc_perf.o(.ARM.exidx.text.MC_Perf_GetMaxCPU_Load) refers to mc_perf.o(.text.MC_Perf_GetMaxCPU_Load) for [Anonymous Symbol]
    mc_perf.o(.ARM.exidx.text.MC_Perf_GetMinCPU_Load) refers to mc_perf.o(.text.MC_Perf_GetMinCPU_Load) for [Anonymous Symbol]
    usart_aspep_driver.o(.text.UASPEP_INIT) refers to usart_aspep_driver.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    usart_aspep_driver.o(.ARM.exidx.text.UASPEP_INIT) refers to usart_aspep_driver.o(.text.UASPEP_INIT) for [Anonymous Symbol]
    usart_aspep_driver.o(.text.UASPEP_DAMCONFIG_TX) refers to usart_aspep_driver.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    usart_aspep_driver.o(.ARM.exidx.text.UASPEP_DAMCONFIG_TX) refers to usart_aspep_driver.o(.text.UASPEP_DAMCONFIG_TX) for [Anonymous Symbol]
    usart_aspep_driver.o(.text.UASPEP_DAMCONFIG_RX) refers to usart_aspep_driver.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    usart_aspep_driver.o(.ARM.exidx.text.UASPEP_DAMCONFIG_RX) refers to usart_aspep_driver.o(.text.UASPEP_DAMCONFIG_RX) for [Anonymous Symbol]
    usart_aspep_driver.o(.text.UASPEP_SEND_PACKET) refers to usart_aspep_driver.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    usart_aspep_driver.o(.ARM.exidx.text.UASPEP_SEND_PACKET) refers to usart_aspep_driver.o(.text.UASPEP_SEND_PACKET) for [Anonymous Symbol]
    usart_aspep_driver.o(.text.UASPEP_RECEIVE_BUFFER) refers to usart_aspep_driver.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    usart_aspep_driver.o(.ARM.exidx.text.UASPEP_RECEIVE_BUFFER) refers to usart_aspep_driver.o(.text.UASPEP_RECEIVE_BUFFER) for [Anonymous Symbol]
    usart_aspep_driver.o(.ARM.exidx.text.UASPEP_IDLE_ENABLE) refers to usart_aspep_driver.o(.text.UASPEP_IDLE_ENABLE) for [Anonymous Symbol]
    mc_configuration_registers.o(.data.PWR_BOARD_NAME) refers to mc_configuration_registers.o(.rodata.M1_PWR_BOARD) for [Anonymous Symbol]
    mc_configuration_registers.o(.data.FOCConfig_reg) refers to mc_configuration_registers.o(.rodata.M1_FOCConfig_reg) for [Anonymous Symbol]
    mc_configuration_registers.o(.data.MotorConfig_reg) refers to mc_configuration_registers.o(.rodata.M1_MotorConfig_reg) for [Anonymous Symbol]
    mc_configuration_registers.o(.data.ApplicationConfig_reg) refers to mc_configuration_registers.o(.rodata.M1_ApplicationConfig_reg) for [Anonymous Symbol]
    aspep.o(.ARM.exidx.text.ASPEP_start) refers to aspep.o(.text.ASPEP_start) for [Anonymous Symbol]
    aspep.o(.text.ASPEP_sendBeacon) refers to aspep.o(.rodata.CRC4_Lookup8) for CRC4_Lookup8
    aspep.o(.text.ASPEP_sendBeacon) refers to aspep.o(.rodata.cst16) for CRC4_Lookup4
    aspep.o(.ARM.exidx.text.ASPEP_sendBeacon) refers to aspep.o(.text.ASPEP_sendBeacon) for [Anonymous Symbol]
    aspep.o(.text.ASPEP_TXframeProcess) refers to aspep.o(.rodata.CRC4_Lookup8) for CRC4_Lookup8
    aspep.o(.text.ASPEP_TXframeProcess) refers to aspep.o(.rodata.cst16) for CRC4_Lookup4
    aspep.o(.ARM.exidx.text.ASPEP_TXframeProcess) refers to aspep.o(.text.ASPEP_TXframeProcess) for [Anonymous Symbol]
    aspep.o(.text.ASPEP_sendPing) refers to aspep.o(.rodata.CRC4_Lookup8) for CRC4_Lookup8
    aspep.o(.text.ASPEP_sendPing) refers to aspep.o(.rodata.cst16) for CRC4_Lookup4
    aspep.o(.ARM.exidx.text.ASPEP_sendPing) refers to aspep.o(.text.ASPEP_sendPing) for [Anonymous Symbol]
    aspep.o(.ARM.exidx.text.ASPEP_getBuffer) refers to aspep.o(.text.ASPEP_getBuffer) for [Anonymous Symbol]
    aspep.o(.text.ASPEP_sendPacket) refers to aspep.o(.text.ASPEP_TXframeProcess) for ASPEP_TXframeProcess
    aspep.o(.ARM.exidx.text.ASPEP_sendPacket) refers to aspep.o(.text.ASPEP_sendPacket) for [Anonymous Symbol]
    aspep.o(.ARM.exidx.text.ASPEP_HWDataTransmittedIT) refers to aspep.o(.text.ASPEP_HWDataTransmittedIT) for [Anonymous Symbol]
    aspep.o(.text.ASPEP_RXframeProcess) refers to aspep.o(.rodata.CRC4_Lookup8) for CRC4_Lookup8
    aspep.o(.text.ASPEP_RXframeProcess) refers to aspep.o(.rodata.cst16) for CRC4_Lookup4
    aspep.o(.ARM.exidx.text.ASPEP_RXframeProcess) refers to aspep.o(.text.ASPEP_RXframeProcess) for [Anonymous Symbol]
    aspep.o(.text.ASPEP_HWDataReceivedIT) refers to aspep.o(.rodata.CRC4_Lookup8) for CRC4_Lookup8
    aspep.o(.ARM.exidx.text.ASPEP_HWDataReceivedIT) refers to aspep.o(.text.ASPEP_HWDataReceivedIT) for [Anonymous Symbol]
    aspep.o(.ARM.exidx.text.ASPEP_HWDMAReset) refers to aspep.o(.text.ASPEP_HWDMAReset) for [Anonymous Symbol]
    mc_app_hooks.o(.ARM.exidx.text.MC_APP_BootHook) refers to mc_app_hooks.o(.text.MC_APP_BootHook) for [Anonymous Symbol]
    mc_app_hooks.o(.ARM.exidx.text.MC_APP_PostMediumFrequencyHook_M1) refers to mc_app_hooks.o(.text.MC_APP_PostMediumFrequencyHook_M1) for [Anonymous Symbol]
    stm32l4xx_it.o(.text.TIM6_DAC_IRQHandler) refers to stm32l4xx_hal_timebase_tim.o(.bss.htim6) for htim6
    stm32l4xx_it.o(.text.TIM6_DAC_IRQHandler) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_IRQHandler) for HAL_TIM_IRQHandler
    stm32l4xx_it.o(.ARM.exidx.text.TIM6_DAC_IRQHandler) refers to stm32l4xx_it.o(.text.TIM6_DAC_IRQHandler) for [Anonymous Symbol]
    stm32l4xx_hal_msp.o(.text.HAL_MspInit) refers to stm32l4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    stm32l4xx_hal_msp.o(.ARM.exidx.text.HAL_MspInit) refers to stm32l4xx_hal_msp.o(.text.HAL_MspInit) for [Anonymous Symbol]
    stm32l4xx_hal_msp.o(.text.HAL_ADC_MspInit) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    stm32l4xx_hal_msp.o(.text.HAL_ADC_MspInit) refers to stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) for HAL_RCCEx_PeriphCLKConfig
    stm32l4xx_hal_msp.o(.text.HAL_ADC_MspInit) refers to main.o(.text.Error_Handler) for Error_Handler
    stm32l4xx_hal_msp.o(.text.HAL_ADC_MspInit) refers to stm32l4xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32l4xx_hal_msp.o(.ARM.exidx.text.HAL_ADC_MspInit) refers to stm32l4xx_hal_msp.o(.text.HAL_ADC_MspInit) for [Anonymous Symbol]
    stm32l4xx_hal_msp.o(.text.HAL_ADC_MspDeInit) refers to stm32l4xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for HAL_GPIO_DeInit
    stm32l4xx_hal_msp.o(.text.HAL_ADC_MspDeInit) refers to stm32l4xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) for HAL_NVIC_DisableIRQ
    stm32l4xx_hal_msp.o(.ARM.exidx.text.HAL_ADC_MspDeInit) refers to stm32l4xx_hal_msp.o(.text.HAL_ADC_MspDeInit) for [Anonymous Symbol]
    stm32l4xx_hal_msp.o(.text.HAL_TIM_Base_MspInit) refers to stm32l4xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32l4xx_hal_msp.o(.ARM.exidx.text.HAL_TIM_Base_MspInit) refers to stm32l4xx_hal_msp.o(.text.HAL_TIM_Base_MspInit) for [Anonymous Symbol]
    stm32l4xx_hal_msp.o(.text.HAL_TIM_MspPostInit) refers to stm32l4xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32l4xx_hal_msp.o(.ARM.exidx.text.HAL_TIM_MspPostInit) refers to stm32l4xx_hal_msp.o(.text.HAL_TIM_MspPostInit) for [Anonymous Symbol]
    stm32l4xx_hal_msp.o(.text.HAL_TIM_Base_MspDeInit) refers to stm32l4xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for HAL_GPIO_DeInit
    stm32l4xx_hal_msp.o(.text.HAL_TIM_Base_MspDeInit) refers to stm32l4xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) for HAL_NVIC_DisableIRQ
    stm32l4xx_hal_msp.o(.ARM.exidx.text.HAL_TIM_Base_MspDeInit) refers to stm32l4xx_hal_msp.o(.text.HAL_TIM_Base_MspDeInit) for [Anonymous Symbol]
    stm32l4xx_hal_msp.o(.text.HAL_UART_MspInit) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    stm32l4xx_hal_msp.o(.text.HAL_UART_MspInit) refers to stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) for HAL_RCCEx_PeriphCLKConfig
    stm32l4xx_hal_msp.o(.text.HAL_UART_MspInit) refers to main.o(.text.Error_Handler) for Error_Handler
    stm32l4xx_hal_msp.o(.text.HAL_UART_MspInit) refers to stm32l4xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32l4xx_hal_msp.o(.text.HAL_UART_MspInit) refers to main.o(.bss.hdma_usart2_rx) for hdma_usart2_rx
    stm32l4xx_hal_msp.o(.text.HAL_UART_MspInit) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Init) for HAL_DMA_Init
    stm32l4xx_hal_msp.o(.text.HAL_UART_MspInit) refers to main.o(.bss.hdma_usart2_tx) for hdma_usart2_tx
    stm32l4xx_hal_msp.o(.ARM.exidx.text.HAL_UART_MspInit) refers to stm32l4xx_hal_msp.o(.text.HAL_UART_MspInit) for [Anonymous Symbol]
    stm32l4xx_hal_msp.o(.text.HAL_UART_MspDeInit) refers to stm32l4xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for HAL_GPIO_DeInit
    stm32l4xx_hal_msp.o(.text.HAL_UART_MspDeInit) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_DeInit) for HAL_DMA_DeInit
    stm32l4xx_hal_msp.o(.text.HAL_UART_MspDeInit) refers to stm32l4xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) for HAL_NVIC_DisableIRQ
    stm32l4xx_hal_msp.o(.ARM.exidx.text.HAL_UART_MspDeInit) refers to stm32l4xx_hal_msp.o(.text.HAL_UART_MspDeInit) for [Anonymous Symbol]
    stm32l4xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32l4xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig) for HAL_RCC_GetClockConfig
    stm32l4xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32l4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for HAL_RCC_GetPCLK1Freq
    stm32l4xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32l4xx_hal_timebase_tim.o(.bss.htim6) for htim6
    stm32l4xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_Base_Init) for HAL_TIM_Base_Init
    stm32l4xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT) for HAL_TIM_Base_Start_IT
    stm32l4xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32l4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for HAL_NVIC_EnableIRQ
    stm32l4xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32l4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    stm32l4xx_hal_timebase_tim.o(.text.HAL_InitTick) refers to stm32l4xx_hal.o(.data..L_MergedGlobals) for uwTickPrio
    stm32l4xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_InitTick) refers to stm32l4xx_hal_timebase_tim.o(.text.HAL_InitTick) for [Anonymous Symbol]
    stm32l4xx_hal_timebase_tim.o(.text.HAL_SuspendTick) refers to stm32l4xx_hal_timebase_tim.o(.bss.htim6) for htim6
    stm32l4xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_SuspendTick) refers to stm32l4xx_hal_timebase_tim.o(.text.HAL_SuspendTick) for [Anonymous Symbol]
    stm32l4xx_hal_timebase_tim.o(.text.HAL_ResumeTick) refers to stm32l4xx_hal_timebase_tim.o(.bss.htim6) for htim6
    stm32l4xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_ResumeTick) refers to stm32l4xx_hal_timebase_tim.o(.text.HAL_ResumeTick) for [Anonymous Symbol]
    stm32l4xx_hal_adc.o(.text.HAL_ADC_Init) refers to stm32l4xx_hal_msp.o(.text.HAL_ADC_MspInit) for HAL_ADC_MspInit
    stm32l4xx_hal_adc.o(.text.HAL_ADC_Init) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Init) refers to stm32l4xx_hal_adc.o(.text.HAL_ADC_Init) for [Anonymous Symbol]
    stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_MspInit) refers to stm32l4xx_hal_adc.o(.text.HAL_ADC_MspInit) for [Anonymous Symbol]
    stm32l4xx_hal_adc.o(.text.HAL_ADC_DeInit) refers to stm32l4xx_hal_adc.o(.text.ADC_ConversionStop) for ADC_ConversionStop
    stm32l4xx_hal_adc.o(.text.HAL_ADC_DeInit) refers to stm32l4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_adc.o(.text.HAL_ADC_DeInit) refers to stm32l4xx_hal_msp.o(.text.HAL_ADC_MspDeInit) for HAL_ADC_MspDeInit
    stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_DeInit) refers to stm32l4xx_hal_adc.o(.text.HAL_ADC_DeInit) for [Anonymous Symbol]
    stm32l4xx_hal_adc.o(.text.ADC_ConversionStop) refers to stm32l4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_adc.o(.ARM.exidx.text.ADC_ConversionStop) refers to stm32l4xx_hal_adc.o(.text.ADC_ConversionStop) for [Anonymous Symbol]
    stm32l4xx_hal_adc.o(.text.ADC_Disable) refers to stm32l4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_adc.o(.ARM.exidx.text.ADC_Disable) refers to stm32l4xx_hal_adc.o(.text.ADC_Disable) for [Anonymous Symbol]
    stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_MspDeInit) refers to stm32l4xx_hal_adc.o(.text.HAL_ADC_MspDeInit) for [Anonymous Symbol]
    stm32l4xx_hal_adc.o(.text.HAL_ADC_Start) refers to stm32l4xx_hal_adc.o(.text.ADC_Enable) for ADC_Enable
    stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Start) refers to stm32l4xx_hal_adc.o(.text.HAL_ADC_Start) for [Anonymous Symbol]
    stm32l4xx_hal_adc.o(.text.ADC_Enable) refers to stm32l4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_adc.o(.text.ADC_Enable) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32l4xx_hal_adc.o(.ARM.exidx.text.ADC_Enable) refers to stm32l4xx_hal_adc.o(.text.ADC_Enable) for [Anonymous Symbol]
    stm32l4xx_hal_adc.o(.text.HAL_ADC_Stop) refers to stm32l4xx_hal_adc.o(.text.ADC_ConversionStop) for ADC_ConversionStop
    stm32l4xx_hal_adc.o(.text.HAL_ADC_Stop) refers to stm32l4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Stop) refers to stm32l4xx_hal_adc.o(.text.HAL_ADC_Stop) for [Anonymous Symbol]
    stm32l4xx_hal_adc.o(.text.HAL_ADC_PollForConversion) refers to stm32l4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_PollForConversion) refers to stm32l4xx_hal_adc.o(.text.HAL_ADC_PollForConversion) for [Anonymous Symbol]
    stm32l4xx_hal_adc.o(.text.HAL_ADC_PollForEvent) refers to stm32l4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_PollForEvent) refers to stm32l4xx_hal_adc.o(.text.HAL_ADC_PollForEvent) for [Anonymous Symbol]
    stm32l4xx_hal_adc.o(.text.HAL_ADC_Start_IT) refers to stm32l4xx_hal_adc.o(.text.ADC_Enable) for ADC_Enable
    stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Start_IT) refers to stm32l4xx_hal_adc.o(.text.HAL_ADC_Start_IT) for [Anonymous Symbol]
    stm32l4xx_hal_adc.o(.text.HAL_ADC_Stop_IT) refers to stm32l4xx_hal_adc.o(.text.ADC_ConversionStop) for ADC_ConversionStop
    stm32l4xx_hal_adc.o(.text.HAL_ADC_Stop_IT) refers to stm32l4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Stop_IT) refers to stm32l4xx_hal_adc.o(.text.HAL_ADC_Stop_IT) for [Anonymous Symbol]
    stm32l4xx_hal_adc.o(.text.HAL_ADC_Start_DMA) refers to stm32l4xx_hal_adc.o(.text.ADC_Enable) for ADC_Enable
    stm32l4xx_hal_adc.o(.text.HAL_ADC_Start_DMA) refers to stm32l4xx_hal_adc.o(.text.ADC_DMAConvCplt) for ADC_DMAConvCplt
    stm32l4xx_hal_adc.o(.text.HAL_ADC_Start_DMA) refers to stm32l4xx_hal_adc.o(.text.ADC_DMAHalfConvCplt) for ADC_DMAHalfConvCplt
    stm32l4xx_hal_adc.o(.text.HAL_ADC_Start_DMA) refers to stm32l4xx_hal_adc.o(.text.ADC_DMAError) for ADC_DMAError
    stm32l4xx_hal_adc.o(.text.HAL_ADC_Start_DMA) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Start_DMA) refers to stm32l4xx_hal_adc.o(.text.HAL_ADC_Start_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_adc.o(.text.ADC_DMAConvCplt) refers to stm32l4xx_hal_adc.o(.text.HAL_ADC_ErrorCallback) for HAL_ADC_ErrorCallback
    stm32l4xx_hal_adc.o(.text.ADC_DMAConvCplt) refers to stm32l4xx_hal_adc.o(.text.HAL_ADC_ConvCpltCallback) for HAL_ADC_ConvCpltCallback
    stm32l4xx_hal_adc.o(.ARM.exidx.text.ADC_DMAConvCplt) refers to stm32l4xx_hal_adc.o(.text.ADC_DMAConvCplt) for [Anonymous Symbol]
    stm32l4xx_hal_adc.o(.text.ADC_DMAHalfConvCplt) refers to stm32l4xx_hal_adc.o(.text.HAL_ADC_ConvHalfCpltCallback) for HAL_ADC_ConvHalfCpltCallback
    stm32l4xx_hal_adc.o(.ARM.exidx.text.ADC_DMAHalfConvCplt) refers to stm32l4xx_hal_adc.o(.text.ADC_DMAHalfConvCplt) for [Anonymous Symbol]
    stm32l4xx_hal_adc.o(.text.ADC_DMAError) refers to stm32l4xx_hal_adc.o(.text.HAL_ADC_ErrorCallback) for HAL_ADC_ErrorCallback
    stm32l4xx_hal_adc.o(.ARM.exidx.text.ADC_DMAError) refers to stm32l4xx_hal_adc.o(.text.ADC_DMAError) for [Anonymous Symbol]
    stm32l4xx_hal_adc.o(.text.HAL_ADC_Stop_DMA) refers to stm32l4xx_hal_adc.o(.text.ADC_ConversionStop) for ADC_ConversionStop
    stm32l4xx_hal_adc.o(.text.HAL_ADC_Stop_DMA) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32l4xx_hal_adc.o(.text.HAL_ADC_Stop_DMA) refers to stm32l4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Stop_DMA) refers to stm32l4xx_hal_adc.o(.text.HAL_ADC_Stop_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_GetValue) refers to stm32l4xx_hal_adc.o(.text.HAL_ADC_GetValue) for [Anonymous Symbol]
    stm32l4xx_hal_adc.o(.text.HAL_ADC_IRQHandler) refers to stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_EndOfSamplingCallback) for HAL_ADCEx_EndOfSamplingCallback
    stm32l4xx_hal_adc.o(.text.HAL_ADC_IRQHandler) refers to stm32l4xx_hal_adc.o(.text.HAL_ADC_ConvCpltCallback) for HAL_ADC_ConvCpltCallback
    stm32l4xx_hal_adc.o(.text.HAL_ADC_IRQHandler) refers to stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConvCpltCallback) for HAL_ADCEx_InjectedConvCpltCallback
    stm32l4xx_hal_adc.o(.text.HAL_ADC_IRQHandler) refers to stm32l4xx_hal_adc.o(.text.HAL_ADC_LevelOutOfWindowCallback) for HAL_ADC_LevelOutOfWindowCallback
    stm32l4xx_hal_adc.o(.text.HAL_ADC_IRQHandler) refers to stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_LevelOutOfWindow2Callback) for HAL_ADCEx_LevelOutOfWindow2Callback
    stm32l4xx_hal_adc.o(.text.HAL_ADC_IRQHandler) refers to stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_LevelOutOfWindow3Callback) for HAL_ADCEx_LevelOutOfWindow3Callback
    stm32l4xx_hal_adc.o(.text.HAL_ADC_IRQHandler) refers to stm32l4xx_hal_adc.o(.text.HAL_ADC_ErrorCallback) for HAL_ADC_ErrorCallback
    stm32l4xx_hal_adc.o(.text.HAL_ADC_IRQHandler) refers to stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedQueueOverflowCallback) for HAL_ADCEx_InjectedQueueOverflowCallback
    stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_IRQHandler) refers to stm32l4xx_hal_adc.o(.text.HAL_ADC_IRQHandler) for [Anonymous Symbol]
    stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_ConvCpltCallback) refers to stm32l4xx_hal_adc.o(.text.HAL_ADC_ConvCpltCallback) for [Anonymous Symbol]
    stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_LevelOutOfWindowCallback) refers to stm32l4xx_hal_adc.o(.text.HAL_ADC_LevelOutOfWindowCallback) for [Anonymous Symbol]
    stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_ErrorCallback) refers to stm32l4xx_hal_adc.o(.text.HAL_ADC_ErrorCallback) for [Anonymous Symbol]
    stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_ConvHalfCpltCallback) refers to stm32l4xx_hal_adc.o(.text.HAL_ADC_ConvHalfCpltCallback) for [Anonymous Symbol]
    stm32l4xx_hal_adc.o(.text.HAL_ADC_ConfigChannel) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_ConfigChannel) refers to stm32l4xx_hal_adc.o(.text.HAL_ADC_ConfigChannel) for [Anonymous Symbol]
    stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_AnalogWDGConfig) refers to stm32l4xx_hal_adc.o(.text.HAL_ADC_AnalogWDGConfig) for [Anonymous Symbol]
    stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_GetState) refers to stm32l4xx_hal_adc.o(.text.HAL_ADC_GetState) for [Anonymous Symbol]
    stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_GetError) refers to stm32l4xx_hal_adc.o(.text.HAL_ADC_GetError) for [Anonymous Symbol]
    stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_Calibration_Start) refers to stm32l4xx_hal_adc.o(.text.ADC_Disable) for ADC_Disable
    stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_Calibration_Start) refers to stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_Calibration_Start) for [Anonymous Symbol]
    stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_Calibration_GetValue) refers to stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_Calibration_GetValue) for [Anonymous Symbol]
    stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_Calibration_SetValue) refers to stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_Calibration_SetValue) for [Anonymous Symbol]
    stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart) refers to stm32l4xx_hal_adc.o(.text.ADC_Enable) for ADC_Enable
    stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedStart) refers to stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart) for [Anonymous Symbol]
    stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStop) refers to stm32l4xx_hal_adc.o(.text.ADC_ConversionStop) for ADC_ConversionStop
    stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStop) refers to stm32l4xx_hal_adc.o(.text.ADC_Disable) for ADC_Disable
    stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedStop) refers to stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStop) for [Anonymous Symbol]
    stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedPollForConversion) refers to stm32l4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedPollForConversion) refers to stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedPollForConversion) for [Anonymous Symbol]
    stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart_IT) refers to stm32l4xx_hal_adc.o(.text.ADC_Enable) for ADC_Enable
    stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedStart_IT) refers to stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart_IT) for [Anonymous Symbol]
    stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStop_IT) refers to stm32l4xx_hal_adc.o(.text.ADC_ConversionStop) for ADC_ConversionStop
    stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStop_IT) refers to stm32l4xx_hal_adc.o(.text.ADC_Disable) for ADC_Disable
    stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedStop_IT) refers to stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStop_IT) for [Anonymous Symbol]
    stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStart_DMA) refers to stm32l4xx_hal_adc.o(.text.ADC_Enable) for ADC_Enable
    stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStart_DMA) refers to stm32l4xx_hal_adc.o(.text.ADC_DMAConvCplt) for ADC_DMAConvCplt
    stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStart_DMA) refers to stm32l4xx_hal_adc.o(.text.ADC_DMAHalfConvCplt) for ADC_DMAHalfConvCplt
    stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStart_DMA) refers to stm32l4xx_hal_adc.o(.text.ADC_DMAError) for ADC_DMAError
    stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStart_DMA) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_MultiModeStart_DMA) refers to stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStart_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStop_DMA) refers to stm32l4xx_hal_adc.o(.text.ADC_ConversionStop) for ADC_ConversionStop
    stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStop_DMA) refers to stm32l4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStop_DMA) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStop_DMA) refers to stm32l4xx_hal_adc.o(.text.ADC_Disable) for ADC_Disable
    stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_MultiModeStop_DMA) refers to stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStop_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_MultiModeGetValue) refers to stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeGetValue) for [Anonymous Symbol]
    stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedGetValue) refers to stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedGetValue) for [Anonymous Symbol]
    stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedConvCpltCallback) refers to stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConvCpltCallback) for [Anonymous Symbol]
    stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedQueueOverflowCallback) refers to stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedQueueOverflowCallback) for [Anonymous Symbol]
    stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_LevelOutOfWindow2Callback) refers to stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_LevelOutOfWindow2Callback) for [Anonymous Symbol]
    stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_LevelOutOfWindow3Callback) refers to stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_LevelOutOfWindow3Callback) for [Anonymous Symbol]
    stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_EndOfSamplingCallback) refers to stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_EndOfSamplingCallback) for [Anonymous Symbol]
    stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularStop) refers to stm32l4xx_hal_adc.o(.text.ADC_ConversionStop) for ADC_ConversionStop
    stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularStop) refers to stm32l4xx_hal_adc.o(.text.ADC_Disable) for ADC_Disable
    stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_RegularStop) refers to stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularStop) for [Anonymous Symbol]
    stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularStop_IT) refers to stm32l4xx_hal_adc.o(.text.ADC_ConversionStop) for ADC_ConversionStop
    stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularStop_IT) refers to stm32l4xx_hal_adc.o(.text.ADC_Disable) for ADC_Disable
    stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_RegularStop_IT) refers to stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularStop_IT) for [Anonymous Symbol]
    stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularStop_DMA) refers to stm32l4xx_hal_adc.o(.text.ADC_ConversionStop) for ADC_ConversionStop
    stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularStop_DMA) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularStop_DMA) refers to stm32l4xx_hal_adc.o(.text.ADC_Disable) for ADC_Disable
    stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_RegularStop_DMA) refers to stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularStop_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularMultiModeStop_DMA) refers to stm32l4xx_hal_adc.o(.text.ADC_ConversionStop) for ADC_ConversionStop
    stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularMultiModeStop_DMA) refers to stm32l4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularMultiModeStop_DMA) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularMultiModeStop_DMA) refers to stm32l4xx_hal_adc.o(.text.ADC_Disable) for ADC_Disable
    stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_RegularMultiModeStop_DMA) refers to stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularMultiModeStop_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConfigChannel) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedConfigChannel) refers to stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConfigChannel) for [Anonymous Symbol]
    stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_MultiModeConfigChannel) refers to stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeConfigChannel) for [Anonymous Symbol]
    stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_EnableInjectedQueue) refers to stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_EnableInjectedQueue) for [Anonymous Symbol]
    stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_DisableInjectedQueue) refers to stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_DisableInjectedQueue) for [Anonymous Symbol]
    stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_DisableVoltageRegulator) refers to stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_DisableVoltageRegulator) for [Anonymous Symbol]
    stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_EnterADCDeepPowerDownMode) refers to stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_EnterADCDeepPowerDownMode) for [Anonymous Symbol]
    stm32l4xx_hal.o(.text.HAL_Init) refers to stm32l4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) for HAL_NVIC_SetPriorityGrouping
    stm32l4xx_hal.o(.text.HAL_Init) refers to stm32l4xx_hal_timebase_tim.o(.text.HAL_InitTick) for HAL_InitTick
    stm32l4xx_hal.o(.text.HAL_Init) refers to stm32l4xx_hal_msp.o(.text.HAL_MspInit) for HAL_MspInit
    stm32l4xx_hal.o(.ARM.exidx.text.HAL_Init) refers to stm32l4xx_hal.o(.text.HAL_Init) for [Anonymous Symbol]
    stm32l4xx_hal.o(.text.HAL_InitTick) refers to stm32l4xx_hal.o(.data..L_MergedGlobals) for .L_MergedGlobals
    stm32l4xx_hal.o(.text.HAL_InitTick) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32l4xx_hal.o(.text.HAL_InitTick) refers to stm32l4xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for HAL_SYSTICK_Config
    stm32l4xx_hal.o(.text.HAL_InitTick) refers to stm32l4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    stm32l4xx_hal.o(.ARM.exidx.text.HAL_InitTick) refers to stm32l4xx_hal.o(.text.HAL_InitTick) for [Anonymous Symbol]
    stm32l4xx_hal.o(.ARM.exidx.text.HAL_MspInit) refers to stm32l4xx_hal.o(.text.HAL_MspInit) for [Anonymous Symbol]
    stm32l4xx_hal.o(.text.HAL_DeInit) refers to stm32l4xx_hal.o(.text.HAL_MspDeInit) for HAL_MspDeInit
    stm32l4xx_hal.o(.ARM.exidx.text.HAL_DeInit) refers to stm32l4xx_hal.o(.text.HAL_DeInit) for [Anonymous Symbol]
    stm32l4xx_hal.o(.ARM.exidx.text.HAL_MspDeInit) refers to stm32l4xx_hal.o(.text.HAL_MspDeInit) for [Anonymous Symbol]
    stm32l4xx_hal.o(.text.HAL_IncTick) refers to stm32l4xx_hal.o(.data..L_MergedGlobals) for .L_MergedGlobals
    stm32l4xx_hal.o(.text.HAL_IncTick) refers to stm32l4xx_hal.o(.bss.uwTick) for uwTick
    stm32l4xx_hal.o(.ARM.exidx.text.HAL_IncTick) refers to stm32l4xx_hal.o(.text.HAL_IncTick) for [Anonymous Symbol]
    stm32l4xx_hal.o(.text.HAL_GetTick) refers to stm32l4xx_hal.o(.bss.uwTick) for uwTick
    stm32l4xx_hal.o(.ARM.exidx.text.HAL_GetTick) refers to stm32l4xx_hal.o(.text.HAL_GetTick) for [Anonymous Symbol]
    stm32l4xx_hal.o(.text.HAL_GetTickPrio) refers to stm32l4xx_hal.o(.data..L_MergedGlobals) for .L_MergedGlobals
    stm32l4xx_hal.o(.ARM.exidx.text.HAL_GetTickPrio) refers to stm32l4xx_hal.o(.text.HAL_GetTickPrio) for [Anonymous Symbol]
    stm32l4xx_hal.o(.text.HAL_SetTickFreq) refers to stm32l4xx_hal.o(.data..L_MergedGlobals) for .L_MergedGlobals
    stm32l4xx_hal.o(.text.HAL_SetTickFreq) refers to stm32l4xx_hal_timebase_tim.o(.text.HAL_InitTick) for HAL_InitTick
    stm32l4xx_hal.o(.ARM.exidx.text.HAL_SetTickFreq) refers to stm32l4xx_hal.o(.text.HAL_SetTickFreq) for [Anonymous Symbol]
    stm32l4xx_hal.o(.text.HAL_GetTickFreq) refers to stm32l4xx_hal.o(.data..L_MergedGlobals) for .L_MergedGlobals
    stm32l4xx_hal.o(.ARM.exidx.text.HAL_GetTickFreq) refers to stm32l4xx_hal.o(.text.HAL_GetTickFreq) for [Anonymous Symbol]
    stm32l4xx_hal.o(.text.HAL_Delay) refers to stm32l4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal.o(.text.HAL_Delay) refers to stm32l4xx_hal.o(.data..L_MergedGlobals) for .L_MergedGlobals
    stm32l4xx_hal.o(.ARM.exidx.text.HAL_Delay) refers to stm32l4xx_hal.o(.text.HAL_Delay) for [Anonymous Symbol]
    stm32l4xx_hal.o(.ARM.exidx.text.HAL_SuspendTick) refers to stm32l4xx_hal.o(.text.HAL_SuspendTick) for [Anonymous Symbol]
    stm32l4xx_hal.o(.ARM.exidx.text.HAL_ResumeTick) refers to stm32l4xx_hal.o(.text.HAL_ResumeTick) for [Anonymous Symbol]
    stm32l4xx_hal.o(.ARM.exidx.text.HAL_GetHalVersion) refers to stm32l4xx_hal.o(.text.HAL_GetHalVersion) for [Anonymous Symbol]
    stm32l4xx_hal.o(.ARM.exidx.text.HAL_GetREVID) refers to stm32l4xx_hal.o(.text.HAL_GetREVID) for [Anonymous Symbol]
    stm32l4xx_hal.o(.ARM.exidx.text.HAL_GetDEVID) refers to stm32l4xx_hal.o(.text.HAL_GetDEVID) for [Anonymous Symbol]
    stm32l4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw0) refers to stm32l4xx_hal.o(.text.HAL_GetUIDw0) for [Anonymous Symbol]
    stm32l4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw1) refers to stm32l4xx_hal.o(.text.HAL_GetUIDw1) for [Anonymous Symbol]
    stm32l4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw2) refers to stm32l4xx_hal.o(.text.HAL_GetUIDw2) for [Anonymous Symbol]
    stm32l4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGSleepMode) refers to stm32l4xx_hal.o(.text.HAL_DBGMCU_EnableDBGSleepMode) for [Anonymous Symbol]
    stm32l4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGSleepMode) refers to stm32l4xx_hal.o(.text.HAL_DBGMCU_DisableDBGSleepMode) for [Anonymous Symbol]
    stm32l4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode) refers to stm32l4xx_hal.o(.text.HAL_DBGMCU_EnableDBGStopMode) for [Anonymous Symbol]
    stm32l4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode) refers to stm32l4xx_hal.o(.text.HAL_DBGMCU_DisableDBGStopMode) for [Anonymous Symbol]
    stm32l4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode) refers to stm32l4xx_hal.o(.text.HAL_DBGMCU_EnableDBGStandbyMode) for [Anonymous Symbol]
    stm32l4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode) refers to stm32l4xx_hal.o(.text.HAL_DBGMCU_DisableDBGStandbyMode) for [Anonymous Symbol]
    stm32l4xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_SRAM2Erase) refers to stm32l4xx_hal.o(.text.HAL_SYSCFG_SRAM2Erase) for [Anonymous Symbol]
    stm32l4xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableMemorySwappingBank) refers to stm32l4xx_hal.o(.text.HAL_SYSCFG_EnableMemorySwappingBank) for [Anonymous Symbol]
    stm32l4xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableMemorySwappingBank) refers to stm32l4xx_hal.o(.text.HAL_SYSCFG_DisableMemorySwappingBank) for [Anonymous Symbol]
    stm32l4xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig) refers to stm32l4xx_hal.o(.text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig) for [Anonymous Symbol]
    stm32l4xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig) refers to stm32l4xx_hal.o(.text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig) for [Anonymous Symbol]
    stm32l4xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_VREFBUF_TrimmingConfig) refers to stm32l4xx_hal.o(.text.HAL_SYSCFG_VREFBUF_TrimmingConfig) for [Anonymous Symbol]
    stm32l4xx_hal.o(.text.HAL_SYSCFG_EnableVREFBUF) refers to stm32l4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableVREFBUF) refers to stm32l4xx_hal.o(.text.HAL_SYSCFG_EnableVREFBUF) for [Anonymous Symbol]
    stm32l4xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableVREFBUF) refers to stm32l4xx_hal.o(.text.HAL_SYSCFG_DisableVREFBUF) for [Anonymous Symbol]
    stm32l4xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableIOAnalogSwitchBooster) refers to stm32l4xx_hal.o(.text.HAL_SYSCFG_EnableIOAnalogSwitchBooster) for [Anonymous Symbol]
    stm32l4xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableIOAnalogSwitchBooster) refers to stm32l4xx_hal.o(.text.HAL_SYSCFG_DisableIOAnalogSwitchBooster) for [Anonymous Symbol]
    stm32l4xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to stm32l4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to stm32l4xx_hal.o(.data..L_MergedGlobals) for uwTickPrio
    stm32l4xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32l4xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to stm32l4xx_hal_timebase_tim.o(.text.HAL_InitTick) for HAL_InitTick
    stm32l4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit) refers to stm32l4xx_hal_rcc.o(.text.HAL_RCC_DeInit) for [Anonymous Symbol]
    stm32l4xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to stm32l4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange) for HAL_PWREx_GetVoltageRange
    stm32l4xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to system_stm32l4xx.o(.rodata.MSIRangeTable) for MSIRangeTable
    stm32l4xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to system_stm32l4xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32l4xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to stm32l4xx_hal.o(.data..L_MergedGlobals) for uwTickPrio
    stm32l4xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32l4xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to stm32l4xx_hal_timebase_tim.o(.text.HAL_InitTick) for HAL_InitTick
    stm32l4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig) refers to stm32l4xx_hal_rcc.o(.text.HAL_RCC_OscConfig) for [Anonymous Symbol]
    stm32l4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) refers to system_stm32l4xx.o(.rodata.MSIRangeTable) for MSIRangeTable
    stm32l4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq) refers to stm32l4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for [Anonymous Symbol]
    stm32l4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32l4xx.o(.rodata.MSIRangeTable) for MSIRangeTable
    stm32l4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32l4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32l4xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32l4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32l4xx_hal.o(.data..L_MergedGlobals) for uwTickPrio
    stm32l4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32l4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32l4xx_hal_timebase_tim.o(.text.HAL_InitTick) for HAL_InitTick
    stm32l4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig) refers to stm32l4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) for [Anonymous Symbol]
    stm32l4xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) refers to stm32l4xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32l4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig) refers to stm32l4xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) for [Anonymous Symbol]
    stm32l4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32l4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq) refers to stm32l4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for [Anonymous Symbol]
    stm32l4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32l4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to system_stm32l4xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32l4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq) refers to stm32l4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for [Anonymous Symbol]
    stm32l4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32l4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) refers to system_stm32l4xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32l4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK2Freq) refers to stm32l4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) for [Anonymous Symbol]
    stm32l4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig) refers to stm32l4xx_hal_rcc.o(.text.HAL_RCC_GetOscConfig) for [Anonymous Symbol]
    stm32l4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig) refers to stm32l4xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig) for [Anonymous Symbol]
    stm32l4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS) refers to stm32l4xx_hal_rcc.o(.text.HAL_RCC_EnableCSS) for [Anonymous Symbol]
    stm32l4xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) refers to stm32l4xx_hal_rcc.o(.text.HAL_RCC_CSSCallback) for HAL_RCC_CSSCallback
    stm32l4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler) refers to stm32l4xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) for [Anonymous Symbol]
    stm32l4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback) refers to stm32l4xx_hal_rcc.o(.text.HAL_RCC_CSSCallback) for [Anonymous Symbol]
    stm32l4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetResetSource) refers to stm32l4xx_hal_rcc.o(.text.HAL_RCC_GetResetSource) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32l4xx_hal_rcc_ex.o(.text.RCCEx_PLLSAI1_Config) for RCCEx_PLLSAI1_Config
    stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32l4xx_hal_rcc_ex.o(.text.RCCEx_PLLSAI2_Config) for RCCEx_PLLSAI2_Config
    stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32l4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex.o(.text.RCCEx_PLLSAI1_Config) refers to stm32l4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.RCCEx_PLLSAI1_Config) refers to stm32l4xx_hal_rcc_ex.o(.text.RCCEx_PLLSAI1_Config) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex.o(.text.RCCEx_PLLSAI2_Config) refers to stm32l4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.RCCEx_PLLSAI2_Config) refers to stm32l4xx_hal_rcc_ex.o(.text.RCCEx_PLLSAI2_Config) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig) refers to stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) refers to stm32l4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) for HAL_RCC_GetPCLK2Freq
    stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) refers to stm32l4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for HAL_RCC_GetPCLK1Freq
    stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) refers to system_stm32l4xx.o(.rodata.MSIRangeTable) for MSIRangeTable
    stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) refers to stm32l4xx_hal_rcc_ex.o(.text.RCCEx_GetSAIxPeriphCLKFreq) for RCCEx_GetSAIxPeriphCLKFreq
    stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) refers to stm32l4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for HAL_RCC_GetSysClockFreq
    stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq) refers to stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.RCCEx_GetSAIxPeriphCLKFreq) refers to stm32l4xx_hal_rcc_ex.o(.text.RCCEx_GetSAIxPeriphCLKFreq) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLSAI1) refers to stm32l4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLSAI1) refers to stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLSAI1) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLSAI1) refers to stm32l4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLSAI1) refers to stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLSAI1) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLSAI2) refers to stm32l4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLSAI2) refers to stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLSAI2) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLSAI2) refers to stm32l4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLSAI2) refers to stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLSAI2) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_WakeUpStopCLKConfig) refers to stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_WakeUpStopCLKConfig) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_StandbyMSIRangeConfig) refers to stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_StandbyMSIRangeConfig) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnableLSECSS) refers to stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSECSS) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisableLSECSS) refers to stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisableLSECSS) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnableLSECSS_IT) refers to stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSECSS_IT) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_LSECSS_IRQHandler) refers to stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_LSECSS_Callback) for HAL_RCCEx_LSECSS_Callback
    stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_LSECSS_IRQHandler) refers to stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_LSECSS_IRQHandler) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_LSECSS_Callback) refers to stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_LSECSS_Callback) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSCO) refers to stm32l4xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSCO) refers to stm32l4xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess) for HAL_PWR_EnableBkUpAccess
    stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSCO) refers to stm32l4xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess) for HAL_PWR_DisableBkUpAccess
    stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnableLSCO) refers to stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSCO) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisableLSCO) refers to stm32l4xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess) for HAL_PWR_EnableBkUpAccess
    stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisableLSCO) refers to stm32l4xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess) for HAL_PWR_DisableBkUpAccess
    stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisableLSCO) refers to stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisableLSCO) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnableMSIPLLMode) refers to stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableMSIPLLMode) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisableMSIPLLMode) refers to stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisableMSIPLLMode) for [Anonymous Symbol]
    stm32l4xx_hal_flash.o(.text.HAL_FLASH_Program) refers to stm32l4xx_hal_flash.o(.data.pFlash) for pFlash
    stm32l4xx_hal_flash.o(.text.HAL_FLASH_Program) refers to stm32l4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_flash.o(.text.HAL_FLASH_Program) refers to stm32l4xx_hal_flash_ex.o(.text.FLASH_FlushCaches) for FLASH_FlushCaches
    stm32l4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Program) refers to stm32l4xx_hal_flash.o(.text.HAL_FLASH_Program) for [Anonymous Symbol]
    stm32l4xx_hal_flash.o(.text.FLASH_WaitForLastOperation) refers to stm32l4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_flash.o(.text.FLASH_WaitForLastOperation) refers to stm32l4xx_hal_flash.o(.data.pFlash) for pFlash
    stm32l4xx_hal_flash.o(.ARM.exidx.text.FLASH_WaitForLastOperation) refers to stm32l4xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for [Anonymous Symbol]
    stm32l4xx_hal_flash.o(.text.HAL_FLASH_Program_IT) refers to stm32l4xx_hal_flash.o(.data.pFlash) for pFlash
    stm32l4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Program_IT) refers to stm32l4xx_hal_flash.o(.text.HAL_FLASH_Program_IT) for [Anonymous Symbol]
    stm32l4xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) refers to stm32l4xx_hal_flash.o(.data.pFlash) for pFlash
    stm32l4xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) refers to stm32l4xx_hal_flash_ex.o(.text.FLASH_FlushCaches) for FLASH_FlushCaches
    stm32l4xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) refers to stm32l4xx_hal_flash.o(.text.HAL_FLASH_OperationErrorCallback) for HAL_FLASH_OperationErrorCallback
    stm32l4xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) refers to stm32l4xx_hal_flash.o(.text.HAL_FLASH_EndOfOperationCallback) for HAL_FLASH_EndOfOperationCallback
    stm32l4xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) refers to stm32l4xx_hal_flash_ex.o(.text.FLASH_PageErase) for FLASH_PageErase
    stm32l4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_IRQHandler) refers to stm32l4xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) for [Anonymous Symbol]
    stm32l4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OperationErrorCallback) refers to stm32l4xx_hal_flash.o(.text.HAL_FLASH_OperationErrorCallback) for [Anonymous Symbol]
    stm32l4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_EndOfOperationCallback) refers to stm32l4xx_hal_flash.o(.text.HAL_FLASH_EndOfOperationCallback) for [Anonymous Symbol]
    stm32l4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Unlock) refers to stm32l4xx_hal_flash.o(.text.HAL_FLASH_Unlock) for [Anonymous Symbol]
    stm32l4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Lock) refers to stm32l4xx_hal_flash.o(.text.HAL_FLASH_Lock) for [Anonymous Symbol]
    stm32l4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Unlock) refers to stm32l4xx_hal_flash.o(.text.HAL_FLASH_OB_Unlock) for [Anonymous Symbol]
    stm32l4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Lock) refers to stm32l4xx_hal_flash.o(.text.HAL_FLASH_OB_Lock) for [Anonymous Symbol]
    stm32l4xx_hal_flash.o(.text.HAL_FLASH_OB_Launch) refers to stm32l4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_flash.o(.text.HAL_FLASH_OB_Launch) refers to stm32l4xx_hal_flash.o(.data.pFlash) for pFlash
    stm32l4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Launch) refers to stm32l4xx_hal_flash.o(.text.HAL_FLASH_OB_Launch) for [Anonymous Symbol]
    stm32l4xx_hal_flash.o(.text.HAL_FLASH_GetError) refers to stm32l4xx_hal_flash.o(.data.pFlash) for pFlash
    stm32l4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_GetError) refers to stm32l4xx_hal_flash.o(.text.HAL_FLASH_GetError) for [Anonymous Symbol]
    stm32l4xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase) refers to stm32l4xx_hal_flash.o(.data.pFlash) for pFlash
    stm32l4xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase) refers to stm32l4xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32l4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Erase) refers to stm32l4xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase) for [Anonymous Symbol]
    stm32l4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_PageErase) refers to stm32l4xx_hal_flash_ex.o(.text.FLASH_PageErase) for [Anonymous Symbol]
    stm32l4xx_hal_flash_ex.o(.text.FLASH_FlushCaches) refers to stm32l4xx_hal_flash.o(.data.pFlash) for pFlash
    stm32l4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_FlushCaches) refers to stm32l4xx_hal_flash_ex.o(.text.FLASH_FlushCaches) for [Anonymous Symbol]
    stm32l4xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase_IT) refers to stm32l4xx_hal_flash.o(.data.pFlash) for pFlash
    stm32l4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Erase_IT) refers to stm32l4xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase_IT) for [Anonymous Symbol]
    stm32l4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) refers to stm32l4xx_hal_flash.o(.data.pFlash) for pFlash
    stm32l4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) refers to stm32l4xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32l4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OBProgram) refers to stm32l4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) for [Anonymous Symbol]
    stm32l4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OBGetConfig) refers to stm32l4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBGetConfig) for [Anonymous Symbol]
    stm32l4xx_hal_flash_ramfunc.o(.ARM.exidx.text.HAL_FLASHEx_EnableRunPowerDown) refers to stm32l4xx_hal_flash_ramfunc.o(.text.HAL_FLASHEx_EnableRunPowerDown) for [Anonymous Symbol]
    stm32l4xx_hal_flash_ramfunc.o(.ARM.exidx.text.HAL_FLASHEx_DisableRunPowerDown) refers to stm32l4xx_hal_flash_ramfunc.o(.text.HAL_FLASHEx_DisableRunPowerDown) for [Anonymous Symbol]
    stm32l4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init) refers to stm32l4xx_hal_gpio.o(.text.HAL_GPIO_Init) for [Anonymous Symbol]
    stm32l4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit) refers to stm32l4xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for [Anonymous Symbol]
    stm32l4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin) refers to stm32l4xx_hal_gpio.o(.text.HAL_GPIO_ReadPin) for [Anonymous Symbol]
    stm32l4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin) refers to stm32l4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for [Anonymous Symbol]
    stm32l4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin) refers to stm32l4xx_hal_gpio.o(.text.HAL_GPIO_TogglePin) for [Anonymous Symbol]
    stm32l4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin) refers to stm32l4xx_hal_gpio.o(.text.HAL_GPIO_LockPin) for [Anonymous Symbol]
    stm32l4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32l4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback) for HAL_GPIO_EXTI_Callback
    stm32l4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32l4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) for [Anonymous Symbol]
    stm32l4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback) refers to stm32l4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback) for [Anonymous Symbol]
    stm32l4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Init) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Init) for [Anonymous Symbol]
    stm32l4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_DeInit) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_DeInit) for [Anonymous Symbol]
    stm32l4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Start) for [Anonymous Symbol]
    stm32l4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start_IT) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for [Anonymous Symbol]
    stm32l4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Abort) for [Anonymous Symbol]
    stm32l4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort_IT) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for [Anonymous Symbol]
    stm32l4xx_hal_dma.o(.text.HAL_DMA_PollForTransfer) refers to stm32l4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_PollForTransfer) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_PollForTransfer) for [Anonymous Symbol]
    stm32l4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_IRQHandler) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_IRQHandler) for [Anonymous Symbol]
    stm32l4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_RegisterCallback) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_RegisterCallback) for [Anonymous Symbol]
    stm32l4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_UnRegisterCallback) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_UnRegisterCallback) for [Anonymous Symbol]
    stm32l4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetState) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_GetState) for [Anonymous Symbol]
    stm32l4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetError) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_GetError) for [Anonymous Symbol]
    stm32l4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit) refers to stm32l4xx_hal_pwr.o(.text.HAL_PWR_DeInit) for [Anonymous Symbol]
    stm32l4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess) refers to stm32l4xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess) for [Anonymous Symbol]
    stm32l4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess) refers to stm32l4xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess) for [Anonymous Symbol]
    stm32l4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_ConfigPVD) refers to stm32l4xx_hal_pwr.o(.text.HAL_PWR_ConfigPVD) for [Anonymous Symbol]
    stm32l4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnablePVD) refers to stm32l4xx_hal_pwr.o(.text.HAL_PWR_EnablePVD) for [Anonymous Symbol]
    stm32l4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisablePVD) refers to stm32l4xx_hal_pwr.o(.text.HAL_PWR_DisablePVD) for [Anonymous Symbol]
    stm32l4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin) refers to stm32l4xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin) for [Anonymous Symbol]
    stm32l4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin) refers to stm32l4xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin) for [Anonymous Symbol]
    stm32l4xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableLowPowerRunMode) for HAL_PWREx_EnableLowPowerRunMode
    stm32l4xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableLowPowerRunMode) for HAL_PWREx_DisableLowPowerRunMode
    stm32l4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode) refers to stm32l4xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode) for [Anonymous Symbol]
    stm32l4xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterSTOP0Mode) for HAL_PWREx_EnterSTOP0Mode
    stm32l4xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterSTOP1Mode) for HAL_PWREx_EnterSTOP1Mode
    stm32l4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode) refers to stm32l4xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode) for [Anonymous Symbol]
    stm32l4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode) refers to stm32l4xx_hal_pwr.o(.text.HAL_PWR_EnterSTANDBYMode) for [Anonymous Symbol]
    stm32l4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit) refers to stm32l4xx_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit) for [Anonymous Symbol]
    stm32l4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit) refers to stm32l4xx_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit) for [Anonymous Symbol]
    stm32l4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend) refers to stm32l4xx_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend) for [Anonymous Symbol]
    stm32l4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend) refers to stm32l4xx_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend) for [Anonymous Symbol]
    stm32l4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVDCallback) refers to stm32l4xx_hal_pwr.o(.text.HAL_PWR_PVDCallback) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetVoltageRange) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ControlVoltageScaling) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableBatteryCharging) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBatteryCharging) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableBatteryCharging) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBatteryCharging) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableVddUSB) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableVddUSB) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableVddUSB) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableVddUSB) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableVddIO2) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableVddIO2) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableVddIO2) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableVddIO2) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableInternalWakeUpLine) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableInternalWakeUpLine) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableInternalWakeUpLine) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableInternalWakeUpLine) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableGPIOPullUp) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableGPIOPullUp) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableGPIOPullUp) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableGPIOPullUp) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableGPIOPullDown) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableGPIOPullDown) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableGPIOPullDown) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableGPIOPullDown) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnablePullUpPullDownConfig) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnablePullUpPullDownConfig) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisablePullUpPullDownConfig) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisablePullUpPullDownConfig) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableSRAM2ContentRetention) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableSRAM2ContentRetention) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_SetSRAM2ContentRetention) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_SetSRAM2ContentRetention) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableSRAM2ContentRetention) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableSRAM2ContentRetention) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableExtSMPS_0V95) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableExtSMPS_0V95) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableExtSMPS_0V95) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableExtSMPS_0V95) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnablePVM1) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnablePVM1) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisablePVM1) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisablePVM1) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnablePVM2) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnablePVM2) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisablePVM2) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisablePVM2) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnablePVM3) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnablePVM3) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisablePVM3) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisablePVM3) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnablePVM4) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnablePVM4) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisablePVM4) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisablePVM4) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ConfigPVM) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_ConfigPVM) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableLowPowerRunMode) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableLowPowerRunMode) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableLowPowerRunMode) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableLowPowerRunMode) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableLowPowerRunMode) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnterSTOP0Mode) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterSTOP0Mode) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnterSTOP1Mode) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterSTOP1Mode) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnterSTOP2Mode) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterSTOP2Mode) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnterSHUTDOWNMode) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterSHUTDOWNMode) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_PVD_PVM_IRQHandler) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_PVM3Callback) for HAL_PWREx_PVM3Callback
    stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_PVD_PVM_IRQHandler) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_PVM4Callback) for HAL_PWREx_PVM4Callback
    stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_PVD_PVM_IRQHandler) refers to stm32l4xx_hal_pwr.o(.text.HAL_PWR_PVDCallback) for HAL_PWR_PVDCallback
    stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_PVD_PVM_IRQHandler) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_PVM1Callback) for HAL_PWREx_PVM1Callback
    stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_PVD_PVM_IRQHandler) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_PVM2Callback) for HAL_PWREx_PVM2Callback
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_PVD_PVM_IRQHandler) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_PVD_PVM_IRQHandler) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_PVM1Callback) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_PVM1Callback) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_PVM2Callback) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_PVM2Callback) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_PVM3Callback) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_PVM3Callback) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_PVM4Callback) refers to stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_PVM4Callback) for [Anonymous Symbol]
    stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriorityGrouping) refers to stm32l4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) for [Anonymous Symbol]
    stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority) refers to stm32l4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for [Anonymous Symbol]
    stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ) refers to stm32l4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for [Anonymous Symbol]
    stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ) refers to stm32l4xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) for [Anonymous Symbol]
    stm32l4xx_hal_cortex.o(.text.HAL_NVIC_SystemReset) refers to stm32l4xx_hal_cortex.o(.text.__NVIC_SystemReset) for __NVIC_SystemReset
    stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset) refers to stm32l4xx_hal_cortex.o(.text.HAL_NVIC_SystemReset) for [Anonymous Symbol]
    stm32l4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SystemReset) refers to stm32l4xx_hal_cortex.o(.text.__NVIC_SystemReset) for [Anonymous Symbol]
    stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config) refers to stm32l4xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for [Anonymous Symbol]
    stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriorityGrouping) refers to stm32l4xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority) refers to stm32l4xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) for [Anonymous Symbol]
    stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ) refers to stm32l4xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ) for [Anonymous Symbol]
    stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ) refers to stm32l4xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ) for [Anonymous Symbol]
    stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ) refers to stm32l4xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetActive) refers to stm32l4xx_hal_cortex.o(.text.HAL_NVIC_GetActive) for [Anonymous Symbol]
    stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig) refers to stm32l4xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig) for [Anonymous Symbol]
    stm32l4xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) refers to stm32l4xx_hal_cortex.o(.text.HAL_SYSTICK_Callback) for HAL_SYSTICK_Callback
    stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler) refers to stm32l4xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) for [Anonymous Symbol]
    stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback) refers to stm32l4xx_hal_cortex.o(.text.HAL_SYSTICK_Callback) for [Anonymous Symbol]
    stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable) refers to stm32l4xx_hal_cortex.o(.text.HAL_MPU_Enable) for [Anonymous Symbol]
    stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable) refers to stm32l4xx_hal_cortex.o(.text.HAL_MPU_Disable) for [Anonymous Symbol]
    stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion) refers to stm32l4xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion) for [Anonymous Symbol]
    stm32l4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_SetConfigLine) refers to stm32l4xx_hal_exti.o(.text.HAL_EXTI_SetConfigLine) for [Anonymous Symbol]
    stm32l4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetConfigLine) refers to stm32l4xx_hal_exti.o(.text.HAL_EXTI_GetConfigLine) for [Anonymous Symbol]
    stm32l4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_ClearConfigLine) refers to stm32l4xx_hal_exti.o(.text.HAL_EXTI_ClearConfigLine) for [Anonymous Symbol]
    stm32l4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_RegisterCallback) refers to stm32l4xx_hal_exti.o(.text.HAL_EXTI_RegisterCallback) for [Anonymous Symbol]
    stm32l4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetHandle) refers to stm32l4xx_hal_exti.o(.text.HAL_EXTI_GetHandle) for [Anonymous Symbol]
    stm32l4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_IRQHandler) refers to stm32l4xx_hal_exti.o(.text.HAL_EXTI_IRQHandler) for [Anonymous Symbol]
    stm32l4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetPending) refers to stm32l4xx_hal_exti.o(.text.HAL_EXTI_GetPending) for [Anonymous Symbol]
    stm32l4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_ClearPending) refers to stm32l4xx_hal_exti.o(.text.HAL_EXTI_ClearPending) for [Anonymous Symbol]
    stm32l4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GenerateSWI) refers to stm32l4xx_hal_exti.o(.text.HAL_EXTI_GenerateSWI) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_Base_Init) refers to stm32l4xx_hal_msp.o(.text.HAL_TIM_Base_MspInit) for HAL_TIM_Base_MspInit
    stm32l4xx_hal_tim.o(.text.HAL_TIM_Base_Init) refers to stm32l4xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Init) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_Base_Init) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspInit) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_Base_MspInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.TIM_Base_SetConfig) refers to stm32l4xx_hal_tim.o(.text.TIM_Base_SetConfig) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_Base_DeInit) refers to stm32l4xx_hal_msp.o(.text.HAL_TIM_Base_MspDeInit) for HAL_TIM_Base_MspDeInit
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_DeInit) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_Base_DeInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspDeInit) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_Base_MspDeInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_Base_Start) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_Base_Stop) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_IT) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_IT) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_Base_Stop_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32l4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for TIM_DMAPeriodElapsedCplt
    stm32l4xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32l4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for TIM_DMAPeriodElapsedHalfCplt
    stm32l4xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32l4xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32l4xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_DMA) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) refers to main.o(.text.HAL_TIM_PeriodElapsedCallback) for HAL_TIM_PeriodElapsedCallback
    stm32l4xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedCplt) refers to stm32l4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedHalfCpltCallback) for HAL_TIM_PeriodElapsedHalfCpltCallback
    stm32l4xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedHalfCplt) refers to stm32l4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.TIM_DMAError) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_ErrorCallback) for HAL_TIM_ErrorCallback
    stm32l4xx_hal_tim.o(.ARM.exidx.text.TIM_DMAError) refers to stm32l4xx_hal_tim.o(.text.TIM_DMAError) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_Base_Stop_DMA) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_DMA) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_Base_Stop_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_Init) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_MspInit) for HAL_TIM_OC_MspInit
    stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_Init) refers to stm32l4xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Init) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_Init) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspInit) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_MspInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_DeInit) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_MspDeInit) for HAL_TIM_OC_MspDeInit
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DeInit) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_DeInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspDeInit) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_MspDeInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_Start) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.TIM_CCxChannelCmd) refers to stm32l4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_Stop) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_Start_IT) refers to stm32l4xx_hal_tim.o(.rodata.cst16) for .Lswitch.table.HAL_TIM_IC_Start_IT
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_IT) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_Start_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_Stop_IT) refers to stm32l4xx_hal_tim.o(.rodata.cst16) for .Lswitch.table.HAL_TIM_IC_Stop_IT
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_IT) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_Stop_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32l4xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for TIM_DMADelayPulseCplt
    stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32l4xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32l4xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_DMA) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for HAL_TIM_PWM_PulseFinishedCallback
    stm32l4xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseCplt) refers to stm32l4xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback) for HAL_TIM_PWM_PulseFinishedHalfCpltCallback
    stm32l4xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseHalfCplt) refers to stm32l4xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_Stop_DMA) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_DMA) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_Stop_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_Init) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_MspInit) for HAL_TIM_PWM_MspInit
    stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_Init) refers to stm32l4xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Init) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_Init) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspInit) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_MspInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_DeInit) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_MspDeInit) for HAL_TIM_PWM_MspDeInit
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_DeInit) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_DeInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspDeInit) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_MspDeInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_Start) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_Stop) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_Start_IT) refers to stm32l4xx_hal_tim.o(.rodata.cst16) for .Lswitch.table.HAL_TIM_IC_Start_IT
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_IT) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_Start_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_IT) refers to stm32l4xx_hal_tim.o(.rodata.cst16) for .Lswitch.table.HAL_TIM_IC_Stop_IT
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_IT) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32l4xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for TIM_DMADelayPulseCplt
    stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32l4xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32l4xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_DMA) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_DMA) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_DMA) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_Init) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_MspInit) for HAL_TIM_IC_MspInit
    stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_Init) refers to stm32l4xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Init) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_Init) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspInit) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_MspInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_DeInit) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_MspDeInit) for HAL_TIM_IC_MspDeInit
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_DeInit) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_DeInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspDeInit) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_MspDeInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_Start) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_Stop) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_Start_IT) refers to stm32l4xx_hal_tim.o(.rodata.cst16) for .Lswitch.table.HAL_TIM_IC_Start_IT
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_IT) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_Start_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_Stop_IT) refers to stm32l4xx_hal_tim.o(.rodata.cst16) for .Lswitch.table.HAL_TIM_IC_Stop_IT
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_IT) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_Stop_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32l4xx_hal_tim.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32l4xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32l4xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_DMA) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.TIM_DMACaptureCplt) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback) for HAL_TIM_IC_CaptureCallback
    stm32l4xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureCplt) refers to stm32l4xx_hal_tim.o(.text.TIM_DMACaptureCplt) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_CaptureHalfCpltCallback) for HAL_TIM_IC_CaptureHalfCpltCallback
    stm32l4xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureHalfCplt) refers to stm32l4xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_Stop_DMA) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_DMA) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_Stop_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspInit) for HAL_TIM_OnePulse_MspInit
    stm32l4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init) refers to stm32l4xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Init) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspInit) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_OnePulse_DeInit) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspDeInit) for HAL_TIM_OnePulse_MspDeInit
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_DeInit) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_OnePulse_DeInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspDeInit) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspDeInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start_IT) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop_IT) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_Encoder_Init) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_Encoder_MspInit) for HAL_TIM_Encoder_MspInit
    stm32l4xx_hal_tim.o(.text.HAL_TIM_Encoder_Init) refers to stm32l4xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Init) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_Encoder_Init) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspInit) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_Encoder_MspInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_Encoder_DeInit) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_Encoder_MspDeInit) for HAL_TIM_Encoder_MspDeInit
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_DeInit) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_Encoder_DeInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspDeInit) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_Encoder_MspDeInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_IT) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_IT) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32l4xx_hal_tim.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32l4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32l4xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32l4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32l4xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32l4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_DMA) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_DMA) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_DMA) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback) for HAL_TIM_IC_CaptureCallback
    stm32l4xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback) for HAL_TIM_OC_DelayElapsedCallback
    stm32l4xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for HAL_TIM_PWM_PulseFinishedCallback
    stm32l4xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to main.o(.text.HAL_TIM_PeriodElapsedCallback) for HAL_TIM_PeriodElapsedCallback
    stm32l4xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback) for HAL_TIMEx_BreakCallback
    stm32l4xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_Break2Callback) for HAL_TIMEx_Break2Callback
    stm32l4xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_TriggerCallback) for HAL_TIM_TriggerCallback
    stm32l4xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback) for HAL_TIMEx_CommutCallback
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IRQHandler) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_IRQHandler) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureCallback) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DelayElapsedCallback) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedCallback) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedCallback) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerCallback) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_TriggerCallback) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_ConfigChannel) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.TIM_OC2_SetConfig) refers to stm32l4xx_hal_tim.o(.text.TIM_OC2_SetConfig) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_ConfigChannel) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.TIM_TI1_SetConfig) refers to stm32l4xx_hal_tim.o(.text.TIM_TI1_SetConfig) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_ConfigChannel) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_ConfigChannel) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) for HAL_TIM_DMABurst_MultiWriteStart
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStart) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32l4xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for TIM_DMADelayPulseCplt
    stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32l4xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32l4xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32l4xx_hal_tim.o(.text.TIM_DMATriggerCplt) for TIM_DMATriggerCplt
    stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32l4xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) for TIM_DMATriggerHalfCplt
    stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32l4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for TIM_DMAPeriodElapsedCplt
    stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32l4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for TIM_DMAPeriodElapsedHalfCplt
    stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32l4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) for TIMEx_DMACommutationCplt
    stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32l4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) for TIMEx_DMACommutationHalfCplt
    stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.TIM_DMATriggerCplt) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_TriggerCallback) for HAL_TIM_TriggerCallback
    stm32l4xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerCplt) refers to stm32l4xx_hal_tim.o(.text.TIM_DMATriggerCplt) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_TriggerHalfCpltCallback) for HAL_TIM_TriggerHalfCpltCallback
    stm32l4xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerHalfCplt) refers to stm32l4xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStop) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStop) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStop) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) for HAL_TIM_DMABurst_MultiReadStart
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStart) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32l4xx_hal_tim.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32l4xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32l4xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32l4xx_hal_tim.o(.text.TIM_DMATriggerCplt) for TIM_DMATriggerCplt
    stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32l4xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) for TIM_DMATriggerHalfCplt
    stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32l4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for TIM_DMAPeriodElapsedCplt
    stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32l4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for TIM_DMAPeriodElapsedHalfCplt
    stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32l4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) for TIMEx_DMACommutationCplt
    stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32l4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) for TIMEx_DMACommutationHalfCplt
    stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStop) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStop) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStop) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GenerateEvent) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_GenerateEvent) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigOCrefClear) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_ConfigOCrefClear) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.TIM_ETR_SetConfig) refers to stm32l4xx_hal_tim.o(.text.TIM_ETR_SetConfig) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigClockSource) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigTI1Input) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_ConfigTI1Input) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro) refers to stm32l4xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) for TIM_SlaveTimer_SetConfig
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.TIM_SlaveTimer_SetConfig) refers to stm32l4xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro_IT) refers to stm32l4xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) for TIM_SlaveTimer_SetConfig
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro_IT) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ReadCapturedValue) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_ReadCapturedValue) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedHalfCpltCallback) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedHalfCpltCallback) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureHalfCpltCallback) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_CaptureHalfCpltCallback) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerHalfCpltCallback) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_TriggerHalfCpltCallback) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ErrorCallback) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_ErrorCallback) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_GetState) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_Base_GetState) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_GetState) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_GetState) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_GetState) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_GetState) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_GetState) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_GetState) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_GetState) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_OnePulse_GetState) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_GetState) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_Encoder_GetState) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GetActiveChannel) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_GetActiveChannel) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GetChannelState) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_GetChannelState) for [Anonymous Symbol]
    stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurstState) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurstState) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspInit) for HAL_TIMEx_HallSensor_MspInit
    stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32l4xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32l4xx_hal_tim.o(.text.TIM_TI1_SetConfig) for TIM_TI1_SetConfig
    stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32l4xx_hal_tim.o(.text.TIM_OC2_SetConfig) for TIM_OC2_SetConfig
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Init) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspInit) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_DeInit) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspDeInit) for HAL_TIMEx_HallSensor_MspDeInit
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_DeInit) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_DeInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspDeInit) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspDeInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start) refers to stm32l4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop) refers to stm32l4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_IT) refers to stm32l4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_IT) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_IT) refers to stm32l4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_IT) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32l4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32l4xx_hal_tim.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32l4xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32l4xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_DMA) refers to stm32l4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_DMA) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_DMA) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_IT) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_IT) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32l4xx_hal_tim_ex.o(.text.TIM_DMADelayPulseNCplt) for TIM_DMADelayPulseNCplt
    stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32l4xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32l4xx_hal_tim_ex.o(.text.TIM_DMAErrorCCxN) for TIM_DMAErrorCCxN
    stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.text.TIM_DMADelayPulseNCplt) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for HAL_TIM_PWM_PulseFinishedCallback
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.TIM_DMADelayPulseNCplt) refers to stm32l4xx_hal_tim_ex.o(.text.TIM_DMADelayPulseNCplt) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.text.TIM_DMAErrorCCxN) refers to stm32l4xx_hal_tim.o(.text.HAL_TIM_ErrorCallback) for HAL_TIM_ErrorCallback
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.TIM_DMAErrorCCxN) refers to stm32l4xx_hal_tim_ex.o(.text.TIM_DMAErrorCCxN) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_DMA) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_DMA) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_IT) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_IT) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32l4xx_hal_tim_ex.o(.text.TIM_DMADelayPulseNCplt) for TIM_DMADelayPulseNCplt
    stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32l4xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32l4xx_hal_tim_ex.o(.text.TIM_DMAErrorCCxN) for TIM_DMAErrorCCxN
    stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_DMA) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_DMA) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start) refers to stm32l4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop) refers to stm32l4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start_IT) refers to stm32l4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start_IT) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop_IT) refers to stm32l4xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop_IT) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_IT) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32l4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) for TIMEx_DMACommutationCplt
    stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32l4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) for TIMEx_DMACommutationHalfCplt
    stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32l4xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback) for HAL_TIMEx_CommutCallback
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.TIMEx_DMACommutationCplt) refers to stm32l4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutHalfCpltCallback) for HAL_TIMEx_CommutHalfCpltCallback
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.TIMEx_DMACommutationHalfCplt) refers to stm32l4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_MasterConfigSynchronization) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_MasterConfigSynchronization) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigBreakDeadTime) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigBreakDeadTime) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigBreakInput) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigBreakInput) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_RemapConfig) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_RemapConfig) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_GroupChannel5) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_GroupChannel5) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_CommutCallback) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_CommutHalfCpltCallback) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutHalfCpltCallback) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_BreakCallback) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_Break2Callback) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_Break2Callback) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_GetState) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_GetState) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_GetChannelNState) refers to stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_GetChannelNState) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.HAL_UART_Init) refers to stm32l4xx_hal_msp.o(.text.HAL_UART_MspInit) for HAL_UART_MspInit
    stm32l4xx_hal_uart.o(.text.HAL_UART_Init) refers to stm32l4xx_hal_uart.o(.text.UART_AdvFeatureConfig) for UART_AdvFeatureConfig
    stm32l4xx_hal_uart.o(.text.HAL_UART_Init) refers to stm32l4xx_hal_uart.o(.text.UART_SetConfig) for UART_SetConfig
    stm32l4xx_hal_uart.o(.text.HAL_UART_Init) refers to stm32l4xx_hal_uart.o(.text.UART_CheckIdleState) for UART_CheckIdleState
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Init) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_Init) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_MspInit) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_MspInit) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_AdvFeatureConfig) refers to stm32l4xx_hal_uart.o(.text.UART_AdvFeatureConfig) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.UART_SetConfig) refers to stm32l4xx_hal_uart.o(.rodata.cst16) for .Lswitch.table.UART_SetConfig.5
    stm32l4xx_hal_uart.o(.text.UART_SetConfig) refers to stm32l4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for HAL_RCC_GetPCLK1Freq
    stm32l4xx_hal_uart.o(.text.UART_SetConfig) refers to stm32l4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for HAL_RCC_GetSysClockFreq
    stm32l4xx_hal_uart.o(.text.UART_SetConfig) refers to lludivv7m.o(.text) for __aeabi_uldivmod
    stm32l4xx_hal_uart.o(.text.UART_SetConfig) refers to stm32l4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) for HAL_RCC_GetPCLK2Freq
    stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_SetConfig) refers to stm32l4xx_hal_uart.o(.text.UART_SetConfig) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.UART_CheckIdleState) refers to stm32l4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_uart.o(.text.UART_CheckIdleState) refers to stm32l4xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout) for UART_WaitOnFlagUntilTimeout
    stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_CheckIdleState) refers to stm32l4xx_hal_uart.o(.text.UART_CheckIdleState) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.HAL_HalfDuplex_Init) refers to stm32l4xx_hal_msp.o(.text.HAL_UART_MspInit) for HAL_UART_MspInit
    stm32l4xx_hal_uart.o(.text.HAL_HalfDuplex_Init) refers to stm32l4xx_hal_uart.o(.text.UART_AdvFeatureConfig) for UART_AdvFeatureConfig
    stm32l4xx_hal_uart.o(.text.HAL_HalfDuplex_Init) refers to stm32l4xx_hal_uart.o(.text.UART_SetConfig) for UART_SetConfig
    stm32l4xx_hal_uart.o(.text.HAL_HalfDuplex_Init) refers to stm32l4xx_hal_uart.o(.text.UART_CheckIdleState) for UART_CheckIdleState
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_Init) refers to stm32l4xx_hal_uart.o(.text.HAL_HalfDuplex_Init) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.HAL_LIN_Init) refers to stm32l4xx_hal_msp.o(.text.HAL_UART_MspInit) for HAL_UART_MspInit
    stm32l4xx_hal_uart.o(.text.HAL_LIN_Init) refers to stm32l4xx_hal_uart.o(.text.UART_AdvFeatureConfig) for UART_AdvFeatureConfig
    stm32l4xx_hal_uart.o(.text.HAL_LIN_Init) refers to stm32l4xx_hal_uart.o(.text.UART_SetConfig) for UART_SetConfig
    stm32l4xx_hal_uart.o(.text.HAL_LIN_Init) refers to stm32l4xx_hal_uart.o(.text.UART_CheckIdleState) for UART_CheckIdleState
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_LIN_Init) refers to stm32l4xx_hal_uart.o(.text.HAL_LIN_Init) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.HAL_MultiProcessor_Init) refers to stm32l4xx_hal_msp.o(.text.HAL_UART_MspInit) for HAL_UART_MspInit
    stm32l4xx_hal_uart.o(.text.HAL_MultiProcessor_Init) refers to stm32l4xx_hal_uart.o(.text.UART_AdvFeatureConfig) for UART_AdvFeatureConfig
    stm32l4xx_hal_uart.o(.text.HAL_MultiProcessor_Init) refers to stm32l4xx_hal_uart.o(.text.UART_SetConfig) for UART_SetConfig
    stm32l4xx_hal_uart.o(.text.HAL_MultiProcessor_Init) refers to stm32l4xx_hal_uart.o(.text.UART_CheckIdleState) for UART_CheckIdleState
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_Init) refers to stm32l4xx_hal_uart.o(.text.HAL_MultiProcessor_Init) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.HAL_UART_DeInit) refers to stm32l4xx_hal_msp.o(.text.HAL_UART_MspDeInit) for HAL_UART_MspDeInit
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DeInit) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_DeInit) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_MspDeInit) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_MspDeInit) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.HAL_UART_Transmit) refers to stm32l4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_uart.o(.text.HAL_UART_Transmit) refers to stm32l4xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout) for UART_WaitOnFlagUntilTimeout
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_Transmit) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout) refers to stm32l4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_WaitOnFlagUntilTimeout) refers to stm32l4xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.HAL_UART_Receive) refers to stm32l4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_uart.o(.text.HAL_UART_Receive) refers to stm32l4xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout) for UART_WaitOnFlagUntilTimeout
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_Receive) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.HAL_UART_Transmit_IT) refers to stm32l4xx_hal_uart.o(.text.UART_TxISR_8BIT) for UART_TxISR_8BIT
    stm32l4xx_hal_uart.o(.text.HAL_UART_Transmit_IT) refers to stm32l4xx_hal_uart.o(.text.UART_TxISR_16BIT) for UART_TxISR_16BIT
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit_IT) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_Transmit_IT) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_TxISR_16BIT) refers to stm32l4xx_hal_uart.o(.text.UART_TxISR_16BIT) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_TxISR_8BIT) refers to stm32l4xx_hal_uart.o(.text.UART_TxISR_8BIT) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.HAL_UART_Receive_IT) refers to stm32l4xx_hal_uart.o(.text.UART_Start_Receive_IT) for UART_Start_Receive_IT
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive_IT) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_Receive_IT) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.UART_Start_Receive_IT) refers to stm32l4xx_hal_uart.o(.text.UART_RxISR_8BIT) for UART_RxISR_8BIT
    stm32l4xx_hal_uart.o(.text.UART_Start_Receive_IT) refers to stm32l4xx_hal_uart.o(.text.UART_RxISR_16BIT) for UART_RxISR_16BIT
    stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_Start_Receive_IT) refers to stm32l4xx_hal_uart.o(.text.UART_Start_Receive_IT) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.HAL_UART_Transmit_DMA) refers to stm32l4xx_hal_uart.o(.text.UART_DMAError) for UART_DMAError
    stm32l4xx_hal_uart.o(.text.HAL_UART_Transmit_DMA) refers to stm32l4xx_hal_uart.o(.text.UART_DMATransmitCplt) for UART_DMATransmitCplt
    stm32l4xx_hal_uart.o(.text.HAL_UART_Transmit_DMA) refers to stm32l4xx_hal_uart.o(.text.UART_DMATxHalfCplt) for UART_DMATxHalfCplt
    stm32l4xx_hal_uart.o(.text.HAL_UART_Transmit_DMA) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit_DMA) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_Transmit_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.UART_DMATransmitCplt) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_TxCpltCallback) for HAL_UART_TxCpltCallback
    stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_DMATransmitCplt) refers to stm32l4xx_hal_uart.o(.text.UART_DMATransmitCplt) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.UART_DMATxHalfCplt) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_TxHalfCpltCallback) for HAL_UART_TxHalfCpltCallback
    stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_DMATxHalfCplt) refers to stm32l4xx_hal_uart.o(.text.UART_DMATxHalfCplt) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.UART_DMAError) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_ErrorCallback) for HAL_UART_ErrorCallback
    stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_DMAError) refers to stm32l4xx_hal_uart.o(.text.UART_DMAError) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.HAL_UART_Receive_DMA) refers to stm32l4xx_hal_uart.o(.text.UART_DMAReceiveCplt) for UART_DMAReceiveCplt
    stm32l4xx_hal_uart.o(.text.HAL_UART_Receive_DMA) refers to stm32l4xx_hal_uart.o(.text.UART_DMARxHalfCplt) for UART_DMARxHalfCplt
    stm32l4xx_hal_uart.o(.text.HAL_UART_Receive_DMA) refers to stm32l4xx_hal_uart.o(.text.UART_DMAError) for UART_DMAError
    stm32l4xx_hal_uart.o(.text.HAL_UART_Receive_DMA) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive_DMA) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_Receive_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.UART_Start_Receive_DMA) refers to stm32l4xx_hal_uart.o(.text.UART_DMAError) for UART_DMAError
    stm32l4xx_hal_uart.o(.text.UART_Start_Receive_DMA) refers to stm32l4xx_hal_uart.o(.text.UART_DMAReceiveCplt) for UART_DMAReceiveCplt
    stm32l4xx_hal_uart.o(.text.UART_Start_Receive_DMA) refers to stm32l4xx_hal_uart.o(.text.UART_DMARxHalfCplt) for UART_DMARxHalfCplt
    stm32l4xx_hal_uart.o(.text.UART_Start_Receive_DMA) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_Start_Receive_DMA) refers to stm32l4xx_hal_uart.o(.text.UART_Start_Receive_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAPause) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_DMAPause) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAResume) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_DMAResume) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.HAL_UART_DMAStop) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32l4xx_hal_uart.o(.text.HAL_UART_DMAStop) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_GetError) for HAL_DMA_GetError
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAStop) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_DMAStop) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.HAL_UART_Abort) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32l4xx_hal_uart.o(.text.HAL_UART_Abort) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_GetError) for HAL_DMA_GetError
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Abort) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_Abort) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.HAL_UART_AbortTransmit) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32l4xx_hal_uart.o(.text.HAL_UART_AbortTransmit) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_GetError) for HAL_DMA_GetError
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmit) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_AbortTransmit) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.HAL_UART_AbortReceive) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32l4xx_hal_uart.o(.text.HAL_UART_AbortReceive) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_GetError) for HAL_DMA_GetError
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceive) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_AbortReceive) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.HAL_UART_Abort_IT) refers to stm32l4xx_hal_uart.o(.text.UART_DMATxAbortCallback) for UART_DMATxAbortCallback
    stm32l4xx_hal_uart.o(.text.HAL_UART_Abort_IT) refers to stm32l4xx_hal_uart.o(.text.UART_DMARxAbortCallback) for UART_DMARxAbortCallback
    stm32l4xx_hal_uart.o(.text.HAL_UART_Abort_IT) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32l4xx_hal_uart.o(.text.HAL_UART_Abort_IT) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_AbortCpltCallback) for HAL_UART_AbortCpltCallback
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Abort_IT) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_Abort_IT) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.UART_DMATxAbortCallback) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_AbortCpltCallback) for HAL_UART_AbortCpltCallback
    stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_DMATxAbortCallback) refers to stm32l4xx_hal_uart.o(.text.UART_DMATxAbortCallback) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.UART_DMARxAbortCallback) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_AbortCpltCallback) for HAL_UART_AbortCpltCallback
    stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_DMARxAbortCallback) refers to stm32l4xx_hal_uart.o(.text.UART_DMARxAbortCallback) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortCpltCallback) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_AbortCpltCallback) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.HAL_UART_AbortTransmit_IT) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_AbortTransmitCpltCallback) for HAL_UART_AbortTransmitCpltCallback
    stm32l4xx_hal_uart.o(.text.HAL_UART_AbortTransmit_IT) refers to stm32l4xx_hal_uart.o(.text.UART_DMATxOnlyAbortCallback) for UART_DMATxOnlyAbortCallback
    stm32l4xx_hal_uart.o(.text.HAL_UART_AbortTransmit_IT) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmit_IT) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_AbortTransmit_IT) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.UART_DMATxOnlyAbortCallback) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_AbortTransmitCpltCallback) for HAL_UART_AbortTransmitCpltCallback
    stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_DMATxOnlyAbortCallback) refers to stm32l4xx_hal_uart.o(.text.UART_DMATxOnlyAbortCallback) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmitCpltCallback) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_AbortTransmitCpltCallback) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.HAL_UART_AbortReceive_IT) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_AbortReceiveCpltCallback) for HAL_UART_AbortReceiveCpltCallback
    stm32l4xx_hal_uart.o(.text.HAL_UART_AbortReceive_IT) refers to stm32l4xx_hal_uart.o(.text.UART_DMARxOnlyAbortCallback) for UART_DMARxOnlyAbortCallback
    stm32l4xx_hal_uart.o(.text.HAL_UART_AbortReceive_IT) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceive_IT) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_AbortReceive_IT) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.UART_DMARxOnlyAbortCallback) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_AbortReceiveCpltCallback) for HAL_UART_AbortReceiveCpltCallback
    stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_DMARxOnlyAbortCallback) refers to stm32l4xx_hal_uart.o(.text.UART_DMARxOnlyAbortCallback) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceiveCpltCallback) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_AbortReceiveCpltCallback) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32l4xx_hal_uart_ex.o(.text.HAL_UARTEx_WakeupCallback) for HAL_UARTEx_WakeupCallback
    stm32l4xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32l4xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback) for HAL_UARTEx_RxEventCallback
    stm32l4xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32l4xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_ErrorCallback) for HAL_UART_ErrorCallback
    stm32l4xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_TxCpltCallback) for HAL_UART_TxCpltCallback
    stm32l4xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32l4xx_hal_uart.o(.text.UART_DMAAbortOnError) for UART_DMAAbortOnError
    stm32l4xx_hal_uart.o(.text.HAL_UART_IRQHandler) refers to stm32l4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_IRQHandler) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_IRQHandler) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.UART_DMAAbortOnError) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_ErrorCallback) for HAL_UART_ErrorCallback
    stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_DMAAbortOnError) refers to stm32l4xx_hal_uart.o(.text.UART_DMAAbortOnError) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_ErrorCallback) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_ErrorCallback) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UARTEx_RxEventCallback) refers to stm32l4xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_TxCpltCallback) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_TxCpltCallback) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_TxHalfCpltCallback) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_TxHalfCpltCallback) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_RxCpltCallback) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_RxCpltCallback) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_RxHalfCpltCallback) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_RxHalfCpltCallback) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_ReceiverTimeout_Config) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_ReceiverTimeout_Config) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_EnableReceiverTimeout) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_EnableReceiverTimeout) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DisableReceiverTimeout) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_DisableReceiverTimeout) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.HAL_MultiProcessor_EnableMuteMode) refers to stm32l4xx_hal_uart.o(.text.UART_CheckIdleState) for UART_CheckIdleState
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_EnableMuteMode) refers to stm32l4xx_hal_uart.o(.text.HAL_MultiProcessor_EnableMuteMode) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.HAL_MultiProcessor_DisableMuteMode) refers to stm32l4xx_hal_uart.o(.text.UART_CheckIdleState) for UART_CheckIdleState
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_DisableMuteMode) refers to stm32l4xx_hal_uart.o(.text.HAL_MultiProcessor_DisableMuteMode) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_EnterMuteMode) refers to stm32l4xx_hal_uart.o(.text.HAL_MultiProcessor_EnterMuteMode) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_EnableTransmitter) refers to stm32l4xx_hal_uart.o(.text.HAL_HalfDuplex_EnableTransmitter) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_EnableReceiver) refers to stm32l4xx_hal_uart.o(.text.HAL_HalfDuplex_EnableReceiver) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_LIN_SendBreak) refers to stm32l4xx_hal_uart.o(.text.HAL_LIN_SendBreak) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_GetState) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_GetState) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_GetError) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_GetError) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.UART_RxISR_16BIT) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_RxCpltCallback) for HAL_UART_RxCpltCallback
    stm32l4xx_hal_uart.o(.text.UART_RxISR_16BIT) refers to stm32l4xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback) for HAL_UARTEx_RxEventCallback
    stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_RxISR_16BIT) refers to stm32l4xx_hal_uart.o(.text.UART_RxISR_16BIT) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.UART_RxISR_8BIT) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_RxCpltCallback) for HAL_UART_RxCpltCallback
    stm32l4xx_hal_uart.o(.text.UART_RxISR_8BIT) refers to stm32l4xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback) for HAL_UARTEx_RxEventCallback
    stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_RxISR_8BIT) refers to stm32l4xx_hal_uart.o(.text.UART_RxISR_8BIT) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.UART_DMAReceiveCplt) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_RxCpltCallback) for HAL_UART_RxCpltCallback
    stm32l4xx_hal_uart.o(.text.UART_DMAReceiveCplt) refers to stm32l4xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback) for HAL_UARTEx_RxEventCallback
    stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_DMAReceiveCplt) refers to stm32l4xx_hal_uart.o(.text.UART_DMAReceiveCplt) for [Anonymous Symbol]
    stm32l4xx_hal_uart.o(.text.UART_DMARxHalfCplt) refers to stm32l4xx_hal_uart.o(.text.HAL_UART_RxHalfCpltCallback) for HAL_UART_RxHalfCpltCallback
    stm32l4xx_hal_uart.o(.text.UART_DMARxHalfCplt) refers to stm32l4xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback) for HAL_UARTEx_RxEventCallback
    stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_DMARxHalfCplt) refers to stm32l4xx_hal_uart.o(.text.UART_DMARxHalfCplt) for [Anonymous Symbol]
    stm32l4xx_hal_uart_ex.o(.text.HAL_RS485Ex_Init) refers to stm32l4xx_hal_msp.o(.text.HAL_UART_MspInit) for HAL_UART_MspInit
    stm32l4xx_hal_uart_ex.o(.text.HAL_RS485Ex_Init) refers to stm32l4xx_hal_uart.o(.text.UART_AdvFeatureConfig) for UART_AdvFeatureConfig
    stm32l4xx_hal_uart_ex.o(.text.HAL_RS485Ex_Init) refers to stm32l4xx_hal_uart.o(.text.UART_SetConfig) for UART_SetConfig
    stm32l4xx_hal_uart_ex.o(.text.HAL_RS485Ex_Init) refers to stm32l4xx_hal_uart.o(.text.UART_CheckIdleState) for UART_CheckIdleState
    stm32l4xx_hal_uart_ex.o(.ARM.exidx.text.HAL_RS485Ex_Init) refers to stm32l4xx_hal_uart_ex.o(.text.HAL_RS485Ex_Init) for [Anonymous Symbol]
    stm32l4xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_WakeupCallback) refers to stm32l4xx_hal_uart_ex.o(.text.HAL_UARTEx_WakeupCallback) for [Anonymous Symbol]
    stm32l4xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_EnableClockStopMode) refers to stm32l4xx_hal_uart_ex.o(.text.HAL_UARTEx_EnableClockStopMode) for [Anonymous Symbol]
    stm32l4xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_DisableClockStopMode) refers to stm32l4xx_hal_uart_ex.o(.text.HAL_UARTEx_DisableClockStopMode) for [Anonymous Symbol]
    stm32l4xx_hal_uart_ex.o(.text.HAL_MultiProcessorEx_AddressLength_Set) refers to stm32l4xx_hal_uart.o(.text.UART_CheckIdleState) for UART_CheckIdleState
    stm32l4xx_hal_uart_ex.o(.ARM.exidx.text.HAL_MultiProcessorEx_AddressLength_Set) refers to stm32l4xx_hal_uart_ex.o(.text.HAL_MultiProcessorEx_AddressLength_Set) for [Anonymous Symbol]
    stm32l4xx_hal_uart_ex.o(.text.HAL_UARTEx_StopModeWakeUpSourceConfig) refers to stm32l4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_uart_ex.o(.text.HAL_UARTEx_StopModeWakeUpSourceConfig) refers to stm32l4xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout) for UART_WaitOnFlagUntilTimeout
    stm32l4xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_StopModeWakeUpSourceConfig) refers to stm32l4xx_hal_uart_ex.o(.text.HAL_UARTEx_StopModeWakeUpSourceConfig) for [Anonymous Symbol]
    stm32l4xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_EnableStopMode) refers to stm32l4xx_hal_uart_ex.o(.text.HAL_UARTEx_EnableStopMode) for [Anonymous Symbol]
    stm32l4xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_DisableStopMode) refers to stm32l4xx_hal_uart_ex.o(.text.HAL_UARTEx_DisableStopMode) for [Anonymous Symbol]
    stm32l4xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle) refers to stm32l4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_ReceiveToIdle) refers to stm32l4xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle) for [Anonymous Symbol]
    stm32l4xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle_IT) refers to stm32l4xx_hal_uart.o(.text.UART_Start_Receive_IT) for UART_Start_Receive_IT
    stm32l4xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_ReceiveToIdle_IT) refers to stm32l4xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle_IT) for [Anonymous Symbol]
    stm32l4xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle_DMA) refers to stm32l4xx_hal_uart.o(.text.UART_Start_Receive_DMA) for UART_Start_Receive_DMA
    stm32l4xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_ReceiveToIdle_DMA) refers to stm32l4xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_GetRxEventType) refers to stm32l4xx_hal_uart_ex.o(.text.HAL_UARTEx_GetRxEventType) for [Anonymous Symbol]
    system_stm32l4xx.o(.ARM.exidx.text.SystemInit) refers to system_stm32l4xx.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32l4xx.o(.text.SystemCoreClockUpdate) refers to system_stm32l4xx.o(.rodata.MSIRangeTable) for MSIRangeTable
    system_stm32l4xx.o(.text.SystemCoreClockUpdate) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32l4xx.o(.text.SystemCoreClockUpdate) refers to system_stm32l4xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32l4xx.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32l4xx.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupCreateStatic) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreateStatic) refers to event_groups.o(.text.xEventGroupCreateStatic) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    event_groups.o(.text.xEventGroupCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreate) refers to event_groups.o(.text.xEventGroupCreate) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSync) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.ARM.exidx.text.xEventGroupSetBits) refers to event_groups.o(.text.xEventGroupSetBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupWaitBits) refers to event_groups.o(.text.xEventGroupWaitBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupClearBits) refers to event_groups.o(.text.xEventGroupClearBits) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.vEventGroupDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    event_groups.o(.ARM.exidx.text.vEventGroupDelete) refers to event_groups.o(.text.vEventGroupDelete) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupClearBitsCallback) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.vEventGroupClearBitsCallback) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreateStatic) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericCreateStatic) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericCreateStatic) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericCreateStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericCreate) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueCreateMutex) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueCreateMutex) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueCreateMutex) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutexStatic) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueCreateMutexStatic) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueCreateMutexStatic) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueCreateMutexStatic) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueCreateMutexStatic) refers to queue.o(.text.xQueueCreateMutexStatic) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGenericSendFromISR) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueReceiveFromISR) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueuePeekFromISR) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.text.vQueueDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.text.vQueueUnregisterQueue) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.ARM.exidx.text.vQueueUnregisterQueue) refers to queue.o(.text.vQueueUnregisterQueue) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueAddToRegistry) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.ARM.exidx.text.vQueueAddToRegistry) refers to queue.o(.text.vQueueAddToRegistry) for [Anonymous Symbol]
    queue.o(.text.pcQueueGetName) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.ARM.exidx.text.pcQueueGetName) refers to queue.o(.text.pcQueueGetName) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    stream_buffer.o(.text.xStreamBufferGenericCreate) refers to aeabi_memset.o(.text) for __aeabi_memset
    stream_buffer.o(.ARM.exidx.text.xStreamBufferGenericCreate) refers to stream_buffer.o(.text.xStreamBufferGenericCreate) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferGenericCreateStatic) refers to aeabi_memset.o(.text) for __aeabi_memset
    stream_buffer.o(.ARM.exidx.text.xStreamBufferGenericCreateStatic) refers to stream_buffer.o(.text.xStreamBufferGenericCreateStatic) for [Anonymous Symbol]
    stream_buffer.o(.text.vStreamBufferDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    stream_buffer.o(.ARM.exidx.text.vStreamBufferDelete) refers to stream_buffer.o(.text.vStreamBufferDelete) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.text.xStreamBufferReset) refers to aeabi_memset.o(.text) for __aeabi_memset
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReset) refers to stream_buffer.o(.text.xStreamBufferReset) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSetTriggerLevel) refers to stream_buffer.o(.text.xStreamBufferSetTriggerLevel) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSpacesAvailable) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferBytesAvailable) refers to stream_buffer.o(.text.xStreamBufferBytesAvailable) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.vTaskSetTimeOutState) for vTaskSetTimeOutState
    stream_buffer.o(.text.xStreamBufferSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskNotifyStateClear) for xTaskNotifyStateClear
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer.o(.text.xStreamBufferSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskNotifyWait) for xTaskNotifyWait
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSend) refers to stream_buffer.o(.text.xStreamBufferSend) for [Anonymous Symbol]
    stream_buffer.o(.text.prvWriteMessageToBuffer) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    stream_buffer.o(.ARM.exidx.text.prvWriteMessageToBuffer) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.xStreamBufferSendFromISR) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskNotifyStateClear) for xTaskNotifyStateClear
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskNotifyWait) for xTaskNotifyWait
    stream_buffer.o(.text.xStreamBufferReceive) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceive) refers to stream_buffer.o(.text.xStreamBufferReceive) for [Anonymous Symbol]
    stream_buffer.o(.text.prvReadMessageFromBuffer) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    stream_buffer.o(.ARM.exidx.text.prvReadMessageFromBuffer) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    stream_buffer.o(.ARM.exidx.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.xStreamBufferReceiveFromISR) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferIsEmpty) refers to stream_buffer.o(.text.xStreamBufferIsEmpty) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferIsFull) refers to stream_buffer.o(.text.xStreamBufferIsFull) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSendCompletedFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSendCompletedFromISR) refers to stream_buffer.o(.text.xStreamBufferSendCompletedFromISR) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveCompletedFromISR) refers to stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreateStatic) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreateStatic) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreateStatic) refers to tasks.o(.text.xTaskCreateStatic) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss..L_MergedGlobals.1) for .L_MergedGlobals.1
    tasks.o(.text.prvAddNewTaskToReadyList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.vTaskDelay) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelay) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeAll) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to freertos.o(.text.vApplicationGetIdleTaskMemory) for vApplicationGetIdleTaskMemory
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvIdleTask) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvIdleTask) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskIncrementTick) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskNotifyTake) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.ulTaskNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskNotifyTake) refers to tasks.o(.text.ulTaskNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskNotifyWait) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.xTaskNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskNotifyWait) refers to tasks.o(.text.xTaskNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.vTaskNotifyGiveFromISR) refers to tasks.o(.text.vTaskNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskNotifyStateClear) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.xTaskNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskNotifyStateClear) refers to tasks.o(.text.xTaskNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskNotifyValueClear) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.ulTaskNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskNotifyValueClear) refers to tasks.o(.text.ulTaskNotifyValueClear) for [Anonymous Symbol]
    cmsis_os.o(.text.osKernelStart) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    cmsis_os.o(.ARM.exidx.text.osKernelStart) refers to cmsis_os.o(.text.osKernelStart) for [Anonymous Symbol]
    cmsis_os.o(.text.osKernelRunning) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os.o(.ARM.exidx.text.osKernelRunning) refers to cmsis_os.o(.text.osKernelRunning) for [Anonymous Symbol]
    cmsis_os.o(.text.osKernelSysTick) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os.o(.text.osKernelSysTick) refers to tasks.o(.text.xTaskGetTickCountFromISR) for xTaskGetTickCountFromISR
    cmsis_os.o(.ARM.exidx.text.osKernelSysTick) refers to cmsis_os.o(.text.osKernelSysTick) for [Anonymous Symbol]
    cmsis_os.o(.text.osThreadCreate) refers to tasks.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    cmsis_os.o(.text.osThreadCreate) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    cmsis_os.o(.ARM.exidx.text.osThreadCreate) refers to cmsis_os.o(.text.osThreadCreate) for [Anonymous Symbol]
    cmsis_os.o(.text.osThreadGetId) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os.o(.ARM.exidx.text.osThreadGetId) refers to cmsis_os.o(.text.osThreadGetId) for [Anonymous Symbol]
    cmsis_os.o(.text.osThreadTerminate) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    cmsis_os.o(.ARM.exidx.text.osThreadTerminate) refers to cmsis_os.o(.text.osThreadTerminate) for [Anonymous Symbol]
    cmsis_os.o(.ARM.exidx.text.osThreadYield) refers to cmsis_os.o(.text.osThreadYield) for [Anonymous Symbol]
    cmsis_os.o(.text.osThreadSetPriority) refers to tasks.o(.text.vTaskPrioritySet) for vTaskPrioritySet
    cmsis_os.o(.ARM.exidx.text.osThreadSetPriority) refers to cmsis_os.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    cmsis_os.o(.text.osThreadGetPriority) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for uxTaskPriorityGetFromISR
    cmsis_os.o(.text.osThreadGetPriority) refers to tasks.o(.text.uxTaskPriorityGet) for uxTaskPriorityGet
    cmsis_os.o(.ARM.exidx.text.osThreadGetPriority) refers to cmsis_os.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    cmsis_os.o(.text.osDelay) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    cmsis_os.o(.ARM.exidx.text.osDelay) refers to cmsis_os.o(.text.osDelay) for [Anonymous Symbol]
    cmsis_os.o(.ARM.exidx.text.osTimerCreate) refers to cmsis_os.o(.text.osTimerCreate) for [Anonymous Symbol]
    cmsis_os.o(.ARM.exidx.text.osTimerStart) refers to cmsis_os.o(.text.osTimerStart) for [Anonymous Symbol]
    cmsis_os.o(.ARM.exidx.text.osTimerStop) refers to cmsis_os.o(.text.osTimerStop) for [Anonymous Symbol]
    cmsis_os.o(.ARM.exidx.text.osTimerDelete) refers to cmsis_os.o(.text.osTimerDelete) for [Anonymous Symbol]
    cmsis_os.o(.text.osSignalSet) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    cmsis_os.o(.text.osSignalSet) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os.o(.ARM.exidx.text.osSignalSet) refers to cmsis_os.o(.text.osSignalSet) for [Anonymous Symbol]
    cmsis_os.o(.text.osSignalWait) refers to tasks.o(.text.xTaskNotifyWait) for xTaskNotifyWait
    cmsis_os.o(.ARM.exidx.text.osSignalWait) refers to cmsis_os.o(.text.osSignalWait) for [Anonymous Symbol]
    cmsis_os.o(.text.osMutexCreate) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    cmsis_os.o(.text.osMutexCreate) refers to queue.o(.text.xQueueCreateMutexStatic) for xQueueCreateMutexStatic
    cmsis_os.o(.ARM.exidx.text.osMutexCreate) refers to cmsis_os.o(.text.osMutexCreate) for [Anonymous Symbol]
    cmsis_os.o(.text.osMutexWait) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os.o(.text.osMutexWait) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os.o(.ARM.exidx.text.osMutexWait) refers to cmsis_os.o(.text.osMutexWait) for [Anonymous Symbol]
    cmsis_os.o(.text.osMutexRelease) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    cmsis_os.o(.text.osMutexRelease) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os.o(.ARM.exidx.text.osMutexRelease) refers to cmsis_os.o(.text.osMutexRelease) for [Anonymous Symbol]
    cmsis_os.o(.text.osMutexDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os.o(.ARM.exidx.text.osMutexDelete) refers to cmsis_os.o(.text.osMutexDelete) for [Anonymous Symbol]
    cmsis_os.o(.text.osSemaphoreCreate) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    cmsis_os.o(.text.osSemaphoreCreate) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    cmsis_os.o(.text.osSemaphoreCreate) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os.o(.ARM.exidx.text.osSemaphoreCreate) refers to cmsis_os.o(.text.osSemaphoreCreate) for [Anonymous Symbol]
    cmsis_os.o(.text.osSemaphoreWait) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os.o(.text.osSemaphoreWait) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os.o(.ARM.exidx.text.osSemaphoreWait) refers to cmsis_os.o(.text.osSemaphoreWait) for [Anonymous Symbol]
    cmsis_os.o(.text.osSemaphoreRelease) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    cmsis_os.o(.text.osSemaphoreRelease) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os.o(.ARM.exidx.text.osSemaphoreRelease) refers to cmsis_os.o(.text.osSemaphoreRelease) for [Anonymous Symbol]
    cmsis_os.o(.text.osSemaphoreDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os.o(.ARM.exidx.text.osSemaphoreDelete) refers to cmsis_os.o(.text.osSemaphoreDelete) for [Anonymous Symbol]
    cmsis_os.o(.text.osPoolCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os.o(.text.osPoolCreate) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os.o(.ARM.exidx.text.osPoolCreate) refers to cmsis_os.o(.text.osPoolCreate) for [Anonymous Symbol]
    cmsis_os.o(.text.osPoolAlloc) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os.o(.text.osPoolAlloc) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os.o(.ARM.exidx.text.osPoolAlloc) refers to cmsis_os.o(.text.osPoolAlloc) for [Anonymous Symbol]
    cmsis_os.o(.text.osPoolCAlloc) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os.o(.text.osPoolCAlloc) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os.o(.ARM.exidx.text.osPoolCAlloc) refers to cmsis_os.o(.text.osPoolCAlloc) for [Anonymous Symbol]
    cmsis_os.o(.ARM.exidx.text.osPoolFree) refers to cmsis_os.o(.text.osPoolFree) for [Anonymous Symbol]
    cmsis_os.o(.text.osMessageCreate) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    cmsis_os.o(.text.osMessageCreate) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    cmsis_os.o(.ARM.exidx.text.osMessageCreate) refers to cmsis_os.o(.text.osMessageCreate) for [Anonymous Symbol]
    cmsis_os.o(.text.osMessagePut) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    cmsis_os.o(.text.osMessagePut) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os.o(.ARM.exidx.text.osMessagePut) refers to cmsis_os.o(.text.osMessagePut) for [Anonymous Symbol]
    cmsis_os.o(.text.osMessageGet) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os.o(.text.osMessageGet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    cmsis_os.o(.ARM.exidx.text.osMessageGet) refers to cmsis_os.o(.text.osMessageGet) for [Anonymous Symbol]
    cmsis_os.o(.text.osMailCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os.o(.text.osMailCreate) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    cmsis_os.o(.text.osMailCreate) refers to cmsis_os.o(.text.osPoolCreate) for osPoolCreate
    cmsis_os.o(.text.osMailCreate) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os.o(.ARM.exidx.text.osMailCreate) refers to cmsis_os.o(.text.osMailCreate) for [Anonymous Symbol]
    cmsis_os.o(.text.osMailAlloc) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os.o(.text.osMailAlloc) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os.o(.ARM.exidx.text.osMailAlloc) refers to cmsis_os.o(.text.osMailAlloc) for [Anonymous Symbol]
    cmsis_os.o(.text.osMailCAlloc) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os.o(.text.osMailCAlloc) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os.o(.ARM.exidx.text.osMailCAlloc) refers to cmsis_os.o(.text.osMailCAlloc) for [Anonymous Symbol]
    cmsis_os.o(.text.osMailPut) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    cmsis_os.o(.text.osMailPut) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os.o(.ARM.exidx.text.osMailPut) refers to cmsis_os.o(.text.osMailPut) for [Anonymous Symbol]
    cmsis_os.o(.text.osMailGet) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os.o(.text.osMailGet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    cmsis_os.o(.ARM.exidx.text.osMailGet) refers to cmsis_os.o(.text.osMailGet) for [Anonymous Symbol]
    cmsis_os.o(.ARM.exidx.text.osMailFree) refers to cmsis_os.o(.text.osMailFree) for [Anonymous Symbol]
    cmsis_os.o(.text.osSystickHandler) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os.o(.text.osSystickHandler) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    cmsis_os.o(.ARM.exidx.text.osSystickHandler) refers to cmsis_os.o(.text.osSystickHandler) for [Anonymous Symbol]
    cmsis_os.o(.text.osThreadSuspend) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    cmsis_os.o(.ARM.exidx.text.osThreadSuspend) refers to cmsis_os.o(.text.osThreadSuspend) for [Anonymous Symbol]
    cmsis_os.o(.text.osThreadResume) refers to tasks.o(.text.xTaskResumeFromISR) for xTaskResumeFromISR
    cmsis_os.o(.text.osThreadResume) refers to tasks.o(.text.vTaskResume) for vTaskResume
    cmsis_os.o(.ARM.exidx.text.osThreadResume) refers to cmsis_os.o(.text.osThreadResume) for [Anonymous Symbol]
    cmsis_os.o(.text.osThreadSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os.o(.ARM.exidx.text.osThreadSuspendAll) refers to cmsis_os.o(.text.osThreadSuspendAll) for [Anonymous Symbol]
    cmsis_os.o(.text.osThreadResumeAll) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os.o(.ARM.exidx.text.osThreadResumeAll) refers to cmsis_os.o(.text.osThreadResumeAll) for [Anonymous Symbol]
    cmsis_os.o(.ARM.exidx.text.osDelayUntil) refers to cmsis_os.o(.text.osDelayUntil) for [Anonymous Symbol]
    cmsis_os.o(.ARM.exidx.text.osAbortDelay) refers to cmsis_os.o(.text.osAbortDelay) for [Anonymous Symbol]
    cmsis_os.o(.ARM.exidx.text.osThreadList) refers to cmsis_os.o(.text.osThreadList) for [Anonymous Symbol]
    cmsis_os.o(.text.osMessagePeek) refers to queue.o(.text.xQueuePeek) for xQueuePeek
    cmsis_os.o(.ARM.exidx.text.osMessagePeek) refers to cmsis_os.o(.text.osMessagePeek) for [Anonymous Symbol]
    cmsis_os.o(.text.osMessageWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os.o(.text.osMessageWaiting) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os.o(.ARM.exidx.text.osMessageWaiting) refers to cmsis_os.o(.text.osMessageWaiting) for [Anonymous Symbol]
    cmsis_os.o(.text.osMessageAvailableSpace) refers to queue.o(.text.uxQueueSpacesAvailable) for uxQueueSpacesAvailable
    cmsis_os.o(.ARM.exidx.text.osMessageAvailableSpace) refers to cmsis_os.o(.text.osMessageAvailableSpace) for [Anonymous Symbol]
    cmsis_os.o(.text.osMessageDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os.o(.ARM.exidx.text.osMessageDelete) refers to cmsis_os.o(.text.osMessageDelete) for [Anonymous Symbol]
    cmsis_os.o(.ARM.exidx.text.osRecursiveMutexCreate) refers to cmsis_os.o(.text.osRecursiveMutexCreate) for [Anonymous Symbol]
    cmsis_os.o(.ARM.exidx.text.osRecursiveMutexRelease) refers to cmsis_os.o(.text.osRecursiveMutexRelease) for [Anonymous Symbol]
    cmsis_os.o(.ARM.exidx.text.osRecursiveMutexWait) refers to cmsis_os.o(.text.osRecursiveMutexWait) for [Anonymous Symbol]
    cmsis_os.o(.text.osSemaphoreGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os.o(.ARM.exidx.text.osSemaphoreGetCount) refers to cmsis_os.o(.text.osSemaphoreGetCount) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.ucHeap) for ucHeap
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.pvPortMalloc) refers to heap_4.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.vPortFree) refers to heap_4.o(.text.vPortFree) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetFreeHeapSize) refers to heap_4.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_4.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_4.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    heap_4.o(.ARM.exidx.text.vPortGetHeapStats) refers to heap_4.o(.text.vPortGetHeapStats) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.text.prvTaskExitError) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss..L_MergedGlobals) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    port.o(.text.xPortStartScheduler) refers to motorcontrol.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.text.vPortEndScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss..L_MergedGlobals) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    port.o(.ARM.exidx.text.vPortValidateInterruptPriority) refers to port.o(.text.vPortValidateInterruptPriority) for [Anonymous Symbol]
    bus_voltage_sensor.o(.ARM.exidx.text.VBS_GetBusVoltage_d) refers to bus_voltage_sensor.o(.text.VBS_GetBusVoltage_d) for [Anonymous Symbol]
    bus_voltage_sensor.o(.ARM.exidx.text.VBS_GetAvBusVoltage_d) refers to bus_voltage_sensor.o(.text.VBS_GetAvBusVoltage_d) for [Anonymous Symbol]
    bus_voltage_sensor.o(.ARM.exidx.text.VBS_GetAvBusVoltage_V) refers to bus_voltage_sensor.o(.text.VBS_GetAvBusVoltage_V) for [Anonymous Symbol]
    bus_voltage_sensor.o(.ARM.exidx.text.VBS_CheckVbus) refers to bus_voltage_sensor.o(.text.VBS_CheckVbus) for [Anonymous Symbol]
    circle_limitation.o(.text.Circle_Limitation) refers to mc_math.o(.text.MCM_Sqrt) for MCM_Sqrt
    circle_limitation.o(.ARM.exidx.text.Circle_Limitation) refers to circle_limitation.o(.text.Circle_Limitation) for [Anonymous Symbol]
    digital_output.o(.ARM.exidx.text.DOUT_SetOutputState) refers to digital_output.o(.text.DOUT_SetOutputState) for [Anonymous Symbol]
    digital_output.o(.ARM.exidx.text.DOUT_GetOutputState) refers to digital_output.o(.text.DOUT_GetOutputState) for [Anonymous Symbol]
    enc_align_ctrl.o(.ARM.exidx.text.EAC_Init) refers to enc_align_ctrl.o(.text.EAC_Init) for [Anonymous Symbol]
    enc_align_ctrl.o(.text.EAC_StartAlignment) refers to virtual_speed_sensor.o(.text.VSS_SetMecAcceleration) for VSS_SetMecAcceleration
    enc_align_ctrl.o(.text.EAC_StartAlignment) refers to virtual_speed_sensor.o(.text.VSS_SetMecAngle) for VSS_SetMecAngle
    enc_align_ctrl.o(.text.EAC_StartAlignment) refers to speed_torq_ctrl.o(.text.STC_SetControlMode) for STC_SetControlMode
    enc_align_ctrl.o(.text.EAC_StartAlignment) refers to speed_torq_ctrl.o(.text.STC_ExecRamp) for STC_ExecRamp
    enc_align_ctrl.o(.ARM.exidx.text.EAC_StartAlignment) refers to enc_align_ctrl.o(.text.EAC_StartAlignment) for [Anonymous Symbol]
    enc_align_ctrl.o(.text.EAC_Exec) refers to encoder_speed_pos_fdbk.o(.text.ENC_SetMecAngle) for ENC_SetMecAngle
    enc_align_ctrl.o(.ARM.exidx.text.EAC_Exec) refers to enc_align_ctrl.o(.text.EAC_Exec) for [Anonymous Symbol]
    enc_align_ctrl.o(.ARM.exidx.text.EAC_IsAligned) refers to enc_align_ctrl.o(.text.EAC_IsAligned) for [Anonymous Symbol]
    enc_align_ctrl.o(.ARM.exidx.text.EAC_SetRestartState) refers to enc_align_ctrl.o(.text.EAC_SetRestartState) for [Anonymous Symbol]
    enc_align_ctrl.o(.ARM.exidx.text.EAC_GetRestartState) refers to enc_align_ctrl.o(.text.EAC_GetRestartState) for [Anonymous Symbol]
    encoder_speed_pos_fdbk.o(.text.ENC_Init) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    encoder_speed_pos_fdbk.o(.ARM.exidx.text.ENC_Init) refers to encoder_speed_pos_fdbk.o(.text.ENC_Init) for [Anonymous Symbol]
    encoder_speed_pos_fdbk.o(.text.ENC_Clear) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    encoder_speed_pos_fdbk.o(.ARM.exidx.text.ENC_Clear) refers to encoder_speed_pos_fdbk.o(.text.ENC_Clear) for [Anonymous Symbol]
    encoder_speed_pos_fdbk.o(.ARM.exidx.text.ENC_CalcAngle) refers to encoder_speed_pos_fdbk.o(.text.ENC_CalcAngle) for [Anonymous Symbol]
    encoder_speed_pos_fdbk.o(.text.ENC_CalcAvrgMecSpeedUnit) refers to speed_pos_fdbk.o(.text.SPD_IsMecSpeedReliable) for SPD_IsMecSpeedReliable
    encoder_speed_pos_fdbk.o(.ARM.exidx.text.ENC_CalcAvrgMecSpeedUnit) refers to encoder_speed_pos_fdbk.o(.text.ENC_CalcAvrgMecSpeedUnit) for [Anonymous Symbol]
    encoder_speed_pos_fdbk.o(.ARM.exidx.text.ENC_SetMecAngle) refers to encoder_speed_pos_fdbk.o(.text.ENC_SetMecAngle) for [Anonymous Symbol]
    encoder_speed_pos_fdbk.o(.ARM.exidx.text.ENC_IRQHandler) refers to encoder_speed_pos_fdbk.o(.text.ENC_IRQHandler) for [Anonymous Symbol]
    trajectory_ctrl.o(.text.TC_Init) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    trajectory_ctrl.o(.ARM.exidx.text.TC_Init) refers to trajectory_ctrl.o(.text.TC_Init) for [Anonymous Symbol]
    trajectory_ctrl.o(.ARM.exidx.text.TC_MoveCommand) refers to trajectory_ctrl.o(.text.TC_MoveCommand) for [Anonymous Symbol]
    trajectory_ctrl.o(.ARM.exidx.text.TC_FollowCommand) refers to trajectory_ctrl.o(.text.TC_FollowCommand) for [Anonymous Symbol]
    trajectory_ctrl.o(.text.TC_PositionRegulation) refers to trajectory_ctrl.o(.text.TC_MoveExecution) for TC_MoveExecution
    trajectory_ctrl.o(.text.TC_PositionRegulation) refers to speed_torq_ctrl.o(.text.STC_GetSpeedSensor) for STC_GetSpeedSensor
    trajectory_ctrl.o(.text.TC_PositionRegulation) refers to speed_pos_fdbk.o(.text.SPD_GetMecAngle) for SPD_GetMecAngle
    trajectory_ctrl.o(.text.TC_PositionRegulation) refers to pid_regulator.o(.text.PID_Controller) for PID_Controller
    trajectory_ctrl.o(.text.TC_PositionRegulation) refers to speed_torq_ctrl.o(.text.STC_SetControlMode) for STC_SetControlMode
    trajectory_ctrl.o(.text.TC_PositionRegulation) refers to speed_torq_ctrl.o(.text.STC_ExecRamp) for STC_ExecRamp
    trajectory_ctrl.o(.ARM.exidx.text.TC_PositionRegulation) refers to trajectory_ctrl.o(.text.TC_PositionRegulation) for [Anonymous Symbol]
    trajectory_ctrl.o(.ARM.exidx.text.TC_MoveExecution) refers to trajectory_ctrl.o(.text.TC_MoveExecution) for [Anonymous Symbol]
    trajectory_ctrl.o(.ARM.exidx.text.TC_FollowExecution) refers to trajectory_ctrl.o(.text.TC_FollowExecution) for [Anonymous Symbol]
    trajectory_ctrl.o(.ARM.exidx.text.TC_RampCompleted) refers to trajectory_ctrl.o(.text.TC_RampCompleted) for [Anonymous Symbol]
    trajectory_ctrl.o(.text.TC_EncAlignmentCommand) refers to speed_torq_ctrl.o(.text.STC_GetSpeedSensor) for STC_GetSpeedSensor
    trajectory_ctrl.o(.text.TC_EncAlignmentCommand) refers to speed_pos_fdbk.o(.text.SPD_GetMecAngle) for SPD_GetMecAngle
    trajectory_ctrl.o(.ARM.exidx.text.TC_EncAlignmentCommand) refers to trajectory_ctrl.o(.text.TC_EncAlignmentCommand) for [Anonymous Symbol]
    trajectory_ctrl.o(.text.TC_EncoderReset) refers to encoder_speed_pos_fdbk.o(.text.ENC_SetMecAngle) for ENC_SetMecAngle
    trajectory_ctrl.o(.ARM.exidx.text.TC_EncoderReset) refers to trajectory_ctrl.o(.text.TC_EncoderReset) for [Anonymous Symbol]
    trajectory_ctrl.o(.text.TC_GetCurrentPosition) refers to speed_torq_ctrl.o(.text.STC_GetSpeedSensor) for STC_GetSpeedSensor
    trajectory_ctrl.o(.text.TC_GetCurrentPosition) refers to speed_pos_fdbk.o(.text.SPD_GetMecAngle) for SPD_GetMecAngle
    trajectory_ctrl.o(.ARM.exidx.text.TC_GetCurrentPosition) refers to trajectory_ctrl.o(.text.TC_GetCurrentPosition) for [Anonymous Symbol]
    trajectory_ctrl.o(.ARM.exidx.text.TC_GetTargetPosition) refers to trajectory_ctrl.o(.text.TC_GetTargetPosition) for [Anonymous Symbol]
    trajectory_ctrl.o(.ARM.exidx.text.TC_GetMoveDuration) refers to trajectory_ctrl.o(.text.TC_GetMoveDuration) for [Anonymous Symbol]
    trajectory_ctrl.o(.ARM.exidx.text.TC_GetControlPositionStatus) refers to trajectory_ctrl.o(.text.TC_GetControlPositionStatus) for [Anonymous Symbol]
    trajectory_ctrl.o(.ARM.exidx.text.TC_GetAlignmentStatus) refers to trajectory_ctrl.o(.text.TC_GetAlignmentStatus) for [Anonymous Symbol]
    trajectory_ctrl.o(.ARM.exidx.text.TC_IncTick) refers to trajectory_ctrl.o(.text.TC_IncTick) for [Anonymous Symbol]
    ntc_temperature_sensor.o(.ARM.exidx.text.NTC_SetFaultState) refers to ntc_temperature_sensor.o(.text.NTC_SetFaultState) for [Anonymous Symbol]
    ntc_temperature_sensor.o(.text.NTC_Init) refers to ntc_temperature_sensor.o(.text.NTC_Clear) for NTC_Clear
    ntc_temperature_sensor.o(.ARM.exidx.text.NTC_Init) refers to ntc_temperature_sensor.o(.text.NTC_Init) for [Anonymous Symbol]
    ntc_temperature_sensor.o(.ARM.exidx.text.NTC_Clear) refers to ntc_temperature_sensor.o(.text.NTC_Clear) for [Anonymous Symbol]
    ntc_temperature_sensor.o(.text.NTC_CalcAvTemp) refers to ntc_temperature_sensor.o(.text.NTC_SetFaultState) for NTC_SetFaultState
    ntc_temperature_sensor.o(.ARM.exidx.text.NTC_CalcAvTemp) refers to ntc_temperature_sensor.o(.text.NTC_CalcAvTemp) for [Anonymous Symbol]
    ntc_temperature_sensor.o(.ARM.exidx.text.NTC_GetAvTemp_d) refers to ntc_temperature_sensor.o(.text.NTC_GetAvTemp_d) for [Anonymous Symbol]
    ntc_temperature_sensor.o(.ARM.exidx.text.NTC_GetAvTemp_C) refers to ntc_temperature_sensor.o(.text.NTC_GetAvTemp_C) for [Anonymous Symbol]
    ntc_temperature_sensor.o(.ARM.exidx.text.NTC_CheckTemp) refers to ntc_temperature_sensor.o(.text.NTC_CheckTemp) for [Anonymous Symbol]
    open_loop.o(.ARM.exidx.text.OL_Init) refers to open_loop.o(.text.OL_Init) for [Anonymous Symbol]
    open_loop.o(.ARM.exidx.text.OL_VqdConditioning) refers to open_loop.o(.text.OL_VqdConditioning) for [Anonymous Symbol]
    open_loop.o(.ARM.exidx.text.OL_UpdateVoltage) refers to open_loop.o(.text.OL_UpdateVoltage) for [Anonymous Symbol]
    open_loop.o(.ARM.exidx.text.OL_GetVoltage) refers to open_loop.o(.text.OL_GetVoltage) for [Anonymous Symbol]
    open_loop.o(.ARM.exidx.text.OL_Calc) refers to open_loop.o(.text.OL_Calc) for [Anonymous Symbol]
    open_loop.o(.ARM.exidx.text.OL_VF) refers to open_loop.o(.text.OL_VF) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_HandleInit) refers to pid_regulator.o(.text.PID_HandleInit) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_SetKP) refers to pid_regulator.o(.text.PID_SetKP) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_SetKI) refers to pid_regulator.o(.text.PID_SetKI) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_GetKP) refers to pid_regulator.o(.text.PID_GetKP) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_GetKI) refers to pid_regulator.o(.text.PID_GetKI) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_GetDefaultKP) refers to pid_regulator.o(.text.PID_GetDefaultKP) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_GetDefaultKI) refers to pid_regulator.o(.text.PID_GetDefaultKI) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_SetIntegralTerm) refers to pid_regulator.o(.text.PID_SetIntegralTerm) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_GetKPDivisor) refers to pid_regulator.o(.text.PID_GetKPDivisor) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_GetKPDivisorPOW2) refers to pid_regulator.o(.text.PID_GetKPDivisorPOW2) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_SetKPDivisorPOW2) refers to pid_regulator.o(.text.PID_SetKPDivisorPOW2) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_GetKIDivisor) refers to pid_regulator.o(.text.PID_GetKIDivisor) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_GetKIDivisorPOW2) refers to pid_regulator.o(.text.PID_GetKIDivisorPOW2) for [Anonymous Symbol]
    pid_regulator.o(.text.PID_SetKIDivisorPOW2) refers to pid_regulator.o(.text.PID_SetUpperIntegralTermLimit) for PID_SetUpperIntegralTermLimit
    pid_regulator.o(.text.PID_SetKIDivisorPOW2) refers to pid_regulator.o(.text.PID_SetLowerIntegralTermLimit) for PID_SetLowerIntegralTermLimit
    pid_regulator.o(.ARM.exidx.text.PID_SetKIDivisorPOW2) refers to pid_regulator.o(.text.PID_SetKIDivisorPOW2) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_SetUpperIntegralTermLimit) refers to pid_regulator.o(.text.PID_SetUpperIntegralTermLimit) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_SetLowerIntegralTermLimit) refers to pid_regulator.o(.text.PID_SetLowerIntegralTermLimit) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_SetLowerOutputLimit) refers to pid_regulator.o(.text.PID_SetLowerOutputLimit) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_SetUpperOutputLimit) refers to pid_regulator.o(.text.PID_SetUpperOutputLimit) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_SetPrevError) refers to pid_regulator.o(.text.PID_SetPrevError) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_SetKD) refers to pid_regulator.o(.text.PID_SetKD) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_GetKD) refers to pid_regulator.o(.text.PID_GetKD) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_GetKDDivisor) refers to pid_regulator.o(.text.PID_GetKDDivisor) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_GetKDDivisorPOW2) refers to pid_regulator.o(.text.PID_GetKDDivisorPOW2) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_SetKDDivisorPOW2) refers to pid_regulator.o(.text.PID_SetKDDivisorPOW2) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PI_Controller) refers to pid_regulator.o(.text.PI_Controller) for [Anonymous Symbol]
    pid_regulator.o(.text.PID_Controller) refers to pid_regulator.o(.text.PI_Controller) for PI_Controller
    pid_regulator.o(.ARM.exidx.text.PID_Controller) refers to pid_regulator.o(.text.PID_Controller) for [Anonymous Symbol]
    pqd_motor_power_measurement.o(.ARM.exidx.text.PQD_CalcElMotorPower) refers to pqd_motor_power_measurement.o(.text.PQD_CalcElMotorPower) for [Anonymous Symbol]
    pqd_motor_power_measurement.o(.ARM.exidx.text.PQD_Clear) refers to pqd_motor_power_measurement.o(.text.PQD_Clear) for [Anonymous Symbol]
    pqd_motor_power_measurement.o(.text.PQD_GetAvrgElMotorPowerW) refers to bus_voltage_sensor.o(.text.VBS_GetAvBusVoltage_V) for VBS_GetAvBusVoltage_V
    pqd_motor_power_measurement.o(.ARM.exidx.text.PQD_GetAvrgElMotorPowerW) refers to pqd_motor_power_measurement.o(.text.PQD_GetAvrgElMotorPowerW) for [Anonymous Symbol]
    pwm_common.o(.ARM.exidx.text.startTimers) refers to pwm_common.o(.text.startTimers) for [Anonymous Symbol]
    pwm_common.o(.ARM.exidx.text.waitForPolarizationEnd) refers to pwm_common.o(.text.waitForPolarizationEnd) for [Anonymous Symbol]
    r_divider_bus_voltage_sensor.o(.text.RVBS_Init) refers to r_divider_bus_voltage_sensor.o(.text.RVBS_Clear) for RVBS_Clear
    r_divider_bus_voltage_sensor.o(.ARM.exidx.text.RVBS_Init) refers to r_divider_bus_voltage_sensor.o(.text.RVBS_Init) for [Anonymous Symbol]
    r_divider_bus_voltage_sensor.o(.ARM.exidx.text.RVBS_Clear) refers to r_divider_bus_voltage_sensor.o(.text.RVBS_Clear) for [Anonymous Symbol]
    r_divider_bus_voltage_sensor.o(.text.RVBS_CalcAvVbus) refers to r_divider_bus_voltage_sensor.o(.text.RVBS_CheckFaultState) for RVBS_CheckFaultState
    r_divider_bus_voltage_sensor.o(.ARM.exidx.text.RVBS_CalcAvVbus) refers to r_divider_bus_voltage_sensor.o(.text.RVBS_CalcAvVbus) for [Anonymous Symbol]
    r_divider_bus_voltage_sensor.o(.ARM.exidx.text.RVBS_CheckFaultState) refers to r_divider_bus_voltage_sensor.o(.text.RVBS_CheckFaultState) for [Anonymous Symbol]
    ramp_ext_mngr.o(.ARM.exidx.text.REMNG_Init) refers to ramp_ext_mngr.o(.text.REMNG_Init) for [Anonymous Symbol]
    ramp_ext_mngr.o(.ARM.exidx.text.REMNG_Calc) refers to ramp_ext_mngr.o(.text.REMNG_Calc) for [Anonymous Symbol]
    ramp_ext_mngr.o(.text.REMNG_ExecRamp) refers to ramp_ext_mngr.o(.text.getScalingFactor) for getScalingFactor
    ramp_ext_mngr.o(.ARM.exidx.text.REMNG_ExecRamp) refers to ramp_ext_mngr.o(.text.REMNG_ExecRamp) for [Anonymous Symbol]
    ramp_ext_mngr.o(.ARM.exidx.text.getScalingFactor) refers to ramp_ext_mngr.o(.text.getScalingFactor) for [Anonymous Symbol]
    ramp_ext_mngr.o(.ARM.exidx.text.REMNG_GetValue) refers to ramp_ext_mngr.o(.text.REMNG_GetValue) for [Anonymous Symbol]
    ramp_ext_mngr.o(.ARM.exidx.text.REMNG_RampCompleted) refers to ramp_ext_mngr.o(.text.REMNG_RampCompleted) for [Anonymous Symbol]
    ramp_ext_mngr.o(.ARM.exidx.text.REMNG_StopRamp) refers to ramp_ext_mngr.o(.text.REMNG_StopRamp) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_Init) refers to revup_ctrl.o(.text.RUC_Init) for [Anonymous Symbol]
    revup_ctrl.o(.text.RUC_Clear) refers to virtual_speed_sensor.o(.text.VSS_Clear) for VSS_Clear
    revup_ctrl.o(.text.RUC_Clear) refers to speed_torq_ctrl.o(.text.STC_SetControlMode) for STC_SetControlMode
    revup_ctrl.o(.text.RUC_Clear) refers to virtual_speed_sensor.o(.text.VSS_SetMecAngle) for VSS_SetMecAngle
    revup_ctrl.o(.text.RUC_Clear) refers to speed_torq_ctrl.o(.text.STC_ExecRamp) for STC_ExecRamp
    revup_ctrl.o(.text.RUC_Clear) refers to virtual_speed_sensor.o(.text.VSS_SetMecAcceleration) for VSS_SetMecAcceleration
    revup_ctrl.o(.ARM.exidx.text.RUC_Clear) refers to revup_ctrl.o(.text.RUC_Clear) for [Anonymous Symbol]
    revup_ctrl.o(.text.RUC_OTF_Exec) refers to pwm_curr_fdbk.o(.text.PWMC_SwitchOffPWM) for PWMC_SwitchOffPWM
    revup_ctrl.o(.text.RUC_OTF_Exec) refers to pwm_curr_fdbk.o(.text.PWMC_TurnOnLowSides) for PWMC_TurnOnLowSides
    revup_ctrl.o(.text.RUC_OTF_Exec) refers to pwm_curr_fdbk.o(.text.PWMC_SwitchOnPWM) for PWMC_SwitchOnPWM
    revup_ctrl.o(.text.RUC_OTF_Exec) refers to speed_torq_ctrl.o(.text.STC_ExecRamp) for STC_ExecRamp
    revup_ctrl.o(.text.RUC_OTF_Exec) refers to virtual_speed_sensor.o(.text.VSS_SetMecAcceleration) for VSS_SetMecAcceleration
    revup_ctrl.o(.text.RUC_OTF_Exec) refers to speed_pos_fdbk.o(.text.SPD_GetAvrgMecSpeedUnit) for SPD_GetAvrgMecSpeedUnit
    revup_ctrl.o(.text.RUC_OTF_Exec) refers to virtual_speed_sensor.o(.text.VSS_SetCopyObserver) for VSS_SetCopyObserver
    revup_ctrl.o(.ARM.exidx.text.RUC_OTF_Exec) refers to revup_ctrl.o(.text.RUC_OTF_Exec) for [Anonymous Symbol]
    revup_ctrl.o(.text.RUC_Exec) refers to speed_torq_ctrl.o(.text.STC_ExecRamp) for STC_ExecRamp
    revup_ctrl.o(.text.RUC_Exec) refers to virtual_speed_sensor.o(.text.VSS_SetMecAcceleration) for VSS_SetMecAcceleration
    revup_ctrl.o(.ARM.exidx.text.RUC_Exec) refers to revup_ctrl.o(.text.RUC_Exec) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_IsAlignStageNow) refers to revup_ctrl.o(.text.RUC_IsAlignStageNow) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_Completed) refers to revup_ctrl.o(.text.RUC_Completed) for [Anonymous Symbol]
    revup_ctrl.o(.text.RUC_Stop) refers to speed_pos_fdbk.o(.text.SPD_GetAvrgMecSpeedUnit) for SPD_GetAvrgMecSpeedUnit
    revup_ctrl.o(.text.RUC_Stop) refers to virtual_speed_sensor.o(.text.VSS_SetMecAcceleration) for VSS_SetMecAcceleration
    revup_ctrl.o(.ARM.exidx.text.RUC_Stop) refers to revup_ctrl.o(.text.RUC_Stop) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_FirstAccelerationStageReached) refers to revup_ctrl.o(.text.RUC_FirstAccelerationStageReached) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_SetPhaseDurationms) refers to revup_ctrl.o(.text.RUC_SetPhaseDurationms) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_SetPhaseFinalMecSpeedUnit) refers to revup_ctrl.o(.text.RUC_SetPhaseFinalMecSpeedUnit) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_SetPhaseFinalTorque) refers to revup_ctrl.o(.text.RUC_SetPhaseFinalTorque) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_SetPhase) refers to revup_ctrl.o(.text.RUC_SetPhase) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_GetPhaseDurationms) refers to revup_ctrl.o(.text.RUC_GetPhaseDurationms) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_GetPhaseFinalMecSpeedUnit) refers to revup_ctrl.o(.text.RUC_GetPhaseFinalMecSpeedUnit) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_GetPhaseFinalTorque) refers to revup_ctrl.o(.text.RUC_GetPhaseFinalTorque) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_GetNumberOfPhases) refers to revup_ctrl.o(.text.RUC_GetNumberOfPhases) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_GetPhase) refers to revup_ctrl.o(.text.RUC_GetPhase) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_Get_SCLowsideOTF_Status) refers to revup_ctrl.o(.text.RUC_Get_SCLowsideOTF_Status) for [Anonymous Symbol]
    speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetElAngle) refers to speed_pos_fdbk.o(.text.SPD_GetElAngle) for [Anonymous Symbol]
    speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetMecAngle) refers to speed_pos_fdbk.o(.text.SPD_GetMecAngle) for [Anonymous Symbol]
    speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetAvrgMecSpeedUnit) refers to speed_pos_fdbk.o(.text.SPD_GetAvrgMecSpeedUnit) for [Anonymous Symbol]
    speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetElSpeedDpp) refers to speed_pos_fdbk.o(.text.SPD_GetElSpeedDpp) for [Anonymous Symbol]
    speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetInstElSpeedDpp) refers to speed_pos_fdbk.o(.text.SPD_GetInstElSpeedDpp) for [Anonymous Symbol]
    speed_pos_fdbk.o(.ARM.exidx.text.SPD_Check) refers to speed_pos_fdbk.o(.text.SPD_Check) for [Anonymous Symbol]
    speed_pos_fdbk.o(.ARM.exidx.text.SPD_IsMecSpeedReliable) refers to speed_pos_fdbk.o(.text.SPD_IsMecSpeedReliable) for [Anonymous Symbol]
    speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetS16Speed) refers to speed_pos_fdbk.o(.text.SPD_GetS16Speed) for [Anonymous Symbol]
    speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetElToMecRatio) refers to speed_pos_fdbk.o(.text.SPD_GetElToMecRatio) for [Anonymous Symbol]
    speed_pos_fdbk.o(.ARM.exidx.text.SPD_SetElToMecRatio) refers to speed_pos_fdbk.o(.text.SPD_SetElToMecRatio) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_Init) refers to speed_torq_ctrl.o(.text.STC_Init) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_SetSpeedSensor) refers to speed_torq_ctrl.o(.text.STC_SetSpeedSensor) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_GetSpeedSensor) refers to speed_torq_ctrl.o(.text.STC_GetSpeedSensor) for [Anonymous Symbol]
    speed_torq_ctrl.o(.text.STC_Clear) refers to pid_regulator.o(.text.PID_SetIntegralTerm) for PID_SetIntegralTerm
    speed_torq_ctrl.o(.ARM.exidx.text.STC_Clear) refers to speed_torq_ctrl.o(.text.STC_Clear) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_GetMecSpeedRefUnit) refers to speed_torq_ctrl.o(.text.STC_GetMecSpeedRefUnit) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_GetTorqueRef) refers to speed_torq_ctrl.o(.text.STC_GetTorqueRef) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_SetControlMode) refers to speed_torq_ctrl.o(.text.STC_SetControlMode) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_GetControlMode) refers to speed_torq_ctrl.o(.text.STC_GetControlMode) for [Anonymous Symbol]
    speed_torq_ctrl.o(.text.STC_ExecRamp) refers to speed_torq_ctrl.o(.text.STC_GetTorqueRef) for STC_GetTorqueRef
    speed_torq_ctrl.o(.ARM.exidx.text.STC_ExecRamp) refers to speed_torq_ctrl.o(.text.STC_ExecRamp) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_StopRamp) refers to speed_torq_ctrl.o(.text.STC_StopRamp) for [Anonymous Symbol]
    speed_torq_ctrl.o(.text.STC_CalcTorqueReference) refers to speed_pos_fdbk.o(.text.SPD_GetAvrgMecSpeedUnit) for SPD_GetAvrgMecSpeedUnit
    speed_torq_ctrl.o(.text.STC_CalcTorqueReference) refers to pid_regulator.o(.text.PI_Controller) for PI_Controller
    speed_torq_ctrl.o(.ARM.exidx.text.STC_CalcTorqueReference) refers to speed_torq_ctrl.o(.text.STC_CalcTorqueReference) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_GetMecSpeedRefUnitDefault) refers to speed_torq_ctrl.o(.text.STC_GetMecSpeedRefUnitDefault) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_GetMaxAppPositiveMecSpeedUnit) refers to speed_torq_ctrl.o(.text.STC_GetMaxAppPositiveMecSpeedUnit) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_GetMinAppNegativeMecSpeedUnit) refers to speed_torq_ctrl.o(.text.STC_GetMinAppNegativeMecSpeedUnit) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_RampCompleted) refers to speed_torq_ctrl.o(.text.STC_RampCompleted) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_StopSpeedRamp) refers to speed_torq_ctrl.o(.text.STC_StopSpeedRamp) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_GetDefaultIqdref) refers to speed_torq_ctrl.o(.text.STC_GetDefaultIqdref) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_SetNominalCurrent) refers to speed_torq_ctrl.o(.text.STC_SetNominalCurrent) for [Anonymous Symbol]
    speed_torq_ctrl.o(.text.STC_ForceSpeedReferenceToCurrentSpeed) refers to speed_pos_fdbk.o(.text.SPD_GetAvrgMecSpeedUnit) for SPD_GetAvrgMecSpeedUnit
    speed_torq_ctrl.o(.ARM.exidx.text.STC_ForceSpeedReferenceToCurrentSpeed) refers to speed_torq_ctrl.o(.text.STC_ForceSpeedReferenceToCurrentSpeed) for [Anonymous Symbol]
    virtual_speed_sensor.o(.text.VSS_Init) refers to virtual_speed_sensor.o(.text.VSS_Clear) for VSS_Clear
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_Init) refers to virtual_speed_sensor.o(.text.VSS_Init) for [Anonymous Symbol]
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_Clear) refers to virtual_speed_sensor.o(.text.VSS_Clear) for [Anonymous Symbol]
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_CalcElAngle) refers to virtual_speed_sensor.o(.text.VSS_CalcElAngle) for [Anonymous Symbol]
    virtual_speed_sensor.o(.text.VSS_CalcAvrgMecSpeedUnit) refers to speed_pos_fdbk.o(.text.SPD_IsMecSpeedReliable) for SPD_IsMecSpeedReliable
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_CalcAvrgMecSpeedUnit) refers to virtual_speed_sensor.o(.text.VSS_CalcAvrgMecSpeedUnit) for [Anonymous Symbol]
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_SetMecAngle) refers to virtual_speed_sensor.o(.text.VSS_SetMecAngle) for [Anonymous Symbol]
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_SetMecAcceleration) refers to virtual_speed_sensor.o(.text.VSS_SetMecAcceleration) for [Anonymous Symbol]
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_RampCompleted) refers to virtual_speed_sensor.o(.text.VSS_RampCompleted) for [Anonymous Symbol]
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_GetLastRampFinalSpeed) refers to virtual_speed_sensor.o(.text.VSS_GetLastRampFinalSpeed) for [Anonymous Symbol]
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_SetStartTransition) refers to virtual_speed_sensor.o(.text.VSS_SetStartTransition) for [Anonymous Symbol]
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_IsTransitionOngoing) refers to virtual_speed_sensor.o(.text.VSS_IsTransitionOngoing) for [Anonymous Symbol]
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_TransitionEnded) refers to virtual_speed_sensor.o(.text.VSS_TransitionEnded) for [Anonymous Symbol]
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_SetCopyObserver) refers to virtual_speed_sensor.o(.text.VSS_SetCopyObserver) for [Anonymous Symbol]
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_SetElAngle) refers to virtual_speed_sensor.o(.text.VSS_SetElAngle) for [Anonymous Symbol]
    r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_Init) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_Init) for [Anonymous Symbol]
    r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SetOffsetCalib) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_SetOffsetCalib) for [Anonymous Symbol]
    r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_GetOffsetCalib) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_GetOffsetCalib) for [Anonymous Symbol]
    r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_HFCurrentsCalibrationAB) for R3_1_HFCurrentsCalibrationAB
    r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointCalibration) for R3_1_SetADCSampPointCalibration
    r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOnPWM) for R3_1_SwitchOnPWM
    r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration) refers to pwm_common.o(.text.waitForPolarizationEnd) for waitForPolarizationEnd
    r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOffPWM) for R3_1_SwitchOffPWM
    r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_HFCurrentsCalibrationC) for R3_1_HFCurrentsCalibrationC
    r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_CurrentReadingCalibration) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration) for [Anonymous Symbol]
    r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_HFCurrentsCalibrationAB) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_HFCurrentsCalibrationAB) for [Anonymous Symbol]
    r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointCalibration) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_WriteTIMRegisters) for R3_1_WriteTIMRegisters
    r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SetADCSampPointCalibration) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointCalibration) for [Anonymous Symbol]
    r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SwitchOnPWM) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOnPWM) for [Anonymous Symbol]
    r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SwitchOffPWM) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOffPWM) for [Anonymous Symbol]
    r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_HFCurrentsCalibrationC) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_HFCurrentsCalibrationC) for [Anonymous Symbol]
    r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_GetPhaseCurrents) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_GetPhaseCurrents) for [Anonymous Symbol]
    r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_GetPhaseCurrents_OVM) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_GetPhaseCurrents_OVM) for [Anonymous Symbol]
    r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_TurnOnLowSides) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_TurnOnLowSides) for [Anonymous Symbol]
    r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_WriteTIMRegisters) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_WriteTIMRegisters) for [Anonymous Symbol]
    r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointSectX) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_WriteTIMRegisters) for R3_1_WriteTIMRegisters
    r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SetADCSampPointSectX) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointSectX) for [Anonymous Symbol]
    r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointSectX_OVM) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_WriteTIMRegisters) for R3_1_WriteTIMRegisters
    r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SetADCSampPointSectX_OVM) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointSectX_OVM) for [Anonymous Symbol]
    r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_TIMx_UP_IRQHandler) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_TIMx_UP_IRQHandler) for [Anonymous Symbol]
    r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLDetectionModeEnable) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLTurnOnLowSides) for R3_1_RLTurnOnLowSides
    r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLDetectionModeEnable) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLGetPhaseCurrents) for R3_1_RLGetPhaseCurrents
    r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLDetectionModeEnable) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOffPWM) for R3_1_SwitchOffPWM
    r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLDetectionModeEnable) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLSwitchOnPWM) for R3_1_RLSwitchOnPWM
    r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_RLDetectionModeEnable) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLDetectionModeEnable) for [Anonymous Symbol]
    r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_RLGetPhaseCurrents) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLGetPhaseCurrents) for [Anonymous Symbol]
    r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_RLTurnOnLowSides) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLTurnOnLowSides) for [Anonymous Symbol]
    r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_RLSwitchOnPWM) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLSwitchOnPWM) for [Anonymous Symbol]
    r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLDetectionModeDisable) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_TurnOnLowSides) for R3_1_TurnOnLowSides
    r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLDetectionModeDisable) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_GetPhaseCurrents) for R3_1_GetPhaseCurrents
    r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLDetectionModeDisable) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOffPWM) for R3_1_SwitchOffPWM
    r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLDetectionModeDisable) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOnPWM) for R3_1_SwitchOnPWM
    r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_RLDetectionModeDisable) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLDetectionModeDisable) for [Anonymous Symbol]
    r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_RLDetectionModeSetDuty) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLDetectionModeSetDuty) for [Anonymous Symbol]
    r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_RLTurnOnLowSidesAndStart) refers to r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLTurnOnLowSidesAndStart) for [Anonymous Symbol]
    mcpa.o(.text.MCPA_dataLog) refers to mcpa.o(.bss.GLOBAL_TIMESTAMP) for GLOBAL_TIMESTAMP
    mcpa.o(.text.MCPA_dataLog) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    mcpa.o(.text.MCPA_dataLog) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    mcpa.o(.ARM.exidx.text.MCPA_dataLog) refers to mcpa.o(.text.MCPA_dataLog) for [Anonymous Symbol]
    mcpa.o(.ARM.exidx.text.MCPA_flushDataLog) refers to mcpa.o(.text.MCPA_flushDataLog) for [Anonymous Symbol]
    mcpa.o(.text.MCPA_cfgLog) refers to register_interface.o(.text.RI_GetIDSize) for RI_GetIDSize
    mcpa.o(.text.MCPA_cfgLog) refers to register_interface.o(.text.RI_GetPtrReg) for RI_GetPtrReg
    mcpa.o(.ARM.exidx.text.MCPA_cfgLog) refers to mcpa.o(.text.MCPA_cfgLog) for [Anonymous Symbol]
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset.o(.text) refers to rt_memclr.o(.text) for _memset
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_ldiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32l476xx.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.text.SystemClock_Config), (128 bytes).
    Removing main.o(.ARM.exidx.text.SystemClock_Config), (8 bytes).
    Removing main.o(.text.startMediumFrequencyTask), (12 bytes).
    Removing main.o(.ARM.exidx.text.startMediumFrequencyTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.Error_Handler), (8 bytes).
    Removing main.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing freertos.o(.text), (0 bytes).
    Removing freertos.o(.ARM.exidx.text.vApplicationGetIdleTaskMemory), (8 bytes).
    Removing motorcontrol.o(.text), (0 bytes).
    Removing motorcontrol.o(.ARM.exidx.text.MX_MotorControl_Init), (8 bytes).
    Removing motorcontrol.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing mc_api.o(.text), (0 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_StartMotor1), (8 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_StopMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_ProgramSpeedRampMotor1), (22 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_ProgramSpeedRampMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_ProgramSpeedRampMotor1_F), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_ProgramSpeedRampMotor1_F), (8 bytes).
    Removing mc_api.o(.text.MC_ProgramTorqueRampMotor1), (22 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_ProgramTorqueRampMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_ProgramTorqueRampMotor1_F), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_ProgramTorqueRampMotor1_F), (8 bytes).
    Removing mc_api.o(.text.MC_ProgramPositionCommandMotor1), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_ProgramPositionCommandMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_SetCurrentReferenceMotor1), (20 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_SetCurrentReferenceMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_SetCurrentReferenceMotor1_F), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_SetCurrentReferenceMotor1_F), (8 bytes).
    Removing mc_api.o(.text.MC_GetCommandStateMotor1), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetCommandStateMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_StopSpeedRampMotor1), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_StopSpeedRampMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_StopRampMotor1), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_StopRampMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_HasRampCompletedMotor1), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_HasRampCompletedMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetMecSpeedReferenceMotor1), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetMecSpeedReferenceMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetMecSpeedReferenceMotor1_F), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetMecSpeedReferenceMotor1_F), (8 bytes).
    Removing mc_api.o(.text.MC_GetMecSpeedAverageMotor1), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetMecSpeedAverageMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetAverageMecSpeedMotor1_F), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetAverageMecSpeedMotor1_F), (8 bytes).
    Removing mc_api.o(.text.MC_GetLastRampFinalSpeedMotor1), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetLastRampFinalSpeedMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetLastRampFinalSpeedM1_F), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetLastRampFinalSpeedM1_F), (8 bytes).
    Removing mc_api.o(.text.MC_GetControlModeMotor1), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetControlModeMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetImposedDirectionMotor1), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetImposedDirectionMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetSpeedSensorReliabilityMotor1), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetSpeedSensorReliabilityMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetPhaseCurrentAmplitudeMotor1), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetPhaseCurrentAmplitudeMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetPhaseVoltageAmplitudeMotor1), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetPhaseVoltageAmplitudeMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetIabMotor1), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetIabMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetIabMotor1_F), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetIabMotor1_F), (8 bytes).
    Removing mc_api.o(.text.MC_GetIalphabetaMotor1), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetIalphabetaMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetIqdMotor1), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetIqdMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetIqdMotor1_F), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetIqdMotor1_F), (8 bytes).
    Removing mc_api.o(.text.MC_GetIqdrefMotor1), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetIqdrefMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetIqdrefMotor1_F), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetIqdrefMotor1_F), (8 bytes).
    Removing mc_api.o(.text.MC_GetVqdMotor1), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetVqdMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetValphabetaMotor1), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetValphabetaMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetElAngledppMotor1), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetElAngledppMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetTerefMotor1), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetTerefMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetTerefMotor1_F), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetTerefMotor1_F), (8 bytes).
    Removing mc_api.o(.text.MC_Clear_IqdrefMotor1), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_Clear_IqdrefMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_AcknowledgeFaultMotor1), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_AcknowledgeFaultMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetOccurredFaultsMotor1), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetOccurredFaultsMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetCurrentFaultsMotor1), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetCurrentFaultsMotor1), (8 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetSTMStateMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_SetPolarizationOffsetsMotor1), (20 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_SetPolarizationOffsetsMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetPolarizationOffsetsMotor1), (20 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetPolarizationOffsetsMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_StartPolarizationOffsetsMeasurementMotor1), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_StartPolarizationOffsetsMeasurementMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetAveragePowerMotor1_F), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetAveragePowerMotor1_F), (8 bytes).
    Removing mc_api.o(.text.MC_GetControlPositionStatusMotor1), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetControlPositionStatusMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetAlignmentStatusMotor1), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetAlignmentStatusMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetCurrentPosition1), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetCurrentPosition1), (8 bytes).
    Removing mc_api.o(.text.MC_GetTargetPosition1), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetTargetPosition1), (8 bytes).
    Removing mc_api.o(.text.MC_GetMoveDuration1), (14 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetMoveDuration1), (8 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_ProfilerCommand), (8 bytes).
    Removing mc_config.o(.text), (0 bytes).
    Removing mc_config.o(.data.pTemperatureSensor), (4 bytes).
    Removing mcp_config.o(.text), (0 bytes).
    Removing mc_tasks.o(.text), (0 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.MCboot), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.FOC_Clear), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.MC_RunMotorControlTasks), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.MC_Scheduler), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.TSK_MF_StopProcessing), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.TSK_SetStopPermanencyTimeM1), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.TSK_MediumFrequencyTaskM1), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.TSK_SetChargeBootCapDelayM1), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.TSK_ChargeBootCapDelayHasElapsedM1), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.FOC_InitAdditionalMethods), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.FOC_CalcCurrRef), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.TSK_StopPermanencyTimeHasElapsedM1), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.TSK_HighFrequencyTask), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.TSK_SafetyTask), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.TSK_SafetyTask_PWMOFF), (8 bytes).
    Removing mc_tasks.o(.text.GetMCI), (18 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.GetMCI), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.TSK_HardwareFaultTask), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.startMediumFrequencyTask), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.StartSafetyTask), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.UI_HandleStartStopButton_cb), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.mc_lock_pins), (8 bytes).
    Removing pwm_curr_fdbk.o(.text), (0 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_Clear), (14 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_Clear), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_SetOffsetCalib), (10 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_SetOffsetCalib), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_GetOffsetCalib), (10 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_GetOffsetCalib), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_GetPhaseCurrents), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_SetPhaseVoltage), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_SwitchOffPWM), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_SwitchOnPWM), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_CurrentReadingCalibr), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_CalcPhaseCurrentsEst), (100 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_CalcPhaseCurrentsEst), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_TurnOnLowSides), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_TurnOnLowSides), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_OCP_Handler), (68 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_OCP_Handler), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_DP_Handler), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_OVP_Handler), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_IsFaultOccurred), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_OCPSetReferenceVoltage), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_OCPSetReferenceVoltage), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_GetTurnOnLowSidesAction), (6 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_GetTurnOnLowSidesAction), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_DPWM_ModeEnable), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_DPWM_ModeEnable), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_DPWM_ModeDisable), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_DPWM_ModeDisable), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_GetDPWM_Mode), (6 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_GetDPWM_Mode), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RLDetectionModeEnable), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RLDetectionModeEnable), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RLDetectionModeDisable), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RLDetectionModeDisable), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RLDetectionModeSetDuty), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RLDetectionModeSetDuty), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RLTurnOnLowSidesAndStart), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RLTurnOnLowSidesAndStart), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_SetAlignFlag), (6 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_SetAlignFlag), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RegisterGetPhaseCurrentsCallBack), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterGetPhaseCurrentsCallBack), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RegisterSwitchOffPwmCallBack), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterSwitchOffPwmCallBack), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RegisterSwitchonPwmCallBack), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterSwitchonPwmCallBack), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RegisterReadingCalibrationCallBack), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterReadingCalibrationCallBack), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RegisterTurnOnLowSidesCallBack), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterTurnOnLowSidesCallBack), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RegisterSampPointSectXCallBack), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterSampPointSectXCallBack), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RegisterOCPSetRefVoltageCallBack), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterOCPSetRefVoltageCallBack), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RegisterRLDetectionModeEnableCallBack), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterRLDetectionModeEnableCallBack), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RegisterRLDetectionModeDisableCallBack), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterRLDetectionModeDisableCallBack), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RegisterRLDetectionModeSetDutyCallBack), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterRLDetectionModeSetDutyCallBack), (8 bytes).
    Removing regular_conversion_manager.o(.text), (0 bytes).
    Removing regular_conversion_manager.o(.text.RCM_RegisterRegConv_WithCB), (38 bytes).
    Removing regular_conversion_manager.o(.ARM.exidx.text.RCM_RegisterRegConv_WithCB), (8 bytes).
    Removing regular_conversion_manager.o(.ARM.exidx.text.RCM_RegisterRegConv), (8 bytes).
    Removing regular_conversion_manager.o(.ARM.exidx.text.RCM_ExecRegularConv), (8 bytes).
    Removing regular_conversion_manager.o(.text.RCM_RequestUserConv), (34 bytes).
    Removing regular_conversion_manager.o(.ARM.exidx.text.RCM_RequestUserConv), (8 bytes).
    Removing regular_conversion_manager.o(.text.RCM_GetUserConv), (26 bytes).
    Removing regular_conversion_manager.o(.ARM.exidx.text.RCM_GetUserConv), (8 bytes).
    Removing regular_conversion_manager.o(.ARM.exidx.text.RCM_ExecUserConv), (8 bytes).
    Removing regular_conversion_manager.o(.text.RCM_GetUserConvState), (12 bytes).
    Removing regular_conversion_manager.o(.ARM.exidx.text.RCM_GetUserConvState), (8 bytes).
    Removing mc_math.o(.text), (0 bytes).
    Removing mc_math.o(.ARM.exidx.text.MCM_Clarke), (8 bytes).
    Removing mc_math.o(.ARM.exidx.text.MCM_Park), (8 bytes).
    Removing mc_math.o(.ARM.exidx.text.MCM_Trig_Functions), (8 bytes).
    Removing mc_math.o(.ARM.exidx.text.MCM_Rev_Park), (8 bytes).
    Removing mc_math.o(.ARM.exidx.text.MCM_Sqrt), (8 bytes).
    Removing mc_math.o(.text.MCM_floatToIntBit), (6 bytes).
    Removing mc_math.o(.ARM.exidx.text.MCM_floatToIntBit), (8 bytes).
    Removing mc_interface.o(.text), (0 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_Init), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_ExecSpeedRamp), (8 bytes).
    Removing mc_interface.o(.text.MCI_ExecSpeedRamp_F), (28 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_ExecSpeedRamp_F), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_ExecTorqueRamp), (8 bytes).
    Removing mc_interface.o(.text.MCI_ExecTorqueRamp_F), (22 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_ExecTorqueRamp_F), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_SetCurrentReferences), (8 bytes).
    Removing mc_interface.o(.text.MCI_SetCurrentReferences_F), (34 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_SetCurrentReferences_F), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_ExecPositionCommand), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_StartMotor), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetSTMState), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetOccurredFaults), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetCurrentFaults), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_StartWithPolarizationMotor), (8 bytes).
    Removing mc_interface.o(.text.MCI_StartOffsetMeasurments), (56 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_StartOffsetMeasurments), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetCalibratedOffsetsMotor), (26 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetCalibratedOffsetsMotor), (8 bytes).
    Removing mc_interface.o(.text.MCI_SetCalibratedOffsetsMotor), (50 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_SetCalibratedOffsetsMotor), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_StopMotor), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_FaultAcknowledged), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_FaultProcessing), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_ExecBufferedCommands), (8 bytes).
    Removing mc_interface.o(.text.MCI_IsCommandAcknowledged), (22 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_IsCommandAcknowledged), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetCtrlPositionState), (6 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetCtrlPositionState), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetAlignmentStatus), (6 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetAlignmentStatus), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetCurrentPosition), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetTargetPosition), (6 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetTargetPosition), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetMoveDuration), (6 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetMoveDuration), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetFaultState), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetControlMode), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetImposedMotorDirection), (56 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetImposedMotorDirection), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetLastRampFinalSpeed), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetLastRampFinalTorque), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetLastRampFinalDuration), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetLastRampFinalSpeed_F), (48 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetLastRampFinalSpeed_F), (8 bytes).
    Removing mc_interface.o(.text.MCI_RampCompleted), (26 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_RampCompleted), (8 bytes).
    Removing mc_interface.o(.text.MCI_StopSpeedRamp), (6 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_StopSpeedRamp), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_StopRamp), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetSpdSensorReliability), (16 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetSpdSensorReliability), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetAvrgMecSpeedUnit), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetAvrgMecSpeed_F), (44 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetAvrgMecSpeed_F), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetMecSpeedRefUnit), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetMecSpeedRef_F), (40 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetMecSpeedRef_F), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetIab), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetIab_F), (44 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetIab_F), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetIalphabeta), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetIqd), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetIqd_F), (44 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetIqd_F), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetIqdHF), (6 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetIqdHF), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetIqdref), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetIqdref_F), (44 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetIqdref_F), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetVqd), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetValphabeta), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetElAngledpp), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetElAngledpp), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetTeref), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetTeref_F), (28 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetTeref_F), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetPhaseCurrentAmplitude), (36 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetPhaseCurrentAmplitude), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetPhaseVoltageAmplitude), (36 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetPhaseVoltageAmplitude), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_Clear_Iqdref), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_Clear_PerfMeasure), (8 bytes).
    Removing stm32l4xx_mc_it.o(.text), (0 bytes).
    Removing stm32l4xx_mc_it.o(.ARM.exidx.text.ADC1_2_IRQHandler), (8 bytes).
    Removing stm32l4xx_mc_it.o(.ARM.exidx.text.TIM1_UP_TIM16_IRQHandler), (8 bytes).
    Removing stm32l4xx_mc_it.o(.ARM.exidx.text.TIM1_BRK_TIM15_IRQHandler), (8 bytes).
    Removing stm32l4xx_mc_it.o(.ARM.exidx.text.TIM3_IRQHandler), (8 bytes).
    Removing stm32l4xx_mc_it.o(.ARM.exidx.text.DMA1_Channel6_IRQHandler), (8 bytes).
    Removing stm32l4xx_mc_it.o(.ARM.exidx.text.USART2_IRQHandler), (8 bytes).
    Removing stm32l4xx_mc_it.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing stm32l4xx_mc_it.o(.ARM.exidx.text.EXTI15_10_IRQHandler), (8 bytes).
    Removing mc_parameters.o(.text), (0 bytes).
    Removing register_interface.o(.text), (0 bytes).
    Removing register_interface.o(.ARM.exidx.text.RI_SetRegisterGlobal), (8 bytes).
    Removing register_interface.o(.text.RI_MovString), (144 bytes).
    Removing register_interface.o(.ARM.exidx.text.RI_MovString), (8 bytes).
    Removing register_interface.o(.ARM.exidx.text.RI_SetRegisterMotor1), (8 bytes).
    Removing register_interface.o(.ARM.exidx.text.RI_GetRegisterGlobal), (8 bytes).
    Removing register_interface.o(.ARM.exidx.text.RI_GetRegisterMotor1), (8 bytes).
    Removing register_interface.o(.ARM.exidx.text.RI_GetIDSize), (8 bytes).
    Removing register_interface.o(.ARM.exidx.text.RI_GetPtrReg), (8 bytes).
    Removing mcp.o(.text), (0 bytes).
    Removing mcp.o(.text.RI_SetRegCommandParser), (248 bytes).
    Removing mcp.o(.ARM.exidx.text.RI_SetRegCommandParser), (8 bytes).
    Removing mcp.o(.text.RI_GetRegCommandParser), (128 bytes).
    Removing mcp.o(.ARM.exidx.text.RI_GetRegCommandParser), (8 bytes).
    Removing mcp.o(.ARM.exidx.text.MCP_ReceivedPacket), (8 bytes).
    Removing mcp.o(.text.MCP_RegisterCallBack), (24 bytes).
    Removing mcp.o(.ARM.exidx.text.MCP_RegisterCallBack), (8 bytes).
    Removing mc_perf.o(.text), (0 bytes).
    Removing mc_perf.o(.ARM.exidx.text.MC_Perf_Measure_Init), (8 bytes).
    Removing mc_perf.o(.ARM.exidx.text.MC_Perf_Clear), (8 bytes).
    Removing mc_perf.o(.ARM.exidx.text.MC_Perf_Measure_Start), (8 bytes).
    Removing mc_perf.o(.ARM.exidx.text.MC_BG_Perf_Measure_Start), (8 bytes).
    Removing mc_perf.o(.ARM.exidx.text.MC_Perf_Measure_Stop), (8 bytes).
    Removing mc_perf.o(.ARM.exidx.text.MC_BG_Perf_Measure_Stop), (8 bytes).
    Removing mc_perf.o(.ARM.exidx.text.MC_Perf_GetCPU_Load), (8 bytes).
    Removing mc_perf.o(.ARM.exidx.text.MC_Perf_GetMaxCPU_Load), (8 bytes).
    Removing mc_perf.o(.ARM.exidx.text.MC_Perf_GetMinCPU_Load), (8 bytes).
    Removing usart_aspep_driver.o(.text), (0 bytes).
    Removing usart_aspep_driver.o(.ARM.exidx.text.UASPEP_INIT), (8 bytes).
    Removing usart_aspep_driver.o(.text.UASPEP_DAMCONFIG_TX), (160 bytes).
    Removing usart_aspep_driver.o(.ARM.exidx.text.UASPEP_DAMCONFIG_TX), (8 bytes).
    Removing usart_aspep_driver.o(.text.UASPEP_DAMCONFIG_RX), (188 bytes).
    Removing usart_aspep_driver.o(.ARM.exidx.text.UASPEP_DAMCONFIG_RX), (8 bytes).
    Removing usart_aspep_driver.o(.ARM.exidx.text.UASPEP_SEND_PACKET), (8 bytes).
    Removing usart_aspep_driver.o(.ARM.exidx.text.UASPEP_RECEIVE_BUFFER), (8 bytes).
    Removing usart_aspep_driver.o(.ARM.exidx.text.UASPEP_IDLE_ENABLE), (8 bytes).
    Removing mc_configuration_registers.o(.text), (0 bytes).
    Removing aspep.o(.text), (0 bytes).
    Removing aspep.o(.ARM.exidx.text.ASPEP_start), (8 bytes).
    Removing aspep.o(.text.ASPEP_sendBeacon), (160 bytes).
    Removing aspep.o(.ARM.exidx.text.ASPEP_sendBeacon), (8 bytes).
    Removing aspep.o(.ARM.exidx.text.ASPEP_TXframeProcess), (8 bytes).
    Removing aspep.o(.text.ASPEP_sendPing), (164 bytes).
    Removing aspep.o(.ARM.exidx.text.ASPEP_sendPing), (8 bytes).
    Removing aspep.o(.ARM.exidx.text.ASPEP_getBuffer), (8 bytes).
    Removing aspep.o(.ARM.exidx.text.ASPEP_sendPacket), (8 bytes).
    Removing aspep.o(.ARM.exidx.text.ASPEP_HWDataTransmittedIT), (8 bytes).
    Removing aspep.o(.ARM.exidx.text.ASPEP_RXframeProcess), (8 bytes).
    Removing aspep.o(.ARM.exidx.text.ASPEP_HWDataReceivedIT), (8 bytes).
    Removing aspep.o(.ARM.exidx.text.ASPEP_HWDMAReset), (8 bytes).
    Removing mc_app_hooks.o(.text), (0 bytes).
    Removing mc_app_hooks.o(.ARM.exidx.text.MC_APP_BootHook), (8 bytes).
    Removing mc_app_hooks.o(.ARM.exidx.text.MC_APP_PostMediumFrequencyHook_M1), (8 bytes).
    Removing stm32l4xx_it.o(.text), (0 bytes).
    Removing stm32l4xx_it.o(.ARM.exidx.text.TIM6_DAC_IRQHandler), (8 bytes).
    Removing stm32l4xx_hal_msp.o(.text), (0 bytes).
    Removing stm32l4xx_hal_msp.o(.ARM.exidx.text.HAL_MspInit), (8 bytes).
    Removing stm32l4xx_hal_msp.o(.ARM.exidx.text.HAL_ADC_MspInit), (8 bytes).
    Removing stm32l4xx_hal_msp.o(.text.HAL_ADC_MspDeInit), (78 bytes).
    Removing stm32l4xx_hal_msp.o(.ARM.exidx.text.HAL_ADC_MspDeInit), (8 bytes).
    Removing stm32l4xx_hal_msp.o(.ARM.exidx.text.HAL_TIM_Base_MspInit), (8 bytes).
    Removing stm32l4xx_hal_msp.o(.ARM.exidx.text.HAL_TIM_MspPostInit), (8 bytes).
    Removing stm32l4xx_hal_msp.o(.text.HAL_TIM_Base_MspDeInit), (78 bytes).
    Removing stm32l4xx_hal_msp.o(.ARM.exidx.text.HAL_TIM_Base_MspDeInit), (8 bytes).
    Removing stm32l4xx_hal_msp.o(.ARM.exidx.text.HAL_UART_MspInit), (8 bytes).
    Removing stm32l4xx_hal_msp.o(.text.HAL_UART_MspDeInit), (116 bytes).
    Removing stm32l4xx_hal_msp.o(.ARM.exidx.text.HAL_UART_MspDeInit), (8 bytes).
    Removing stm32l4xx_hal_timebase_tim.o(.text), (0 bytes).
    Removing stm32l4xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_InitTick), (8 bytes).
    Removing stm32l4xx_hal_timebase_tim.o(.text.HAL_SuspendTick), (20 bytes).
    Removing stm32l4xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_SuspendTick), (8 bytes).
    Removing stm32l4xx_hal_timebase_tim.o(.text.HAL_ResumeTick), (20 bytes).
    Removing stm32l4xx_hal_timebase_tim.o(.ARM.exidx.text.HAL_ResumeTick), (8 bytes).
    Removing stm32l4xx_hal_adc.o(.text), (0 bytes).
    Removing stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Init), (8 bytes).
    Removing stm32l4xx_hal_adc.o(.text.HAL_ADC_MspInit), (2 bytes).
    Removing stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_MspInit), (8 bytes).
    Removing stm32l4xx_hal_adc.o(.text.HAL_ADC_DeInit), (448 bytes).
    Removing stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_DeInit), (8 bytes).
    Removing stm32l4xx_hal_adc.o(.text.ADC_ConversionStop), (400 bytes).
    Removing stm32l4xx_hal_adc.o(.ARM.exidx.text.ADC_ConversionStop), (8 bytes).
    Removing stm32l4xx_hal_adc.o(.text.ADC_Disable), (124 bytes).
    Removing stm32l4xx_hal_adc.o(.ARM.exidx.text.ADC_Disable), (8 bytes).
    Removing stm32l4xx_hal_adc.o(.text.HAL_ADC_MspDeInit), (2 bytes).
    Removing stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_MspDeInit), (8 bytes).
    Removing stm32l4xx_hal_adc.o(.text.HAL_ADC_Start), (224 bytes).
    Removing stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Start), (8 bytes).
    Removing stm32l4xx_hal_adc.o(.text.ADC_Enable), (246 bytes).
    Removing stm32l4xx_hal_adc.o(.ARM.exidx.text.ADC_Enable), (8 bytes).
    Removing stm32l4xx_hal_adc.o(.text.HAL_ADC_Stop), (174 bytes).
    Removing stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Stop), (8 bytes).
    Removing stm32l4xx_hal_adc.o(.text.HAL_ADC_PollForConversion), (354 bytes).
    Removing stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_PollForConversion), (8 bytes).
    Removing stm32l4xx_hal_adc.o(.text.HAL_ADC_PollForEvent), (318 bytes).
    Removing stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_PollForEvent), (8 bytes).
    Removing stm32l4xx_hal_adc.o(.text.HAL_ADC_Start_IT), (342 bytes).
    Removing stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Start_IT), (8 bytes).
    Removing stm32l4xx_hal_adc.o(.text.HAL_ADC_Stop_IT), (182 bytes).
    Removing stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Stop_IT), (8 bytes).
    Removing stm32l4xx_hal_adc.o(.text.HAL_ADC_Start_DMA), (254 bytes).
    Removing stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Start_DMA), (8 bytes).
    Removing stm32l4xx_hal_adc.o(.text.ADC_DMAConvCplt), (98 bytes).
    Removing stm32l4xx_hal_adc.o(.ARM.exidx.text.ADC_DMAConvCplt), (8 bytes).
    Removing stm32l4xx_hal_adc.o(.text.ADC_DMAHalfConvCplt), (6 bytes).
    Removing stm32l4xx_hal_adc.o(.ARM.exidx.text.ADC_DMAHalfConvCplt), (8 bytes).
    Removing stm32l4xx_hal_adc.o(.text.ADC_DMAError), (22 bytes).
    Removing stm32l4xx_hal_adc.o(.ARM.exidx.text.ADC_DMAError), (8 bytes).
    Removing stm32l4xx_hal_adc.o(.text.HAL_ADC_Stop_DMA), (336 bytes).
    Removing stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Stop_DMA), (8 bytes).
    Removing stm32l4xx_hal_adc.o(.text.HAL_ADC_GetValue), (6 bytes).
    Removing stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_GetValue), (8 bytes).
    Removing stm32l4xx_hal_adc.o(.text.HAL_ADC_IRQHandler), (638 bytes).
    Removing stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_IRQHandler), (8 bytes).
    Removing stm32l4xx_hal_adc.o(.text.HAL_ADC_ConvCpltCallback), (2 bytes).
    Removing stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_ConvCpltCallback), (8 bytes).
    Removing stm32l4xx_hal_adc.o(.text.HAL_ADC_LevelOutOfWindowCallback), (2 bytes).
    Removing stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_LevelOutOfWindowCallback), (8 bytes).
    Removing stm32l4xx_hal_adc.o(.text.HAL_ADC_ErrorCallback), (2 bytes).
    Removing stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_ErrorCallback), (8 bytes).
    Removing stm32l4xx_hal_adc.o(.text.HAL_ADC_ConvHalfCpltCallback), (2 bytes).
    Removing stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_ConvHalfCpltCallback), (8 bytes).
    Removing stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_ConfigChannel), (8 bytes).
    Removing stm32l4xx_hal_adc.o(.text.HAL_ADC_AnalogWDGConfig), (646 bytes).
    Removing stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_AnalogWDGConfig), (8 bytes).
    Removing stm32l4xx_hal_adc.o(.text.HAL_ADC_GetState), (4 bytes).
    Removing stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_GetState), (8 bytes).
    Removing stm32l4xx_hal_adc.o(.text.HAL_ADC_GetError), (4 bytes).
    Removing stm32l4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_GetError), (8 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.text), (0 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_Calibration_Start), (212 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_Calibration_Start), (8 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_Calibration_GetValue), (22 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_Calibration_GetValue), (8 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_Calibration_SetValue), (122 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_Calibration_SetValue), (8 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart), (224 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedStart), (8 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStop), (90 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedStop), (8 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedPollForConversion), (300 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedPollForConversion), (8 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart_IT), (272 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedStart_IT), (8 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStop_IT), (98 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedStop_IT), (8 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStart_DMA), (210 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_MultiModeStart_DMA), (8 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStop_DMA), (244 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_MultiModeStop_DMA), (8 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeGetValue), (12 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_MultiModeGetValue), (8 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedGetValue), (48 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedGetValue), (8 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConvCpltCallback), (2 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedConvCpltCallback), (8 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedQueueOverflowCallback), (2 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedQueueOverflowCallback), (8 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_LevelOutOfWindow2Callback), (2 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_LevelOutOfWindow2Callback), (8 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_LevelOutOfWindow3Callback), (2 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_LevelOutOfWindow3Callback), (8 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_EndOfSamplingCallback), (2 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_EndOfSamplingCallback), (8 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularStop), (98 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_RegularStop), (8 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularStop_IT), (106 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_RegularStop_IT), (8 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularStop_DMA), (148 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_RegularStop_DMA), (8 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_RegularMultiModeStop_DMA), (278 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_RegularMultiModeStop_DMA), (8 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedConfigChannel), (8 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_MultiModeConfigChannel), (8 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_EnableInjectedQueue), (42 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_EnableInjectedQueue), (8 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_DisableInjectedQueue), (8 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_DisableVoltageRegulator), (30 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_DisableVoltageRegulator), (8 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_EnterADCDeepPowerDownMode), (34 bytes).
    Removing stm32l4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_EnterADCDeepPowerDownMode), (8 bytes).
    Removing stm32l4xx_hal.o(.text), (0 bytes).
    Removing stm32l4xx_hal.o(.ARM.exidx.text.HAL_Init), (8 bytes).
    Removing stm32l4xx_hal.o(.text.HAL_InitTick), (76 bytes).
    Removing stm32l4xx_hal.o(.ARM.exidx.text.HAL_InitTick), (8 bytes).
    Removing stm32l4xx_hal.o(.text.HAL_MspInit), (2 bytes).
    Removing stm32l4xx_hal.o(.ARM.exidx.text.HAL_MspInit), (8 bytes).
    Removing stm32l4xx_hal.o(.text.HAL_DeInit), (48 bytes).
    Removing stm32l4xx_hal.o(.ARM.exidx.text.HAL_DeInit), (8 bytes).
    Removing stm32l4xx_hal.o(.text.HAL_MspDeInit), (2 bytes).
    Removing stm32l4xx_hal.o(.ARM.exidx.text.HAL_MspDeInit), (8 bytes).
    Removing stm32l4xx_hal.o(.ARM.exidx.text.HAL_IncTick), (8 bytes).
    Removing stm32l4xx_hal.o(.ARM.exidx.text.HAL_GetTick), (8 bytes).
    Removing stm32l4xx_hal.o(.text.HAL_GetTickPrio), (12 bytes).
    Removing stm32l4xx_hal.o(.ARM.exidx.text.HAL_GetTickPrio), (8 bytes).
    Removing stm32l4xx_hal.o(.text.HAL_SetTickFreq), (38 bytes).
    Removing stm32l4xx_hal.o(.ARM.exidx.text.HAL_SetTickFreq), (8 bytes).
    Removing stm32l4xx_hal.o(.text.HAL_GetTickFreq), (12 bytes).
    Removing stm32l4xx_hal.o(.ARM.exidx.text.HAL_GetTickFreq), (8 bytes).
    Removing stm32l4xx_hal.o(.text.HAL_Delay), (40 bytes).
    Removing stm32l4xx_hal.o(.ARM.exidx.text.HAL_Delay), (8 bytes).
    Removing stm32l4xx_hal.o(.text.HAL_SuspendTick), (18 bytes).
    Removing stm32l4xx_hal.o(.ARM.exidx.text.HAL_SuspendTick), (8 bytes).
    Removing stm32l4xx_hal.o(.text.HAL_ResumeTick), (18 bytes).
    Removing stm32l4xx_hal.o(.ARM.exidx.text.HAL_ResumeTick), (8 bytes).
    Removing stm32l4xx_hal.o(.text.HAL_GetHalVersion), (10 bytes).
    Removing stm32l4xx_hal.o(.ARM.exidx.text.HAL_GetHalVersion), (8 bytes).
    Removing stm32l4xx_hal.o(.text.HAL_GetREVID), (14 bytes).
    Removing stm32l4xx_hal.o(.ARM.exidx.text.HAL_GetREVID), (8 bytes).
    Removing stm32l4xx_hal.o(.text.HAL_GetDEVID), (16 bytes).
    Removing stm32l4xx_hal.o(.ARM.exidx.text.HAL_GetDEVID), (8 bytes).
    Removing stm32l4xx_hal.o(.text.HAL_GetUIDw0), (12 bytes).
    Removing stm32l4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw0), (8 bytes).
    Removing stm32l4xx_hal.o(.text.HAL_GetUIDw1), (12 bytes).
    Removing stm32l4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw1), (8 bytes).
    Removing stm32l4xx_hal.o(.text.HAL_GetUIDw2), (12 bytes).
    Removing stm32l4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw2), (8 bytes).
    Removing stm32l4xx_hal.o(.text.HAL_DBGMCU_EnableDBGSleepMode), (18 bytes).
    Removing stm32l4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGSleepMode), (8 bytes).
    Removing stm32l4xx_hal.o(.text.HAL_DBGMCU_DisableDBGSleepMode), (18 bytes).
    Removing stm32l4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGSleepMode), (8 bytes).
    Removing stm32l4xx_hal.o(.text.HAL_DBGMCU_EnableDBGStopMode), (18 bytes).
    Removing stm32l4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode), (8 bytes).
    Removing stm32l4xx_hal.o(.text.HAL_DBGMCU_DisableDBGStopMode), (18 bytes).
    Removing stm32l4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode), (8 bytes).
    Removing stm32l4xx_hal.o(.text.HAL_DBGMCU_EnableDBGStandbyMode), (18 bytes).
    Removing stm32l4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode), (8 bytes).
    Removing stm32l4xx_hal.o(.text.HAL_DBGMCU_DisableDBGStandbyMode), (18 bytes).
    Removing stm32l4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode), (8 bytes).
    Removing stm32l4xx_hal.o(.text.HAL_SYSCFG_SRAM2Erase), (28 bytes).
    Removing stm32l4xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_SRAM2Erase), (8 bytes).
    Removing stm32l4xx_hal.o(.text.HAL_SYSCFG_EnableMemorySwappingBank), (12 bytes).
    Removing stm32l4xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableMemorySwappingBank), (8 bytes).
    Removing stm32l4xx_hal.o(.text.HAL_SYSCFG_DisableMemorySwappingBank), (12 bytes).
    Removing stm32l4xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableMemorySwappingBank), (8 bytes).
    Removing stm32l4xx_hal.o(.text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig), (18 bytes).
    Removing stm32l4xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig), (8 bytes).
    Removing stm32l4xx_hal.o(.text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig), (18 bytes).
    Removing stm32l4xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig), (8 bytes).
    Removing stm32l4xx_hal.o(.text.HAL_SYSCFG_VREFBUF_TrimmingConfig), (18 bytes).
    Removing stm32l4xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_VREFBUF_TrimmingConfig), (8 bytes).
    Removing stm32l4xx_hal.o(.text.HAL_SYSCFG_EnableVREFBUF), (48 bytes).
    Removing stm32l4xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableVREFBUF), (8 bytes).
    Removing stm32l4xx_hal.o(.text.HAL_SYSCFG_DisableVREFBUF), (16 bytes).
    Removing stm32l4xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableVREFBUF), (8 bytes).
    Removing stm32l4xx_hal.o(.text.HAL_SYSCFG_EnableIOAnalogSwitchBooster), (16 bytes).
    Removing stm32l4xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableIOAnalogSwitchBooster), (8 bytes).
    Removing stm32l4xx_hal.o(.text.HAL_SYSCFG_DisableIOAnalogSwitchBooster), (16 bytes).
    Removing stm32l4xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableIOAnalogSwitchBooster), (8 bytes).
    Removing stm32l4xx_hal_rcc.o(.text), (0 bytes).
    Removing stm32l4xx_hal_rcc.o(.text.HAL_RCC_DeInit), (238 bytes).
    Removing stm32l4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit), (8 bytes).
    Removing stm32l4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig), (8 bytes).
    Removing stm32l4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq), (8 bytes).
    Removing stm32l4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig), (8 bytes).
    Removing stm32l4xx_hal_rcc.o(.text.HAL_RCC_MCOConfig), (84 bytes).
    Removing stm32l4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig), (8 bytes).
    Removing stm32l4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq), (8 bytes).
    Removing stm32l4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq), (8 bytes).
    Removing stm32l4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK2Freq), (8 bytes).
    Removing stm32l4xx_hal_rcc.o(.text.HAL_RCC_GetOscConfig), (204 bytes).
    Removing stm32l4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig), (8 bytes).
    Removing stm32l4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig), (8 bytes).
    Removing stm32l4xx_hal_rcc.o(.text.HAL_RCC_EnableCSS), (18 bytes).
    Removing stm32l4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS), (8 bytes).
    Removing stm32l4xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler), (30 bytes).
    Removing stm32l4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler), (8 bytes).
    Removing stm32l4xx_hal_rcc.o(.text.HAL_RCC_CSSCallback), (2 bytes).
    Removing stm32l4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback), (8 bytes).
    Removing stm32l4xx_hal_rcc.o(.text.HAL_RCC_GetResetSource), (24 bytes).
    Removing stm32l4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetResetSource), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.text), (0 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.RCCEx_PLLSAI1_Config), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.RCCEx_PLLSAI2_Config), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig), (306 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq), (1134 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.text.RCCEx_GetSAIxPeriphCLKFreq), (262 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.RCCEx_GetSAIxPeriphCLKFreq), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLSAI1), (164 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLSAI1), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLSAI1), (80 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLSAI1), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLSAI2), (144 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLSAI2), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLSAI2), (80 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLSAI2), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_WakeUpStopCLKConfig), (20 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_WakeUpStopCLKConfig), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_StandbyMSIRangeConfig), (22 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_StandbyMSIRangeConfig), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSECSS), (18 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnableLSECSS), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisableLSECSS), (26 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisableLSECSS), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSECSS_IT), (50 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnableLSECSS_IT), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_LSECSS_IRQHandler), (30 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_LSECSS_IRQHandler), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_LSECSS_Callback), (2 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_LSECSS_Callback), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSCO), (160 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnableLSCO), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisableLSCO), (94 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisableLSCO), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableMSIPLLMode), (18 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnableMSIPLLMode), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisableMSIPLLMode), (18 bytes).
    Removing stm32l4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisableMSIPLLMode), (8 bytes).
    Removing stm32l4xx_hal_flash.o(.text), (0 bytes).
    Removing stm32l4xx_hal_flash.o(.text.HAL_FLASH_Program), (474 bytes).
    Removing stm32l4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Program), (8 bytes).
    Removing stm32l4xx_hal_flash.o(.text.FLASH_WaitForLastOperation), (128 bytes).
    Removing stm32l4xx_hal_flash.o(.ARM.exidx.text.FLASH_WaitForLastOperation), (8 bytes).
    Removing stm32l4xx_hal_flash.o(.text.HAL_FLASH_Program_IT), (280 bytes).
    Removing stm32l4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Program_IT), (8 bytes).
    Removing stm32l4xx_hal_flash.o(.text.HAL_FLASH_IRQHandler), (258 bytes).
    Removing stm32l4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_IRQHandler), (8 bytes).
    Removing stm32l4xx_hal_flash.o(.text.HAL_FLASH_OperationErrorCallback), (2 bytes).
    Removing stm32l4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OperationErrorCallback), (8 bytes).
    Removing stm32l4xx_hal_flash.o(.text.HAL_FLASH_EndOfOperationCallback), (2 bytes).
    Removing stm32l4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_EndOfOperationCallback), (8 bytes).
    Removing stm32l4xx_hal_flash.o(.text.HAL_FLASH_Unlock), (46 bytes).
    Removing stm32l4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Unlock), (8 bytes).
    Removing stm32l4xx_hal_flash.o(.text.HAL_FLASH_Lock), (20 bytes).
    Removing stm32l4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Lock), (8 bytes).
    Removing stm32l4xx_hal_flash.o(.text.HAL_FLASH_OB_Unlock), (42 bytes).
    Removing stm32l4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Unlock), (8 bytes).
    Removing stm32l4xx_hal_flash.o(.text.HAL_FLASH_OB_Lock), (20 bytes).
    Removing stm32l4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Lock), (8 bytes).
    Removing stm32l4xx_hal_flash.o(.text.HAL_FLASH_OB_Launch), (106 bytes).
    Removing stm32l4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Launch), (8 bytes).
    Removing stm32l4xx_hal_flash.o(.text.HAL_FLASH_GetError), (12 bytes).
    Removing stm32l4xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_GetError), (8 bytes).
    Removing stm32l4xx_hal_flash.o(.data.pFlash), (32 bytes).
    Removing stm32l4xx_hal_flash_ex.o(.text), (0 bytes).
    Removing stm32l4xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase), (402 bytes).
    Removing stm32l4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Erase), (8 bytes).
    Removing stm32l4xx_hal_flash_ex.o(.text.FLASH_PageErase), (46 bytes).
    Removing stm32l4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_PageErase), (8 bytes).
    Removing stm32l4xx_hal_flash_ex.o(.text.FLASH_FlushCaches), (110 bytes).
    Removing stm32l4xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_FlushCaches), (8 bytes).
    Removing stm32l4xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase_IT), (200 bytes).
    Removing stm32l4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Erase_IT), (8 bytes).
    Removing stm32l4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram), (798 bytes).
    Removing stm32l4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OBProgram), (8 bytes).
    Removing stm32l4xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBGetConfig), (282 bytes).
    Removing stm32l4xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OBGetConfig), (8 bytes).
    Removing stm32l4xx_hal_flash_ramfunc.o(.text), (0 bytes).
    Removing stm32l4xx_hal_flash_ramfunc.o(.text.HAL_FLASHEx_EnableRunPowerDown), (40 bytes).
    Removing stm32l4xx_hal_flash_ramfunc.o(.ARM.exidx.text.HAL_FLASHEx_EnableRunPowerDown), (8 bytes).
    Removing stm32l4xx_hal_flash_ramfunc.o(.text.HAL_FLASHEx_DisableRunPowerDown), (40 bytes).
    Removing stm32l4xx_hal_flash_ramfunc.o(.ARM.exidx.text.HAL_FLASHEx_DisableRunPowerDown), (8 bytes).
    Removing stm32l4xx_hal_gpio.o(.text), (0 bytes).
    Removing stm32l4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init), (8 bytes).
    Removing stm32l4xx_hal_gpio.o(.text.HAL_GPIO_DeInit), (280 bytes).
    Removing stm32l4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit), (8 bytes).
    Removing stm32l4xx_hal_gpio.o(.text.HAL_GPIO_ReadPin), (10 bytes).
    Removing stm32l4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin), (8 bytes).
    Removing stm32l4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin), (8 bytes).
    Removing stm32l4xx_hal_gpio.o(.text.HAL_GPIO_TogglePin), (16 bytes).
    Removing stm32l4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin), (8 bytes).
    Removing stm32l4xx_hal_gpio.o(.text.HAL_GPIO_LockPin), (40 bytes).
    Removing stm32l4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin), (8 bytes).
    Removing stm32l4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler), (22 bytes).
    Removing stm32l4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler), (8 bytes).
    Removing stm32l4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback), (2 bytes).
    Removing stm32l4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback), (8 bytes).
    Removing stm32l4xx_hal_i2c.o(.text), (0 bytes).
    Removing stm32l4xx_hal_i2c_ex.o(.text), (0 bytes).
    Removing stm32l4xx_hal_dma.o(.text), (0 bytes).
    Removing stm32l4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Init), (8 bytes).
    Removing stm32l4xx_hal_dma.o(.text.HAL_DMA_DeInit), (168 bytes).
    Removing stm32l4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_DeInit), (8 bytes).
    Removing stm32l4xx_hal_dma.o(.text.HAL_DMA_Start), (116 bytes).
    Removing stm32l4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start), (8 bytes).
    Removing stm32l4xx_hal_dma.o(.text.HAL_DMA_Start_IT), (164 bytes).
    Removing stm32l4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start_IT), (8 bytes).
    Removing stm32l4xx_hal_dma.o(.text.HAL_DMA_Abort), (74 bytes).
    Removing stm32l4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort), (8 bytes).
    Removing stm32l4xx_hal_dma.o(.text.HAL_DMA_Abort_IT), (88 bytes).
    Removing stm32l4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort_IT), (8 bytes).
    Removing stm32l4xx_hal_dma.o(.text.HAL_DMA_PollForTransfer), (308 bytes).
    Removing stm32l4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_PollForTransfer), (8 bytes).
    Removing stm32l4xx_hal_dma.o(.text.HAL_DMA_IRQHandler), (170 bytes).
    Removing stm32l4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_IRQHandler), (8 bytes).
    Removing stm32l4xx_hal_dma.o(.text.HAL_DMA_RegisterCallback), (86 bytes).
    Removing stm32l4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_RegisterCallback), (8 bytes).
    Removing stm32l4xx_hal_dma.o(.text.HAL_DMA_UnRegisterCallback), (120 bytes).
    Removing stm32l4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_UnRegisterCallback), (8 bytes).
    Removing stm32l4xx_hal_dma.o(.text.HAL_DMA_GetState), (6 bytes).
    Removing stm32l4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetState), (8 bytes).
    Removing stm32l4xx_hal_dma.o(.text.HAL_DMA_GetError), (4 bytes).
    Removing stm32l4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetError), (8 bytes).
    Removing stm32l4xx_hal_dma_ex.o(.text), (0 bytes).
    Removing stm32l4xx_hal_pwr.o(.text), (0 bytes).
    Removing stm32l4xx_hal_pwr.o(.text.HAL_PWR_DeInit), (26 bytes).
    Removing stm32l4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit), (8 bytes).
    Removing stm32l4xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess), (18 bytes).
    Removing stm32l4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess), (8 bytes).
    Removing stm32l4xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess), (18 bytes).
    Removing stm32l4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess), (8 bytes).
    Removing stm32l4xx_hal_pwr.o(.text.HAL_PWR_ConfigPVD), (136 bytes).
    Removing stm32l4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_ConfigPVD), (8 bytes).
    Removing stm32l4xx_hal_pwr.o(.text.HAL_PWR_EnablePVD), (18 bytes).
    Removing stm32l4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnablePVD), (8 bytes).
    Removing stm32l4xx_hal_pwr.o(.text.HAL_PWR_DisablePVD), (18 bytes).
    Removing stm32l4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisablePVD), (8 bytes).
    Removing stm32l4xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin), (30 bytes).
    Removing stm32l4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin), (8 bytes).
    Removing stm32l4xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin), (24 bytes).
    Removing stm32l4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin), (8 bytes).
    Removing stm32l4xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode), (76 bytes).
    Removing stm32l4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode), (8 bytes).
    Removing stm32l4xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode), (16 bytes).
    Removing stm32l4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode), (8 bytes).
    Removing stm32l4xx_hal_pwr.o(.text.HAL_PWR_EnterSTANDBYMode), (38 bytes).
    Removing stm32l4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode), (8 bytes).
    Removing stm32l4xx_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit), (18 bytes).
    Removing stm32l4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit), (8 bytes).
    Removing stm32l4xx_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit), (18 bytes).
    Removing stm32l4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit), (8 bytes).
    Removing stm32l4xx_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend), (18 bytes).
    Removing stm32l4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend), (8 bytes).
    Removing stm32l4xx_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend), (18 bytes).
    Removing stm32l4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend), (8 bytes).
    Removing stm32l4xx_hal_pwr.o(.text.HAL_PWR_PVDCallback), (2 bytes).
    Removing stm32l4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVDCallback), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text), (0 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetVoltageRange), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ControlVoltageScaling), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBatteryCharging), (28 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableBatteryCharging), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBatteryCharging), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableBatteryCharging), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableVddUSB), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableVddUSB), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableVddUSB), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableVddUSB), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableVddIO2), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableVddIO2), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableVddIO2), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableVddIO2), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableInternalWakeUpLine), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableInternalWakeUpLine), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableInternalWakeUpLine), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableInternalWakeUpLine), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableGPIOPullUp), (204 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableGPIOPullUp), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableGPIOPullUp), (194 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableGPIOPullUp), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableGPIOPullDown), (258 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableGPIOPullDown), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableGPIOPullDown), (102 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableGPIOPullDown), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnablePullUpPullDownConfig), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnablePullUpPullDownConfig), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisablePullUpPullDownConfig), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisablePullUpPullDownConfig), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableSRAM2ContentRetention), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableSRAM2ContentRetention), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_SetSRAM2ContentRetention), (48 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_SetSRAM2ContentRetention), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableSRAM2ContentRetention), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableSRAM2ContentRetention), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableExtSMPS_0V95), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableExtSMPS_0V95), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableExtSMPS_0V95), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableExtSMPS_0V95), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnablePVM1), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnablePVM1), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisablePVM1), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisablePVM1), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnablePVM2), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnablePVM2), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisablePVM2), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisablePVM2), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnablePVM3), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnablePVM3), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisablePVM3), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisablePVM3), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnablePVM4), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnablePVM4), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisablePVM4), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisablePVM4), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_ConfigPVM), (562 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ConfigPVM), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableLowPowerRunMode), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableLowPowerRunMode), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableLowPowerRunMode), (102 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableLowPowerRunMode), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterSTOP0Mode), (54 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnterSTOP0Mode), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterSTOP1Mode), (60 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnterSTOP1Mode), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterSTOP2Mode), (60 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnterSTOP2Mode), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterSHUTDOWNMode), (38 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnterSHUTDOWNMode), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_PVD_PVM_IRQHandler), (112 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_PVD_PVM_IRQHandler), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_PVM1Callback), (2 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_PVM1Callback), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_PVM2Callback), (2 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_PVM2Callback), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_PVM3Callback), (2 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_PVM3Callback), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_PVM4Callback), (2 bytes).
    Removing stm32l4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_PVM4Callback), (8 bytes).
    Removing stm32l4xx_hal_cortex.o(.text), (0 bytes).
    Removing stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriorityGrouping), (8 bytes).
    Removing stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority), (8 bytes).
    Removing stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ), (8 bytes).
    Removing stm32l4xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ), (40 bytes).
    Removing stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ), (8 bytes).
    Removing stm32l4xx_hal_cortex.o(.text.HAL_NVIC_SystemReset), (4 bytes).
    Removing stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset), (8 bytes).
    Removing stm32l4xx_hal_cortex.o(.text.__NVIC_SystemReset), (42 bytes).
    Removing stm32l4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SystemReset), (8 bytes).
    Removing stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config), (8 bytes).
    Removing stm32l4xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping), (16 bytes).
    Removing stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32l4xx_hal_cortex.o(.text.HAL_NVIC_GetPriority), (88 bytes).
    Removing stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority), (8 bytes).
    Removing stm32l4xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ), (32 bytes).
    Removing stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ), (8 bytes).
    Removing stm32l4xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ), (36 bytes).
    Removing stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ), (8 bytes).
    Removing stm32l4xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ), (32 bytes).
    Removing stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ), (8 bytes).
    Removing stm32l4xx_hal_cortex.o(.text.HAL_NVIC_GetActive), (36 bytes).
    Removing stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetActive), (8 bytes).
    Removing stm32l4xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig), (24 bytes).
    Removing stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig), (8 bytes).
    Removing stm32l4xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler), (4 bytes).
    Removing stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing stm32l4xx_hal_cortex.o(.text.HAL_SYSTICK_Callback), (2 bytes).
    Removing stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback), (8 bytes).
    Removing stm32l4xx_hal_cortex.o(.text.HAL_MPU_Enable), (24 bytes).
    Removing stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable), (8 bytes).
    Removing stm32l4xx_hal_cortex.o(.text.HAL_MPU_Disable), (18 bytes).
    Removing stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable), (8 bytes).
    Removing stm32l4xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion), (96 bytes).
    Removing stm32l4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion), (8 bytes).
    Removing stm32l4xx_hal_exti.o(.text), (0 bytes).
    Removing stm32l4xx_hal_exti.o(.text.HAL_EXTI_SetConfigLine), (214 bytes).
    Removing stm32l4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_SetConfigLine), (8 bytes).
    Removing stm32l4xx_hal_exti.o(.text.HAL_EXTI_GetConfigLine), (168 bytes).
    Removing stm32l4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetConfigLine), (8 bytes).
    Removing stm32l4xx_hal_exti.o(.text.HAL_EXTI_ClearConfigLine), (148 bytes).
    Removing stm32l4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_ClearConfigLine), (8 bytes).
    Removing stm32l4xx_hal_exti.o(.text.HAL_EXTI_RegisterCallback), (12 bytes).
    Removing stm32l4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_RegisterCallback), (8 bytes).
    Removing stm32l4xx_hal_exti.o(.text.HAL_EXTI_GetHandle), (12 bytes).
    Removing stm32l4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetHandle), (8 bytes).
    Removing stm32l4xx_hal_exti.o(.text.HAL_EXTI_IRQHandler), (58 bytes).
    Removing stm32l4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_IRQHandler), (8 bytes).
    Removing stm32l4xx_hal_exti.o(.text.HAL_EXTI_GetPending), (32 bytes).
    Removing stm32l4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetPending), (8 bytes).
    Removing stm32l4xx_hal_exti.o(.text.HAL_EXTI_ClearPending), (30 bytes).
    Removing stm32l4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_ClearPending), (8 bytes).
    Removing stm32l4xx_hal_exti.o(.text.HAL_EXTI_GenerateSWI), (30 bytes).
    Removing stm32l4xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GenerateSWI), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text), (0 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Init), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_Base_MspInit), (2 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspInit), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.TIM_Base_SetConfig), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_Base_DeInit), (104 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_DeInit), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_Base_MspDeInit), (2 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspDeInit), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_Base_Start), (158 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_Base_Stop), (52 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_IT), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_Base_Stop_IT), (60 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_IT), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA), (242 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_DMA), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt), (20 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedCplt), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt), (6 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedHalfCplt), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.TIM_DMAError), (94 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.TIM_DMAError), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_Base_Stop_DMA), (72 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_DMA), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_Init), (98 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Init), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_MspInit), (2 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspInit), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_DeInit), (104 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DeInit), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_MspDeInit), (2 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspDeInit), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_Start), (454 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.TIM_CCxChannelCmd), (36 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.TIM_CCxChannelCmd), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_Stop), (214 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_Start_IT), (554 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_IT), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_Stop_IT), (230 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_IT), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA), (870 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_DMA), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.TIM_DMADelayPulseCplt), (106 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseCplt), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt), (56 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseHalfCplt), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_Stop_DMA), (286 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_DMA), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Init), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspInit), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_DeInit), (104 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_DeInit), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_MspDeInit), (2 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspDeInit), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_Start), (454 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_Stop), (214 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_Start_IT), (554 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_IT), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_IT), (230 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_IT), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA), (870 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_DMA), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_DMA), (286 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_DMA), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_Init), (98 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Init), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_MspInit), (2 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspInit), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_DeInit), (104 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_DeInit), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_MspDeInit), (2 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspDeInit), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_Start), (442 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_Stop), (184 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_Start_IT), (494 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_IT), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_Stop_IT), (220 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_IT), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA), (676 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_DMA), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.TIM_DMACaptureCplt), (118 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureCplt), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt), (56 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureHalfCplt), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_Stop_DMA), (284 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_DMA), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init), (92 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Init), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspInit), (2 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspInit), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_OnePulse_DeInit), (80 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_DeInit), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspDeInit), (2 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspDeInit), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start), (152 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop), (150 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start_IT), (168 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start_IT), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop_IT), (166 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop_IT), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_Encoder_Init), (182 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Init), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_Encoder_MspInit), (2 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspInit), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_Encoder_DeInit), (80 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_DeInit), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_Encoder_MspDeInit), (2 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspDeInit), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start), (188 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop), (174 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_IT), (230 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_IT), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_IT), (210 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_IT), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA), (528 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_DMA), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_DMA), (232 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_DMA), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IRQHandler), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureCallback), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DelayElapsedCallback), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedCallback), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedCallback), (2 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerCallback), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel), (770 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_ConfigChannel), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.TIM_OC2_SetConfig), (144 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.TIM_OC2_SetConfig), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel), (426 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_ConfigChannel), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.TIM_TI1_SetConfig), (154 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.TIM_TI1_SetConfig), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_ConfigChannel), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel), (612 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_ConfigChannel), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart), (28 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStart), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart), (452 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiWriteStart), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.TIM_DMATriggerCplt), (20 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerCplt), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt), (6 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerHalfCplt), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStop), (132 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStop), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart), (28 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStart), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart), (452 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiReadStart), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStop), (132 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStop), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_GenerateEvent), (36 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GenerateEvent), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_ConfigOCrefClear), (316 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigOCrefClear), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.TIM_ETR_SetConfig), (22 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.TIM_ETR_SetConfig), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource), (412 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigClockSource), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_ConfigTI1Input), (16 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigTI1Input), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.TIM_SlaveTimer_SetConfig), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro_IT), (88 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro_IT), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_ReadCapturedValue), (52 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ReadCapturedValue), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedHalfCpltCallback), (2 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedHalfCpltCallback), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_CaptureHalfCpltCallback), (2 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureHalfCpltCallback), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback), (2 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_TriggerHalfCpltCallback), (2 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerHalfCpltCallback), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_ErrorCallback), (2 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ErrorCallback), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_Base_GetState), (6 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_GetState), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_GetState), (6 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_GetState), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_GetState), (6 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_GetState), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_GetState), (6 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_GetState), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_OnePulse_GetState), (6 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_GetState), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_Encoder_GetState), (6 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_GetState), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_GetActiveChannel), (4 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GetActiveChannel), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_GetChannelState), (66 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GetChannelState), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.text.HAL_TIM_DMABurstState), (6 bytes).
    Removing stm32l4xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurstState), (8 bytes).
    Removing stm32l4xx_hal_tim.o(.rodata.cst16), (32 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text), (0 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init), (204 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Init), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspInit), (2 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspInit), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_DeInit), (80 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_DeInit), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspDeInit), (2 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspDeInit), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start), (206 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop), (66 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_IT), (214 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_IT), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_IT), (74 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_IT), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA), (288 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_DMA), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_DMA), (74 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_DMA), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start), (250 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop), (146 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_IT), (284 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_IT), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_IT), (230 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_IT), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA), (522 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_DMA), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.TIM_DMADelayPulseNCplt), (106 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.TIM_DMADelayPulseNCplt), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.TIM_DMAErrorCCxN), (70 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.TIM_DMAErrorCCxN), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_DMA), (192 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_DMA), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start), (250 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop), (146 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_IT), (284 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_IT), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_IT), (230 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_IT), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA), (522 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_DMA), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_DMA), (192 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_DMA), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start), (120 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop), (128 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start_IT), (136 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start_IT), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop_IT), (144 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop_IT), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent), (118 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_IT), (118 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_IT), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA), (154 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_DMA), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt), (12 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.TIMEx_DMACommutationCplt), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt), (12 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.TIMEx_DMACommutationHalfCplt), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_MasterConfigSynchronization), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigBreakDeadTime), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigBreakInput), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_RemapConfig), (104 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_RemapConfig), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_GroupChannel5), (48 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_GroupChannel5), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_CommutCallback), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutHalfCpltCallback), (2 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_CommutHalfCpltCallback), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_BreakCallback), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_Break2Callback), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_GetState), (6 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_GetState), (8 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_GetChannelNState), (34 bytes).
    Removing stm32l4xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_GetChannelNState), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text), (0 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Init), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_UART_MspInit), (2 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_MspInit), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_AdvFeatureConfig), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_SetConfig), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_CheckIdleState), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_HalfDuplex_Init), (104 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_Init), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_LIN_Init), (130 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_LIN_Init), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_MultiProcessor_Init), (128 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_Init), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_UART_DeInit), (60 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DeInit), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_UART_MspDeInit), (2 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_MspDeInit), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_UART_Transmit), (192 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_WaitOnFlagUntilTimeout), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_UART_Receive), (242 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_UART_Transmit_IT), (168 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit_IT), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.UART_TxISR_16BIT), (200 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_TxISR_16BIT), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.UART_TxISR_8BIT), (196 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_TxISR_8BIT), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_UART_Receive_IT), (174 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive_IT), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.UART_Start_Receive_IT), (362 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_Start_Receive_IT), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_UART_Transmit_DMA), (220 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit_DMA), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.UART_DMATransmitCplt), (176 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_DMATransmitCplt), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.UART_DMATxHalfCplt), (6 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_DMATxHalfCplt), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.UART_DMAError), (398 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_DMAError), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_UART_Receive_DMA), (482 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive_DMA), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.UART_Start_Receive_DMA), (326 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_Start_Receive_DMA), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_UART_DMAPause), (342 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAPause), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_UART_DMAResume), (330 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAResume), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_UART_DMAStop), (580 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAStop), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_UART_Abort), (506 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Abort), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_UART_AbortTransmit), (212 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmit), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_UART_AbortReceive), (386 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceive), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_UART_Abort_IT), (542 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_Abort_IT), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.UART_DMATxAbortCallback), (52 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_DMATxAbortCallback), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.UART_DMARxAbortCallback), (60 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_DMARxAbortCallback), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_UART_AbortCpltCallback), (2 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortCpltCallback), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_UART_AbortTransmit_IT), (238 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmit_IT), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.UART_DMATxOnlyAbortCallback), (16 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_DMATxOnlyAbortCallback), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_UART_AbortTransmitCpltCallback), (2 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmitCpltCallback), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_UART_AbortReceive_IT), (420 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceive_IT), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.UART_DMARxOnlyAbortCallback), (34 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_DMARxOnlyAbortCallback), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_UART_AbortReceiveCpltCallback), (2 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceiveCpltCallback), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_UART_IRQHandler), (1542 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_IRQHandler), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.UART_DMAAbortOnError), (16 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_DMAAbortOnError), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_UART_ErrorCallback), (2 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_ErrorCallback), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback), (2 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UARTEx_RxEventCallback), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_UART_TxCpltCallback), (2 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_TxCpltCallback), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_UART_TxHalfCpltCallback), (2 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_TxHalfCpltCallback), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_UART_RxCpltCallback), (2 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_RxCpltCallback), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_UART_RxHalfCpltCallback), (2 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_RxHalfCpltCallback), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_UART_ReceiverTimeout_Config), (28 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_ReceiverTimeout_Config), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_UART_EnableReceiverTimeout), (62 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_EnableReceiverTimeout), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_UART_DisableReceiverTimeout), (62 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_DisableReceiverTimeout), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_MultiProcessor_EnableMuteMode), (106 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_EnableMuteMode), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_MultiProcessor_DisableMuteMode), (106 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_DisableMuteMode), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_MultiProcessor_EnterMuteMode), (12 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_EnterMuteMode), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_HalfDuplex_EnableTransmitter), (188 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_EnableTransmitter), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_HalfDuplex_EnableReceiver), (188 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_EnableReceiver), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_LIN_SendBreak), (40 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_LIN_SendBreak), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_UART_GetState), (10 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_GetState), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.HAL_UART_GetError), (6 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.HAL_UART_GetError), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.UART_RxISR_16BIT), (438 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_RxISR_16BIT), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.UART_RxISR_8BIT), (438 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_RxISR_8BIT), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.UART_DMAReceiveCplt), (356 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_DMAReceiveCplt), (8 bytes).
    Removing stm32l4xx_hal_uart.o(.text.UART_DMARxHalfCplt), (26 bytes).
    Removing stm32l4xx_hal_uart.o(.ARM.exidx.text.UART_DMARxHalfCplt), (8 bytes).
    Removing stm32l4xx_hal_uart_ex.o(.text), (0 bytes).
    Removing stm32l4xx_hal_uart_ex.o(.text.HAL_RS485Ex_Init), (128 bytes).
    Removing stm32l4xx_hal_uart_ex.o(.ARM.exidx.text.HAL_RS485Ex_Init), (8 bytes).
    Removing stm32l4xx_hal_uart_ex.o(.text.HAL_UARTEx_WakeupCallback), (2 bytes).
    Removing stm32l4xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_WakeupCallback), (8 bytes).
    Removing stm32l4xx_hal_uart_ex.o(.text.HAL_UARTEx_EnableClockStopMode), (104 bytes).
    Removing stm32l4xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_EnableClockStopMode), (8 bytes).
    Removing stm32l4xx_hal_uart_ex.o(.text.HAL_UARTEx_DisableClockStopMode), (104 bytes).
    Removing stm32l4xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_DisableClockStopMode), (8 bytes).
    Removing stm32l4xx_hal_uart_ex.o(.text.HAL_MultiProcessorEx_AddressLength_Set), (44 bytes).
    Removing stm32l4xx_hal_uart_ex.o(.ARM.exidx.text.HAL_MultiProcessorEx_AddressLength_Set), (8 bytes).
    Removing stm32l4xx_hal_uart_ex.o(.text.HAL_UARTEx_StopModeWakeUpSourceConfig), (138 bytes).
    Removing stm32l4xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_StopModeWakeUpSourceConfig), (8 bytes).
    Removing stm32l4xx_hal_uart_ex.o(.text.HAL_UARTEx_EnableStopMode), (104 bytes).
    Removing stm32l4xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_EnableStopMode), (8 bytes).
    Removing stm32l4xx_hal_uart_ex.o(.text.HAL_UARTEx_DisableStopMode), (104 bytes).
    Removing stm32l4xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_DisableStopMode), (8 bytes).
    Removing stm32l4xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle), (446 bytes).
    Removing stm32l4xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_ReceiveToIdle), (8 bytes).
    Removing stm32l4xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle_IT), (166 bytes).
    Removing stm32l4xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_ReceiveToIdle_IT), (8 bytes).
    Removing stm32l4xx_hal_uart_ex.o(.text.HAL_UARTEx_ReceiveToIdle_DMA), (172 bytes).
    Removing stm32l4xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_ReceiveToIdle_DMA), (8 bytes).
    Removing stm32l4xx_hal_uart_ex.o(.text.HAL_UARTEx_GetRxEventType), (4 bytes).
    Removing stm32l4xx_hal_uart_ex.o(.ARM.exidx.text.HAL_UARTEx_GetRxEventType), (8 bytes).
    Removing system_stm32l4xx.o(.text), (0 bytes).
    Removing system_stm32l4xx.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32l4xx.o(.text.SystemCoreClockUpdate), (196 bytes).
    Removing system_stm32l4xx.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing croutine.o(.text), (0 bytes).
    Removing event_groups.o(.text), (0 bytes).
    Removing event_groups.o(.text.xEventGroupCreateStatic), (78 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreateStatic), (8 bytes).
    Removing event_groups.o(.text.xEventGroupCreate), (28 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreate), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSync), (252 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSync), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBits), (148 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupWaitBits), (304 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupWaitBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBits), (74 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupGetBitsFromISR), (28 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupDelete), (82 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupDelete), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetBitsCallback), (4 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback), (8 bytes).
    Removing event_groups.o(.text.vEventGroupClearBitsCallback), (72 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback), (8 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.text.xQueueGenericReset), (140 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.text.xQueueGenericCreateStatic), (214 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreateStatic), (8 bytes).
    Removing queue.o(.text.xQueueGenericCreate), (126 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.text.xQueueCreateMutex), (106 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.text.xQueueCreateMutexStatic), (154 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutexStatic), (8 bytes).
    Removing queue.o(.text.xQueueGenericSend), (560 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.prvUnlockQueue), (116 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (344 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (200 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueueReceive), (432 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.text.xQueueSemaphoreTake), (476 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (424 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (228 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (162 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (38 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (42 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (26 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (168 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.vQueueUnregisterQueue), (192 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueUnregisterQueue), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (30 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.text.vQueueAddToRegistry), (176 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueAddToRegistry), (8 bytes).
    Removing queue.o(.text.pcQueueGetName), (124 bytes).
    Removing queue.o(.ARM.exidx.text.pcQueueGetName), (8 bytes).
    Removing queue.o(.bss.xQueueRegistry), (64 bytes).
    Removing stream_buffer.o(.text), (0 bytes).
    Removing stream_buffer.o(.text.xStreamBufferGenericCreate), (158 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferGenericCreate), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferGenericCreateStatic), (194 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferGenericCreateStatic), (8 bytes).
    Removing stream_buffer.o(.text.vStreamBufferDelete), (50 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.vStreamBufferDelete), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReset), (114 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReset), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSetTriggerLevel), (42 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSetTriggerLevel), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSpacesAvailable), (42 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSpacesAvailable), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferBytesAvailable), (38 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferBytesAvailable), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSend), (324 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSend), (8 bytes).
    Removing stream_buffer.o(.text.prvWriteMessageToBuffer), (326 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvWriteMessageToBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSendFromISR), (170 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSendFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceive), (270 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceive), (8 bytes).
    Removing stream_buffer.o(.text.prvReadMessageFromBuffer), (354 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvReadMessageFromBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes), (202 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferNextMessageLengthBytes), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceiveFromISR), (154 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferIsEmpty), (34 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferIsEmpty), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferIsFull), (58 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferIsFull), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSendCompletedFromISR), (86 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSendCompletedFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR), (86 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveCompletedFromISR), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreateStatic), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (262 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.text.prvAddCurrentTaskToDelayedList), (126 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (40 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (58 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (258 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (314 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (152 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (196 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (32 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCount), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (18 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (38 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnEventList), (54 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (86 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.xTaskRemoveFromEventList), (116 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (130 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (54 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.text.vTaskInternalSetTimeOutState), (18 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.text.xTaskCheckForTimeOut), (162 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.text.vTaskMissedYield), (14 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.text.xTaskGetSchedulerState), (30 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.text.xTaskPriorityInherit), (172 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.text.xTaskPriorityDisinherit), (182 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.text.vTaskPriorityDisinheritAfterTimeout), (176 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (26 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.text.pvTaskIncrementMutexHeldCount), (24 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskNotifyTake), (106 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskNotifyWait), (144 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (292 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (314 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskNotifyGiveFromISR), (198 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskNotifyStateClear), (44 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskNotifyValueClear), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskNotifyValueClear), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing cmsis_os.o(.text), (0 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing cmsis_os.o(.text.osKernelRunning), (14 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osKernelRunning), (8 bytes).
    Removing cmsis_os.o(.text.osKernelSysTick), (16 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osKernelSysTick), (8 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osThreadCreate), (8 bytes).
    Removing cmsis_os.o(.text.osThreadGetId), (4 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing cmsis_os.o(.text.osThreadTerminate), (10 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing cmsis_os.o(.text.osThreadYield), (26 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing cmsis_os.o(.text.osThreadSetPriority), (20 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing cmsis_os.o(.text.osThreadGetPriority), (32 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing cmsis_os.o(.text.osDelay), (16 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing cmsis_os.o(.text.osTimerCreate), (4 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osTimerCreate), (8 bytes).
    Removing cmsis_os.o(.text.osTimerStart), (4 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing cmsis_os.o(.text.osTimerStop), (4 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing cmsis_os.o(.text.osTimerDelete), (4 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing cmsis_os.o(.text.osSignalSet), (92 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osSignalSet), (8 bytes).
    Removing cmsis_os.o(.text.osSignalWait), (68 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osSignalWait), (8 bytes).
    Removing cmsis_os.o(.text.osMutexCreate), (16 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osMutexCreate), (8 bytes).
    Removing cmsis_os.o(.text.osMutexWait), (86 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osMutexWait), (8 bytes).
    Removing cmsis_os.o(.text.osMutexRelease), (82 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing cmsis_os.o(.text.osMutexDelete), (22 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing cmsis_os.o(.text.osSemaphoreCreate), (80 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osSemaphoreCreate), (8 bytes).
    Removing cmsis_os.o(.text.osSemaphoreWait), (86 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osSemaphoreWait), (8 bytes).
    Removing cmsis_os.o(.text.osSemaphoreRelease), (82 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osSemaphoreRelease), (8 bytes).
    Removing cmsis_os.o(.text.osSemaphoreDelete), (22 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osSemaphoreDelete), (8 bytes).
    Removing cmsis_os.o(.text.osPoolCreate), (144 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osPoolCreate), (8 bytes).
    Removing cmsis_os.o(.text.osPoolAlloc), (262 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osPoolAlloc), (8 bytes).
    Removing cmsis_os.o(.text.osPoolCAlloc), (266 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osPoolCAlloc), (8 bytes).
    Removing cmsis_os.o(.text.osPoolFree), (56 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osPoolFree), (8 bytes).
    Removing cmsis_os.o(.text.osMessageCreate), (54 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osMessageCreate), (8 bytes).
    Removing cmsis_os.o(.text.osMessagePut), (90 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osMessagePut), (8 bytes).
    Removing cmsis_os.o(.text.osMessageGet), (126 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osMessageGet), (8 bytes).
    Removing cmsis_os.o(.text.osMailCreate), (98 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osMailCreate), (8 bytes).
    Removing cmsis_os.o(.text.osMailAlloc), (278 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osMailAlloc), (8 bytes).
    Removing cmsis_os.o(.text.osMailCAlloc), (332 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osMailCAlloc), (8 bytes).
    Removing cmsis_os.o(.text.osMailPut), (98 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osMailPut), (8 bytes).
    Removing cmsis_os.o(.text.osMailGet), (122 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osMailGet), (8 bytes).
    Removing cmsis_os.o(.text.osMailFree), (56 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osMailFree), (8 bytes).
    Removing cmsis_os.o(.text.osSystickHandler), (20 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osSystickHandler), (8 bytes).
    Removing cmsis_os.o(.text.osThreadSuspend), (10 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing cmsis_os.o(.text.osThreadResume), (52 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing cmsis_os.o(.text.osThreadSuspendAll), (10 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osThreadSuspendAll), (8 bytes).
    Removing cmsis_os.o(.text.osThreadResumeAll), (14 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osThreadResumeAll), (8 bytes).
    Removing cmsis_os.o(.text.osDelayUntil), (4 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing cmsis_os.o(.text.osAbortDelay), (4 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osAbortDelay), (8 bytes).
    Removing cmsis_os.o(.text.osThreadList), (4 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osThreadList), (8 bytes).
    Removing cmsis_os.o(.text.osMessagePeek), (52 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osMessagePeek), (8 bytes).
    Removing cmsis_os.o(.text.osMessageWaiting), (16 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osMessageWaiting), (8 bytes).
    Removing cmsis_os.o(.text.osMessageAvailableSpace), (4 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osMessageAvailableSpace), (8 bytes).
    Removing cmsis_os.o(.text.osMessageDelete), (22 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osMessageDelete), (8 bytes).
    Removing cmsis_os.o(.text.osRecursiveMutexCreate), (4 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osRecursiveMutexCreate), (8 bytes).
    Removing cmsis_os.o(.text.osRecursiveMutexRelease), (4 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osRecursiveMutexRelease), (8 bytes).
    Removing cmsis_os.o(.text.osRecursiveMutexWait), (4 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osRecursiveMutexWait), (8 bytes).
    Removing cmsis_os.o(.text.osSemaphoreGetCount), (4 bytes).
    Removing cmsis_os.o(.ARM.exidx.text.osSemaphoreGetCount), (8 bytes).
    Removing heap_4.o(.text), (0 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_4.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_4.o(.text.vPortGetHeapStats), (186 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortGetHeapStats), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.text.vPortSetupTimerInterrupt), (52 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (38 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing port.o(.text.vPortValidateInterruptPriority), (94 bytes).
    Removing port.o(.ARM.exidx.text.vPortValidateInterruptPriority), (8 bytes).
    Removing bus_voltage_sensor.o(.text), (0 bytes).
    Removing bus_voltage_sensor.o(.text.VBS_GetBusVoltage_d), (4 bytes).
    Removing bus_voltage_sensor.o(.ARM.exidx.text.VBS_GetBusVoltage_d), (8 bytes).
    Removing bus_voltage_sensor.o(.text.VBS_GetAvBusVoltage_d), (4 bytes).
    Removing bus_voltage_sensor.o(.ARM.exidx.text.VBS_GetAvBusVoltage_d), (8 bytes).
    Removing bus_voltage_sensor.o(.ARM.exidx.text.VBS_GetAvBusVoltage_V), (8 bytes).
    Removing bus_voltage_sensor.o(.text.VBS_CheckVbus), (4 bytes).
    Removing bus_voltage_sensor.o(.ARM.exidx.text.VBS_CheckVbus), (8 bytes).
    Removing circle_limitation.o(.text), (0 bytes).
    Removing circle_limitation.o(.ARM.exidx.text.Circle_Limitation), (8 bytes).
    Removing digital_output.o(.text), (0 bytes).
    Removing digital_output.o(.text.DOUT_SetOutputState), (44 bytes).
    Removing digital_output.o(.ARM.exidx.text.DOUT_SetOutputState), (8 bytes).
    Removing digital_output.o(.text.DOUT_GetOutputState), (4 bytes).
    Removing digital_output.o(.ARM.exidx.text.DOUT_GetOutputState), (8 bytes).
    Removing enc_align_ctrl.o(.text), (0 bytes).
    Removing enc_align_ctrl.o(.ARM.exidx.text.EAC_Init), (8 bytes).
    Removing enc_align_ctrl.o(.ARM.exidx.text.EAC_StartAlignment), (8 bytes).
    Removing enc_align_ctrl.o(.ARM.exidx.text.EAC_Exec), (8 bytes).
    Removing enc_align_ctrl.o(.ARM.exidx.text.EAC_IsAligned), (8 bytes).
    Removing enc_align_ctrl.o(.ARM.exidx.text.EAC_SetRestartState), (8 bytes).
    Removing enc_align_ctrl.o(.text.EAC_GetRestartState), (4 bytes).
    Removing enc_align_ctrl.o(.ARM.exidx.text.EAC_GetRestartState), (8 bytes).
    Removing encoder_speed_pos_fdbk.o(.text), (0 bytes).
    Removing encoder_speed_pos_fdbk.o(.ARM.exidx.text.ENC_Init), (8 bytes).
    Removing encoder_speed_pos_fdbk.o(.ARM.exidx.text.ENC_Clear), (8 bytes).
    Removing encoder_speed_pos_fdbk.o(.ARM.exidx.text.ENC_CalcAngle), (8 bytes).
    Removing encoder_speed_pos_fdbk.o(.ARM.exidx.text.ENC_CalcAvrgMecSpeedUnit), (8 bytes).
    Removing encoder_speed_pos_fdbk.o(.ARM.exidx.text.ENC_SetMecAngle), (8 bytes).
    Removing encoder_speed_pos_fdbk.o(.ARM.exidx.text.ENC_IRQHandler), (8 bytes).
    Removing trajectory_ctrl.o(.text), (0 bytes).
    Removing trajectory_ctrl.o(.ARM.exidx.text.TC_Init), (8 bytes).
    Removing trajectory_ctrl.o(.ARM.exidx.text.TC_MoveCommand), (8 bytes).
    Removing trajectory_ctrl.o(.ARM.exidx.text.TC_FollowCommand), (8 bytes).
    Removing trajectory_ctrl.o(.ARM.exidx.text.TC_PositionRegulation), (8 bytes).
    Removing trajectory_ctrl.o(.ARM.exidx.text.TC_MoveExecution), (8 bytes).
    Removing trajectory_ctrl.o(.text.TC_FollowExecution), (42 bytes).
    Removing trajectory_ctrl.o(.ARM.exidx.text.TC_FollowExecution), (8 bytes).
    Removing trajectory_ctrl.o(.text.TC_RampCompleted), (32 bytes).
    Removing trajectory_ctrl.o(.ARM.exidx.text.TC_RampCompleted), (8 bytes).
    Removing trajectory_ctrl.o(.ARM.exidx.text.TC_EncAlignmentCommand), (8 bytes).
    Removing trajectory_ctrl.o(.text.TC_EncoderReset), (66 bytes).
    Removing trajectory_ctrl.o(.ARM.exidx.text.TC_EncoderReset), (8 bytes).
    Removing trajectory_ctrl.o(.ARM.exidx.text.TC_GetCurrentPosition), (8 bytes).
    Removing trajectory_ctrl.o(.ARM.exidx.text.TC_GetTargetPosition), (8 bytes).
    Removing trajectory_ctrl.o(.ARM.exidx.text.TC_GetMoveDuration), (8 bytes).
    Removing trajectory_ctrl.o(.ARM.exidx.text.TC_GetControlPositionStatus), (8 bytes).
    Removing trajectory_ctrl.o(.ARM.exidx.text.TC_GetAlignmentStatus), (8 bytes).
    Removing trajectory_ctrl.o(.text.TC_IncTick), (8 bytes).
    Removing trajectory_ctrl.o(.ARM.exidx.text.TC_IncTick), (8 bytes).
    Removing ntc_temperature_sensor.o(.text), (0 bytes).
    Removing ntc_temperature_sensor.o(.ARM.exidx.text.NTC_SetFaultState), (8 bytes).
    Removing ntc_temperature_sensor.o(.ARM.exidx.text.NTC_Init), (8 bytes).
    Removing ntc_temperature_sensor.o(.ARM.exidx.text.NTC_Clear), (8 bytes).
    Removing ntc_temperature_sensor.o(.ARM.exidx.text.NTC_CalcAvTemp), (8 bytes).
    Removing ntc_temperature_sensor.o(.text.NTC_GetAvTemp_d), (4 bytes).
    Removing ntc_temperature_sensor.o(.ARM.exidx.text.NTC_GetAvTemp_d), (8 bytes).
    Removing ntc_temperature_sensor.o(.ARM.exidx.text.NTC_GetAvTemp_C), (8 bytes).
    Removing ntc_temperature_sensor.o(.text.NTC_CheckTemp), (4 bytes).
    Removing ntc_temperature_sensor.o(.ARM.exidx.text.NTC_CheckTemp), (8 bytes).
    Removing open_loop.o(.text), (0 bytes).
    Removing open_loop.o(.text.OL_Init), (8 bytes).
    Removing open_loop.o(.ARM.exidx.text.OL_Init), (8 bytes).
    Removing open_loop.o(.text.OL_VqdConditioning), (4 bytes).
    Removing open_loop.o(.ARM.exidx.text.OL_VqdConditioning), (8 bytes).
    Removing open_loop.o(.text.OL_UpdateVoltage), (4 bytes).
    Removing open_loop.o(.ARM.exidx.text.OL_UpdateVoltage), (8 bytes).
    Removing open_loop.o(.text.OL_GetVoltage), (6 bytes).
    Removing open_loop.o(.ARM.exidx.text.OL_GetVoltage), (8 bytes).
    Removing open_loop.o(.text.OL_Calc), (34 bytes).
    Removing open_loop.o(.ARM.exidx.text.OL_Calc), (8 bytes).
    Removing open_loop.o(.text.OL_VF), (4 bytes).
    Removing open_loop.o(.ARM.exidx.text.OL_VF), (8 bytes).
    Removing pid_regulator.o(.text), (0 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_HandleInit), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetKP), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetKI), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_GetKP), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_GetKI), (8 bytes).
    Removing pid_regulator.o(.text.PID_GetDefaultKP), (6 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_GetDefaultKP), (8 bytes).
    Removing pid_regulator.o(.text.PID_GetDefaultKI), (6 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_GetDefaultKI), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetIntegralTerm), (8 bytes).
    Removing pid_regulator.o(.text.PID_GetKPDivisor), (4 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_GetKPDivisor), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_GetKPDivisorPOW2), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetKPDivisorPOW2), (8 bytes).
    Removing pid_regulator.o(.text.PID_GetKIDivisor), (4 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_GetKIDivisor), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_GetKIDivisorPOW2), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetKIDivisorPOW2), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetUpperIntegralTermLimit), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetLowerIntegralTermLimit), (8 bytes).
    Removing pid_regulator.o(.text.PID_SetLowerOutputLimit), (4 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetLowerOutputLimit), (8 bytes).
    Removing pid_regulator.o(.text.PID_SetUpperOutputLimit), (4 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetUpperOutputLimit), (8 bytes).
    Removing pid_regulator.o(.text.PID_SetPrevError), (4 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetPrevError), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetKD), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_GetKD), (8 bytes).
    Removing pid_regulator.o(.text.PID_GetKDDivisor), (4 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_GetKDDivisor), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_GetKDDivisorPOW2), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetKDDivisorPOW2), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PI_Controller), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_Controller), (8 bytes).
    Removing pqd_motor_power_measurement.o(.text), (0 bytes).
    Removing pqd_motor_power_measurement.o(.ARM.exidx.text.PQD_CalcElMotorPower), (8 bytes).
    Removing pqd_motor_power_measurement.o(.ARM.exidx.text.PQD_Clear), (8 bytes).
    Removing pqd_motor_power_measurement.o(.ARM.exidx.text.PQD_GetAvrgElMotorPowerW), (8 bytes).
    Removing pwm_common.o(.text), (0 bytes).
    Removing pwm_common.o(.ARM.exidx.text.startTimers), (8 bytes).
    Removing pwm_common.o(.ARM.exidx.text.waitForPolarizationEnd), (8 bytes).
    Removing r_divider_bus_voltage_sensor.o(.text), (0 bytes).
    Removing r_divider_bus_voltage_sensor.o(.ARM.exidx.text.RVBS_Init), (8 bytes).
    Removing r_divider_bus_voltage_sensor.o(.ARM.exidx.text.RVBS_Clear), (8 bytes).
    Removing r_divider_bus_voltage_sensor.o(.ARM.exidx.text.RVBS_CalcAvVbus), (8 bytes).
    Removing r_divider_bus_voltage_sensor.o(.ARM.exidx.text.RVBS_CheckFaultState), (8 bytes).
    Removing ramp_ext_mngr.o(.text), (0 bytes).
    Removing ramp_ext_mngr.o(.ARM.exidx.text.REMNG_Init), (8 bytes).
    Removing ramp_ext_mngr.o(.text.REMNG_Calc), (44 bytes).
    Removing ramp_ext_mngr.o(.ARM.exidx.text.REMNG_Calc), (8 bytes).
    Removing ramp_ext_mngr.o(.text.REMNG_ExecRamp), (134 bytes).
    Removing ramp_ext_mngr.o(.ARM.exidx.text.REMNG_ExecRamp), (8 bytes).
    Removing ramp_ext_mngr.o(.text.getScalingFactor), (108 bytes).
    Removing ramp_ext_mngr.o(.ARM.exidx.text.getScalingFactor), (8 bytes).
    Removing ramp_ext_mngr.o(.text.REMNG_GetValue), (10 bytes).
    Removing ramp_ext_mngr.o(.ARM.exidx.text.REMNG_GetValue), (8 bytes).
    Removing ramp_ext_mngr.o(.text.REMNG_RampCompleted), (10 bytes).
    Removing ramp_ext_mngr.o(.ARM.exidx.text.REMNG_RampCompleted), (8 bytes).
    Removing ramp_ext_mngr.o(.text.REMNG_StopRamp), (8 bytes).
    Removing ramp_ext_mngr.o(.ARM.exidx.text.REMNG_StopRamp), (8 bytes).
    Removing revup_ctrl.o(.text), (0 bytes).
    Removing revup_ctrl.o(.text.RUC_Init), (102 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_Init), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_Clear), (132 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_Clear), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_OTF_Exec), (628 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_OTF_Exec), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_Exec), (108 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_Exec), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_IsAlignStageNow), (22 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_IsAlignStageNow), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_Completed), (10 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_Completed), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_Stop), (30 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_Stop), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_FirstAccelerationStageReached), (18 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_FirstAccelerationStageReached), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_SetPhaseDurationms), (12 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_SetPhaseDurationms), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_SetPhaseFinalMecSpeedUnit), (12 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_SetPhaseFinalMecSpeedUnit), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_SetPhaseFinalTorque), (12 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_SetPhaseFinalTorque), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_SetPhase), (20 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_SetPhase), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_GetPhaseDurationms), (12 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_GetPhaseDurationms), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_GetPhaseFinalMecSpeedUnit), (14 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_GetPhaseFinalMecSpeedUnit), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_GetPhaseFinalTorque), (14 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_GetPhaseFinalTorque), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_GetNumberOfPhases), (6 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_GetNumberOfPhases), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_GetPhase), (20 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_GetPhase), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_Get_SCLowsideOTF_Status), (6 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_Get_SCLowsideOTF_Status), (8 bytes).
    Removing speed_pos_fdbk.o(.text), (0 bytes).
    Removing speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetElAngle), (8 bytes).
    Removing speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetMecAngle), (8 bytes).
    Removing speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetAvrgMecSpeedUnit), (8 bytes).
    Removing speed_pos_fdbk.o(.text.SPD_GetElSpeedDpp), (6 bytes).
    Removing speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetElSpeedDpp), (8 bytes).
    Removing speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetInstElSpeedDpp), (8 bytes).
    Removing speed_pos_fdbk.o(.text.SPD_Check), (12 bytes).
    Removing speed_pos_fdbk.o(.ARM.exidx.text.SPD_Check), (8 bytes).
    Removing speed_pos_fdbk.o(.ARM.exidx.text.SPD_IsMecSpeedReliable), (8 bytes).
    Removing speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetS16Speed), (8 bytes).
    Removing speed_pos_fdbk.o(.text.SPD_GetElToMecRatio), (4 bytes).
    Removing speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetElToMecRatio), (8 bytes).
    Removing speed_pos_fdbk.o(.text.SPD_SetElToMecRatio), (4 bytes).
    Removing speed_pos_fdbk.o(.ARM.exidx.text.SPD_SetElToMecRatio), (8 bytes).
    Removing speed_torq_ctrl.o(.text), (0 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_Init), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_SetSpeedSensor), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_GetSpeedSensor), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_Clear), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_GetMecSpeedRefUnit), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_GetTorqueRef), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_SetControlMode), (8 bytes).
    Removing speed_torq_ctrl.o(.text.STC_GetControlMode), (4 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_GetControlMode), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_ExecRamp), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_StopRamp), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_CalcTorqueReference), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_GetMecSpeedRefUnitDefault), (8 bytes).
    Removing speed_torq_ctrl.o(.text.STC_GetMaxAppPositiveMecSpeedUnit), (4 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_GetMaxAppPositiveMecSpeedUnit), (8 bytes).
    Removing speed_torq_ctrl.o(.text.STC_GetMinAppNegativeMecSpeedUnit), (6 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_GetMinAppNegativeMecSpeedUnit), (8 bytes).
    Removing speed_torq_ctrl.o(.text.STC_RampCompleted), (10 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_RampCompleted), (8 bytes).
    Removing speed_torq_ctrl.o(.text.STC_StopSpeedRamp), (20 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_StopSpeedRamp), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_GetDefaultIqdref), (8 bytes).
    Removing speed_torq_ctrl.o(.text.STC_SetNominalCurrent), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_SetNominalCurrent), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_ForceSpeedReferenceToCurrentSpeed), (8 bytes).
    Removing virtual_speed_sensor.o(.text), (0 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_Init), (8 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_Clear), (8 bytes).
    Removing virtual_speed_sensor.o(.text.VSS_CalcElAngle), (170 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_CalcElAngle), (8 bytes).
    Removing virtual_speed_sensor.o(.text.VSS_CalcAvrgMecSpeedUnit), (144 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_CalcAvrgMecSpeedUnit), (8 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_SetMecAngle), (8 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_SetMecAcceleration), (8 bytes).
    Removing virtual_speed_sensor.o(.text.VSS_RampCompleted), (10 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_RampCompleted), (8 bytes).
    Removing virtual_speed_sensor.o(.text.VSS_GetLastRampFinalSpeed), (6 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_GetLastRampFinalSpeed), (8 bytes).
    Removing virtual_speed_sensor.o(.text.VSS_SetStartTransition), (34 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_SetStartTransition), (8 bytes).
    Removing virtual_speed_sensor.o(.text.VSS_IsTransitionOngoing), (16 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_IsTransitionOngoing), (8 bytes).
    Removing virtual_speed_sensor.o(.text.VSS_TransitionEnded), (6 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_TransitionEnded), (8 bytes).
    Removing virtual_speed_sensor.o(.text.VSS_SetCopyObserver), (8 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_SetCopyObserver), (8 bytes).
    Removing virtual_speed_sensor.o(.text.VSS_SetElAngle), (6 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_SetElAngle), (8 bytes).
    Removing r3_1_l4xx_pwm_curr_fdbk.o(.text), (0 bytes).
    Removing r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_Init), (8 bytes).
    Removing r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SetOffsetCalib), (8 bytes).
    Removing r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_GetOffsetCalib), (8 bytes).
    Removing r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_CurrentReadingCalibration), (8 bytes).
    Removing r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_HFCurrentsCalibrationAB), (8 bytes).
    Removing r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SetADCSampPointCalibration), (8 bytes).
    Removing r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SwitchOnPWM), (8 bytes).
    Removing r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SwitchOffPWM), (8 bytes).
    Removing r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_HFCurrentsCalibrationC), (8 bytes).
    Removing r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_GetPhaseCurrents), (8 bytes).
    Removing r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_GetPhaseCurrents_OVM), (632 bytes).
    Removing r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_GetPhaseCurrents_OVM), (8 bytes).
    Removing r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_TurnOnLowSides), (8 bytes).
    Removing r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_WriteTIMRegisters), (8 bytes).
    Removing r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SetADCSampPointSectX), (8 bytes).
    Removing r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointSectX_OVM), (132 bytes).
    Removing r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SetADCSampPointSectX_OVM), (8 bytes).
    Removing r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_TIMx_UP_IRQHandler), (8 bytes).
    Removing r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_RLDetectionModeEnable), (8 bytes).
    Removing r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_RLGetPhaseCurrents), (8 bytes).
    Removing r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_RLTurnOnLowSides), (8 bytes).
    Removing r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_RLSwitchOnPWM), (8 bytes).
    Removing r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_RLDetectionModeDisable), (8 bytes).
    Removing r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_RLDetectionModeSetDuty), (8 bytes).
    Removing r3_1_l4xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_RLTurnOnLowSidesAndStart), (8 bytes).
    Removing mcpa.o(.text), (0 bytes).
    Removing mcpa.o(.ARM.exidx.text.MCPA_dataLog), (8 bytes).
    Removing mcpa.o(.ARM.exidx.text.MCPA_flushDataLog), (8 bytes).
    Removing mcpa.o(.ARM.exidx.text.MCPA_cfgLog), (8 bytes).

1918 unused section(s) (total 85868 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/dczerorl2.s                0x00000000   Number         0  __dczerorl2.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/longlong.s                       0x00000000   Number         0  lludivv7m.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    aspep.c                                  0x00000000   Number         0  aspep.o ABSOLUTE
    bus_voltage_sensor.c                     0x00000000   Number         0  bus_voltage_sensor.o ABSOLUTE
    circle_limitation.c                      0x00000000   Number         0  circle_limitation.o ABSOLUTE
    cmsis_os.c                               0x00000000   Number         0  cmsis_os.o ABSOLUTE
    croutine.c                               0x00000000   Number         0  croutine.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    digital_output.c                         0x00000000   Number         0  digital_output.o ABSOLUTE
    enc_align_ctrl.c                         0x00000000   Number         0  enc_align_ctrl.o ABSOLUTE
    encoder_speed_pos_fdbk.c                 0x00000000   Number         0  encoder_speed_pos_fdbk.o ABSOLUTE
    event_groups.c                           0x00000000   Number         0  event_groups.o ABSOLUTE
    freertos.c                               0x00000000   Number         0  freertos.o ABSOLUTE
    heap_4.c                                 0x00000000   Number         0  heap_4.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    mc_api.c                                 0x00000000   Number         0  mc_api.o ABSOLUTE
    mc_app_hooks.c                           0x00000000   Number         0  mc_app_hooks.o ABSOLUTE
    mc_config.c                              0x00000000   Number         0  mc_config.o ABSOLUTE
    mc_configuration_registers.c             0x00000000   Number         0  mc_configuration_registers.o ABSOLUTE
    mc_interface.c                           0x00000000   Number         0  mc_interface.o ABSOLUTE
    mc_math.c                                0x00000000   Number         0  mc_math.o ABSOLUTE
    mc_parameters.c                          0x00000000   Number         0  mc_parameters.o ABSOLUTE
    mc_perf.c                                0x00000000   Number         0  mc_perf.o ABSOLUTE
    mc_tasks.c                               0x00000000   Number         0  mc_tasks.o ABSOLUTE
    mcp.c                                    0x00000000   Number         0  mcp.o ABSOLUTE
    mcp_config.c                             0x00000000   Number         0  mcp_config.o ABSOLUTE
    mcpa.c                                   0x00000000   Number         0  mcpa.o ABSOLUTE
    motorcontrol.c                           0x00000000   Number         0  motorcontrol.o ABSOLUTE
    ntc_temperature_sensor.c                 0x00000000   Number         0  ntc_temperature_sensor.o ABSOLUTE
    open_loop.c                              0x00000000   Number         0  open_loop.o ABSOLUTE
    pid_regulator.c                          0x00000000   Number         0  pid_regulator.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    pqd_motor_power_measurement.c            0x00000000   Number         0  pqd_motor_power_measurement.o ABSOLUTE
    pwm_common.c                             0x00000000   Number         0  pwm_common.o ABSOLUTE
    pwm_curr_fdbk.c                          0x00000000   Number         0  pwm_curr_fdbk.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    r3_1_l4xx_pwm_curr_fdbk.c                0x00000000   Number         0  r3_1_l4xx_pwm_curr_fdbk.o ABSOLUTE
    r_divider_bus_voltage_sensor.c           0x00000000   Number         0  r_divider_bus_voltage_sensor.o ABSOLUTE
    ramp_ext_mngr.c                          0x00000000   Number         0  ramp_ext_mngr.o ABSOLUTE
    register_interface.c                     0x00000000   Number         0  register_interface.o ABSOLUTE
    regular_conversion_manager.c             0x00000000   Number         0  regular_conversion_manager.o ABSOLUTE
    revup_ctrl.c                             0x00000000   Number         0  revup_ctrl.o ABSOLUTE
    speed_pos_fdbk.c                         0x00000000   Number         0  speed_pos_fdbk.o ABSOLUTE
    speed_torq_ctrl.c                        0x00000000   Number         0  speed_torq_ctrl.o ABSOLUTE
    startup_stm32l476xx.s                    0x00000000   Number         0  startup_stm32l476xx.o ABSOLUTE
    stm32l4xx_hal.c                          0x00000000   Number         0  stm32l4xx_hal.o ABSOLUTE
    stm32l4xx_hal_adc.c                      0x00000000   Number         0  stm32l4xx_hal_adc.o ABSOLUTE
    stm32l4xx_hal_adc_ex.c                   0x00000000   Number         0  stm32l4xx_hal_adc_ex.o ABSOLUTE
    stm32l4xx_hal_cortex.c                   0x00000000   Number         0  stm32l4xx_hal_cortex.o ABSOLUTE
    stm32l4xx_hal_dma.c                      0x00000000   Number         0  stm32l4xx_hal_dma.o ABSOLUTE
    stm32l4xx_hal_dma_ex.c                   0x00000000   Number         0  stm32l4xx_hal_dma_ex.o ABSOLUTE
    stm32l4xx_hal_exti.c                     0x00000000   Number         0  stm32l4xx_hal_exti.o ABSOLUTE
    stm32l4xx_hal_flash.c                    0x00000000   Number         0  stm32l4xx_hal_flash.o ABSOLUTE
    stm32l4xx_hal_flash_ex.c                 0x00000000   Number         0  stm32l4xx_hal_flash_ex.o ABSOLUTE
    stm32l4xx_hal_flash_ramfunc.c            0x00000000   Number         0  stm32l4xx_hal_flash_ramfunc.o ABSOLUTE
    stm32l4xx_hal_gpio.c                     0x00000000   Number         0  stm32l4xx_hal_gpio.o ABSOLUTE
    stm32l4xx_hal_i2c.c                      0x00000000   Number         0  stm32l4xx_hal_i2c.o ABSOLUTE
    stm32l4xx_hal_i2c_ex.c                   0x00000000   Number         0  stm32l4xx_hal_i2c_ex.o ABSOLUTE
    stm32l4xx_hal_msp.c                      0x00000000   Number         0  stm32l4xx_hal_msp.o ABSOLUTE
    stm32l4xx_hal_pwr.c                      0x00000000   Number         0  stm32l4xx_hal_pwr.o ABSOLUTE
    stm32l4xx_hal_pwr_ex.c                   0x00000000   Number         0  stm32l4xx_hal_pwr_ex.o ABSOLUTE
    stm32l4xx_hal_rcc.c                      0x00000000   Number         0  stm32l4xx_hal_rcc.o ABSOLUTE
    stm32l4xx_hal_rcc_ex.c                   0x00000000   Number         0  stm32l4xx_hal_rcc_ex.o ABSOLUTE
    stm32l4xx_hal_tim.c                      0x00000000   Number         0  stm32l4xx_hal_tim.o ABSOLUTE
    stm32l4xx_hal_tim_ex.c                   0x00000000   Number         0  stm32l4xx_hal_tim_ex.o ABSOLUTE
    stm32l4xx_hal_timebase_tim.c             0x00000000   Number         0  stm32l4xx_hal_timebase_tim.o ABSOLUTE
    stm32l4xx_hal_uart.c                     0x00000000   Number         0  stm32l4xx_hal_uart.o ABSOLUTE
    stm32l4xx_hal_uart_ex.c                  0x00000000   Number         0  stm32l4xx_hal_uart_ex.o ABSOLUTE
    stm32l4xx_it.c                           0x00000000   Number         0  stm32l4xx_it.o ABSOLUTE
    stm32l4xx_mc_it.c                        0x00000000   Number         0  stm32l4xx_mc_it.o ABSOLUTE
    stream_buffer.c                          0x00000000   Number         0  stream_buffer.o ABSOLUTE
    system_stm32l4xx.c                       0x00000000   Number         0  system_stm32l4xx.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    trajectory_ctrl.c                        0x00000000   Number         0  trajectory_ctrl.o ABSOLUTE
    usart_aspep_driver.c                     0x00000000   Number         0  usart_aspep_driver.o ABSOLUTE
    virtual_speed_sensor.c                   0x00000000   Number         0  virtual_speed_sensor.o ABSOLUTE
    RESET                                    0x08000000   Section      392  startup_stm32l476xx.o(RESET)
    !!!main                                  0x08000188   Section        8  __main.o(!!!main)
    !!!scatter                               0x08000190   Section       52  __scatter.o(!!!scatter)
    !!dczerorl2                              0x080001c4   Section       90  __dczerorl2.o(!!dczerorl2)
    !!handler_zi                             0x08000220   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x0800023c   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x0800023e   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x08000242   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x08000244   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x08000246   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x08000246   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x08000246   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x08000246   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x08000246   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x08000246   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x08000246   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08000248   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08000248   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08000248   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x0800024e   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x0800024e   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x08000252   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x08000252   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0800025a   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x0800025c   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x0800025c   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08000260   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    $v0                                      0x08000268   Number         0  startup_stm32l476xx.o(.text)
    .text                                    0x08000268   Section       64  startup_stm32l476xx.o(.text)
    .text                                    0x080002a8   Section      240  lludivv7m.o(.text)
    .text                                    0x08000398   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x08000422   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x08000486   Section       78  rt_memclr_w.o(.text)
    .text                                    0x080004d4   Section        0  heapauxi.o(.text)
    .text                                    0x080004da   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x08000524   Section        0  exit.o(.text)
    .text                                    0x08000538   Section        8  libspace.o(.text)
    .text                                    0x08000540   Section        0  sys_exit.o(.text)
    .text                                    0x0800054c   Section        2  use_no_semi.o(.text)
    .text                                    0x0800054e   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x08000550   Section        0  stm32l4xx_mc_it.o(.text.ADC1_2_IRQHandler)
    [Anonymous Symbol]                       0x08000564   Section        0  aspep.o(.text.ASPEP_HWDMAReset)
    [Anonymous Symbol]                       0x08000584   Section        0  aspep.o(.text.ASPEP_HWDataReceivedIT)
    [Anonymous Symbol]                       0x0800062c   Section        0  aspep.o(.text.ASPEP_HWDataTransmittedIT)
    [Anonymous Symbol]                       0x080006dc   Section        0  aspep.o(.text.ASPEP_RXframeProcess)
    ASPEP_TXframeProcess                     0x08000ca5   Thumb Code   232  aspep.o(.text.ASPEP_TXframeProcess)
    [Anonymous Symbol]                       0x08000ca4   Section        0  aspep.o(.text.ASPEP_TXframeProcess)
    [Anonymous Symbol]                       0x08000d8c   Section        0  aspep.o(.text.ASPEP_getBuffer)
    [Anonymous Symbol]                       0x08000de8   Section        0  aspep.o(.text.ASPEP_sendPacket)
    [Anonymous Symbol]                       0x08000e38   Section        0  aspep.o(.text.ASPEP_start)
    [Anonymous Symbol]                       0x08000e60   Section        0  circle_limitation.o(.text.Circle_Limitation)
    [Anonymous Symbol]                       0x08000eb0   Section        0  stm32l4xx_mc_it.o(.text.DMA1_Channel6_IRQHandler)
    [Anonymous Symbol]                       0x08000ed0   Section        0  enc_align_ctrl.o(.text.EAC_Exec)
    [Anonymous Symbol]                       0x08000f00   Section        0  enc_align_ctrl.o(.text.EAC_Init)
    [Anonymous Symbol]                       0x08000f0c   Section        0  enc_align_ctrl.o(.text.EAC_IsAligned)
    [Anonymous Symbol]                       0x08000f10   Section        0  enc_align_ctrl.o(.text.EAC_SetRestartState)
    [Anonymous Symbol]                       0x08000f14   Section        0  enc_align_ctrl.o(.text.EAC_StartAlignment)
    [Anonymous Symbol]                       0x08000f68   Section        0  encoder_speed_pos_fdbk.o(.text.ENC_CalcAngle)
    [Anonymous Symbol]                       0x08000f94   Section        0  encoder_speed_pos_fdbk.o(.text.ENC_CalcAvrgMecSpeedUnit)
    [Anonymous Symbol]                       0x08001130   Section        0  encoder_speed_pos_fdbk.o(.text.ENC_Clear)
    [Anonymous Symbol]                       0x0800114c   Section        0  encoder_speed_pos_fdbk.o(.text.ENC_IRQHandler)
    [Anonymous Symbol]                       0x0800115c   Section        0  encoder_speed_pos_fdbk.o(.text.ENC_Init)
    [Anonymous Symbol]                       0x080011d4   Section        0  encoder_speed_pos_fdbk.o(.text.ENC_SetMecAngle)
    [Anonymous Symbol]                       0x080011fc   Section        0  stm32l4xx_mc_it.o(.text.EXTI15_10_IRQHandler)
    [Anonymous Symbol]                       0x08001218   Section        0  main.o(.text.Error_Handler)
    [Anonymous Symbol]                       0x08001224   Section        0  mc_tasks.o(.text.FOC_CalcCurrRef)
    [Anonymous Symbol]                       0x08001254   Section        0  mc_tasks.o(.text.FOC_Clear)
    [Anonymous Symbol]                       0x080012c8   Section        0  mc_tasks.o(.text.FOC_InitAdditionalMethods)
    [Anonymous Symbol]                       0x080012cc   Section        0  stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_DisableInjectedQueue)
    [Anonymous Symbol]                       0x080012f8   Section        0  stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConfigChannel)
    [Anonymous Symbol]                       0x08001744   Section        0  stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeConfigChannel)
    [Anonymous Symbol]                       0x08001814   Section        0  stm32l4xx_hal_adc.o(.text.HAL_ADC_ConfigChannel)
    [Anonymous Symbol]                       0x08001b94   Section        0  stm32l4xx_hal_adc.o(.text.HAL_ADC_Init)
    [Anonymous Symbol]                       0x08001da4   Section        0  stm32l4xx_hal_msp.o(.text.HAL_ADC_MspInit)
    [Anonymous Symbol]                       0x08001e7c   Section        0  stm32l4xx_hal_dma.o(.text.HAL_DMA_Init)
    [Anonymous Symbol]                       0x08001f48   Section        0  stm32l4xx_hal_gpio.o(.text.HAL_GPIO_Init)
    [Anonymous Symbol]                       0x08002158   Section        0  stm32l4xx_hal_gpio.o(.text.HAL_GPIO_WritePin)
    [Anonymous Symbol]                       0x08002164   Section        0  stm32l4xx_hal.o(.text.HAL_GetTick)
    [Anonymous Symbol]                       0x08002170   Section        0  stm32l4xx_hal.o(.text.HAL_IncTick)
    [Anonymous Symbol]                       0x0800218c   Section        0  stm32l4xx_hal.o(.text.HAL_Init)
    [Anonymous Symbol]                       0x080021bc   Section        0  stm32l4xx_hal_timebase_tim.o(.text.HAL_InitTick)
    [Anonymous Symbol]                       0x08002278   Section        0  stm32l4xx_hal_msp.o(.text.HAL_MspInit)
    [Anonymous Symbol]                       0x080022b4   Section        0  stm32l4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x080022d4   Section        0  stm32l4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority)
    [Anonymous Symbol]                       0x0800232c   Section        0  stm32l4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping)
    [Anonymous Symbol]                       0x0800234c   Section        0  stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling)
    [Anonymous Symbol]                       0x080023d8   Section        0  stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange)
    [Anonymous Symbol]                       0x080023e8   Section        0  stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig)
    [Anonymous Symbol]                       0x080027cc   Section        0  stm32l4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    [Anonymous Symbol]                       0x08002a48   Section        0  stm32l4xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig)
    [Anonymous Symbol]                       0x08002a8c   Section        0  stm32l4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq)
    [Anonymous Symbol]                       0x08002a98   Section        0  stm32l4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq)
    [Anonymous Symbol]                       0x08002ac4   Section        0  stm32l4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq)
    [Anonymous Symbol]                       0x08002af0   Section        0  stm32l4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq)
    [Anonymous Symbol]                       0x08002bb4   Section        0  stm32l4xx_hal_rcc.o(.text.HAL_RCC_OscConfig)
    [Anonymous Symbol]                       0x08003328   Section        0  stm32l4xx_hal_cortex.o(.text.HAL_SYSTICK_Config)
    [Anonymous Symbol]                       0x08003354   Section        0  stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_Break2Callback)
    [Anonymous Symbol]                       0x08003358   Section        0  stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback)
    [Anonymous Symbol]                       0x0800335c   Section        0  stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback)
    [Anonymous Symbol]                       0x08003360   Section        0  stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigBreakDeadTime)
    [Anonymous Symbol]                       0x08003404   Section        0  stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigBreakInput)
    [Anonymous Symbol]                       0x0800353c   Section        0  stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_MasterConfigSynchronization)
    [Anonymous Symbol]                       0x080035fc   Section        0  stm32l4xx_hal_tim.o(.text.HAL_TIM_Base_Init)
    [Anonymous Symbol]                       0x08003660   Section        0  stm32l4xx_hal_msp.o(.text.HAL_TIM_Base_MspInit)
    [Anonymous Symbol]                       0x080036cc   Section        0  stm32l4xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT)
    [Anonymous Symbol]                       0x08003774   Section        0  stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback)
    [Anonymous Symbol]                       0x08003778   Section        0  stm32l4xx_hal_tim.o(.text.HAL_TIM_IRQHandler)
    [Anonymous Symbol]                       0x080038e4   Section        0  stm32l4xx_hal_msp.o(.text.HAL_TIM_MspPostInit)
    [Anonymous Symbol]                       0x08003938   Section        0  stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback)
    [Anonymous Symbol]                       0x0800393c   Section        0  stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel)
    [Anonymous Symbol]                       0x08003cd4   Section        0  stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_Init)
    [Anonymous Symbol]                       0x08003d38   Section        0  stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_MspInit)
    [Anonymous Symbol]                       0x08003d3c   Section        0  stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback)
    [Anonymous Symbol]                       0x08003d40   Section        0  main.o(.text.HAL_TIM_PeriodElapsedCallback)
    [Anonymous Symbol]                       0x08003d54   Section        0  stm32l4xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro)
    [Anonymous Symbol]                       0x08003dac   Section        0  stm32l4xx_hal_tim.o(.text.HAL_TIM_TriggerCallback)
    [Anonymous Symbol]                       0x08003db0   Section        0  stm32l4xx_hal_uart.o(.text.HAL_UART_Init)
    [Anonymous Symbol]                       0x08003e10   Section        0  stm32l4xx_hal_msp.o(.text.HAL_UART_MspInit)
    [Anonymous Symbol]                       0x08003f8c   Section        0  stm32l4xx_mc_it.o(.text.HardFault_Handler)
    [Anonymous Symbol]                       0x08003f94   Section        0  mc_interface.o(.text.MCI_Clear_Iqdref)
    [Anonymous Symbol]                       0x08003fa4   Section        0  mc_interface.o(.text.MCI_Clear_PerfMeasure)
    [Anonymous Symbol]                       0x08003fac   Section        0  mc_interface.o(.text.MCI_ExecBufferedCommands)
    [Anonymous Symbol]                       0x08004034   Section        0  mc_interface.o(.text.MCI_ExecPositionCommand)
    [Anonymous Symbol]                       0x080040a8   Section        0  mc_interface.o(.text.MCI_ExecSpeedRamp)
    [Anonymous Symbol]                       0x080040b8   Section        0  mc_interface.o(.text.MCI_ExecTorqueRamp)
    [Anonymous Symbol]                       0x080040c8   Section        0  mc_interface.o(.text.MCI_FaultAcknowledged)
    [Anonymous Symbol]                       0x080040f4   Section        0  mc_interface.o(.text.MCI_FaultProcessing)
    [Anonymous Symbol]                       0x08004108   Section        0  mc_interface.o(.text.MCI_GetAvrgMecSpeedUnit)
    [Anonymous Symbol]                       0x08004118   Section        0  mc_interface.o(.text.MCI_GetControlMode)
    [Anonymous Symbol]                       0x08004120   Section        0  mc_interface.o(.text.MCI_GetCurrentFaults)
    [Anonymous Symbol]                       0x08004124   Section        0  mc_interface.o(.text.MCI_GetCurrentPosition)
    [Anonymous Symbol]                       0x0800412c   Section        0  mc_interface.o(.text.MCI_GetFaultState)
    [Anonymous Symbol]                       0x08004138   Section        0  mc_interface.o(.text.MCI_GetIab)
    [Anonymous Symbol]                       0x08004140   Section        0  mc_interface.o(.text.MCI_GetIalphabeta)
    [Anonymous Symbol]                       0x08004148   Section        0  mc_interface.o(.text.MCI_GetIqd)
    [Anonymous Symbol]                       0x08004150   Section        0  mc_interface.o(.text.MCI_GetIqdref)
    [Anonymous Symbol]                       0x08004158   Section        0  mc_interface.o(.text.MCI_GetLastRampFinalDuration)
    [Anonymous Symbol]                       0x0800415c   Section        0  mc_interface.o(.text.MCI_GetLastRampFinalSpeed)
    [Anonymous Symbol]                       0x08004164   Section        0  mc_interface.o(.text.MCI_GetLastRampFinalTorque)
    [Anonymous Symbol]                       0x0800416c   Section        0  mc_interface.o(.text.MCI_GetMecSpeedRefUnit)
    [Anonymous Symbol]                       0x08004174   Section        0  mc_interface.o(.text.MCI_GetOccurredFaults)
    [Anonymous Symbol]                       0x08004178   Section        0  mc_interface.o(.text.MCI_GetSTMState)
    [Anonymous Symbol]                       0x08004180   Section        0  mc_interface.o(.text.MCI_GetTeref)
    [Anonymous Symbol]                       0x08004188   Section        0  mc_interface.o(.text.MCI_GetValphabeta)
    [Anonymous Symbol]                       0x08004190   Section        0  mc_interface.o(.text.MCI_GetVqd)
    [Anonymous Symbol]                       0x08004198   Section        0  mc_interface.o(.text.MCI_Init)
    [Anonymous Symbol]                       0x080041b4   Section        0  mc_interface.o(.text.MCI_SetCurrentReferences)
    [Anonymous Symbol]                       0x080041c8   Section        0  mc_interface.o(.text.MCI_StartMotor)
    [Anonymous Symbol]                       0x080041f4   Section        0  mc_interface.o(.text.MCI_StartWithPolarizationMotor)
    [Anonymous Symbol]                       0x08004230   Section        0  mc_interface.o(.text.MCI_StopMotor)
    [Anonymous Symbol]                       0x08004278   Section        0  mc_interface.o(.text.MCI_StopRamp)
    [Anonymous Symbol]                       0x08004280   Section        0  mc_math.o(.text.MCM_Clarke)
    [Anonymous Symbol]                       0x080042c8   Section        0  mc_math.o(.text.MCM_Park)
    [Anonymous Symbol]                       0x08004344   Section        0  mc_math.o(.text.MCM_Rev_Park)
    [Anonymous Symbol]                       0x0800436c   Section        0  mc_math.o(.text.MCM_Sqrt)
    [Anonymous Symbol]                       0x08004458   Section        0  mc_math.o(.text.MCM_Trig_Functions)
    [Anonymous Symbol]                       0x080044e8   Section        0  mcpa.o(.text.MCPA_cfgLog)
    [Anonymous Symbol]                       0x0800460c   Section        0  mcpa.o(.text.MCPA_dataLog)
    [Anonymous Symbol]                       0x080048ec   Section        0  mcpa.o(.text.MCPA_flushDataLog)
    [Anonymous Symbol]                       0x08004998   Section        0  mcp.o(.text.MCP_ReceivedPacket)
    [Anonymous Symbol]                       0x08004c94   Section        0  mc_app_hooks.o(.text.MC_APP_BootHook)
    [Anonymous Symbol]                       0x08004c98   Section        0  mc_app_hooks.o(.text.MC_APP_PostMediumFrequencyHook_M1)
    [Anonymous Symbol]                       0x08004c9c   Section        0  mc_perf.o(.text.MC_BG_Perf_Measure_Start)
    [Anonymous Symbol]                       0x08004cb8   Section        0  mc_perf.o(.text.MC_BG_Perf_Measure_Stop)
    [Anonymous Symbol]                       0x08004d08   Section        0  mc_api.o(.text.MC_GetSTMStateMotor1)
    [Anonymous Symbol]                       0x08004d18   Section        0  mc_perf.o(.text.MC_Perf_Clear)
    [Anonymous Symbol]                       0x08004d30   Section        0  mc_perf.o(.text.MC_Perf_GetCPU_Load)
    [Anonymous Symbol]                       0x08004d8c   Section        0  mc_perf.o(.text.MC_Perf_GetMaxCPU_Load)
    [Anonymous Symbol]                       0x08004de8   Section        0  mc_perf.o(.text.MC_Perf_GetMinCPU_Load)
    [Anonymous Symbol]                       0x08004e60   Section        0  mc_perf.o(.text.MC_Perf_Measure_Init)
    [Anonymous Symbol]                       0x08004ea4   Section        0  mc_perf.o(.text.MC_Perf_Measure_Start)
    [Anonymous Symbol]                       0x08004eb8   Section        0  mc_perf.o(.text.MC_Perf_Measure_Stop)
    [Anonymous Symbol]                       0x08004ef8   Section        0  mc_api.o(.text.MC_ProfilerCommand)
    [Anonymous Symbol]                       0x08004efc   Section        0  mc_tasks.o(.text.MC_RunMotorControlTasks)
    [Anonymous Symbol]                       0x08004f10   Section        0  mc_tasks.o(.text.MC_Scheduler)
    [Anonymous Symbol]                       0x08004f90   Section        0  mc_api.o(.text.MC_StartMotor1)
    [Anonymous Symbol]                       0x08004fa0   Section        0  mc_api.o(.text.MC_StopMotor1)
    [Anonymous Symbol]                       0x08004fb0   Section        0  mc_tasks.o(.text.MCboot)
    [Anonymous Symbol]                       0x08005150   Section        0  motorcontrol.o(.text.MX_MotorControl_Init)
    [Anonymous Symbol]                       0x08005168   Section        0  ntc_temperature_sensor.o(.text.NTC_CalcAvTemp)
    [Anonymous Symbol]                       0x0800519c   Section        0  ntc_temperature_sensor.o(.text.NTC_Clear)
    [Anonymous Symbol]                       0x080051a4   Section        0  ntc_temperature_sensor.o(.text.NTC_GetAvTemp_C)
    [Anonymous Symbol]                       0x080051c8   Section        0  ntc_temperature_sensor.o(.text.NTC_Init)
    [Anonymous Symbol]                       0x080051dc   Section        0  ntc_temperature_sensor.o(.text.NTC_SetFaultState)
    [Anonymous Symbol]                       0x080051f4   Section        0  pid_regulator.o(.text.PID_Controller)
    [Anonymous Symbol]                       0x08005238   Section        0  pid_regulator.o(.text.PID_GetKD)
    [Anonymous Symbol]                       0x08005240   Section        0  pid_regulator.o(.text.PID_GetKDDivisorPOW2)
    [Anonymous Symbol]                       0x08005244   Section        0  pid_regulator.o(.text.PID_GetKI)
    [Anonymous Symbol]                       0x0800524c   Section        0  pid_regulator.o(.text.PID_GetKIDivisorPOW2)
    [Anonymous Symbol]                       0x08005250   Section        0  pid_regulator.o(.text.PID_GetKP)
    [Anonymous Symbol]                       0x08005258   Section        0  pid_regulator.o(.text.PID_GetKPDivisorPOW2)
    [Anonymous Symbol]                       0x0800525c   Section        0  pid_regulator.o(.text.PID_HandleInit)
    [Anonymous Symbol]                       0x0800526c   Section        0  pid_regulator.o(.text.PID_SetIntegralTerm)
    [Anonymous Symbol]                       0x08005270   Section        0  pid_regulator.o(.text.PID_SetKD)
    [Anonymous Symbol]                       0x08005274   Section        0  pid_regulator.o(.text.PID_SetKDDivisorPOW2)
    [Anonymous Symbol]                       0x08005280   Section        0  pid_regulator.o(.text.PID_SetKI)
    [Anonymous Symbol]                       0x08005284   Section        0  pid_regulator.o(.text.PID_SetKIDivisorPOW2)
    [Anonymous Symbol]                       0x080052b8   Section        0  pid_regulator.o(.text.PID_SetKP)
    [Anonymous Symbol]                       0x080052bc   Section        0  pid_regulator.o(.text.PID_SetKPDivisorPOW2)
    [Anonymous Symbol]                       0x080052c8   Section        0  pid_regulator.o(.text.PID_SetLowerIntegralTermLimit)
    [Anonymous Symbol]                       0x080052cc   Section        0  pid_regulator.o(.text.PID_SetUpperIntegralTermLimit)
    [Anonymous Symbol]                       0x080052d0   Section        0  pid_regulator.o(.text.PI_Controller)
    [Anonymous Symbol]                       0x08005360   Section        0  pqd_motor_power_measurement.o(.text.PQD_CalcElMotorPower)
    [Anonymous Symbol]                       0x08005388   Section        0  pqd_motor_power_measurement.o(.text.PQD_Clear)
    [Anonymous Symbol]                       0x08005390   Section        0  pqd_motor_power_measurement.o(.text.PQD_GetAvrgElMotorPowerW)
    [Anonymous Symbol]                       0x080053c4   Section        0  pwm_curr_fdbk.o(.text.PWMC_CurrentReadingCalibr)
    [Anonymous Symbol]                       0x08005400   Section        0  pwm_curr_fdbk.o(.text.PWMC_DP_Handler)
    [Anonymous Symbol]                       0x08005444   Section        0  pwm_curr_fdbk.o(.text.PWMC_GetPhaseCurrents)
    [Anonymous Symbol]                       0x08005448   Section        0  pwm_curr_fdbk.o(.text.PWMC_IsFaultOccurred)
    [Anonymous Symbol]                       0x08005480   Section        0  pwm_curr_fdbk.o(.text.PWMC_OVP_Handler)
    [Anonymous Symbol]                       0x0800549c   Section        0  pwm_curr_fdbk.o(.text.PWMC_SetPhaseVoltage)
    [Anonymous Symbol]                       0x080056d0   Section        0  pwm_curr_fdbk.o(.text.PWMC_SwitchOffPWM)
    [Anonymous Symbol]                       0x080056d4   Section        0  pwm_curr_fdbk.o(.text.PWMC_SwitchOnPWM)
    [Anonymous Symbol]                       0x080056e0   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x08005740   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x0800575c   Section        0  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration)
    [Anonymous Symbol]                       0x0800588c   Section        0  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_GetOffsetCalib)
    [Anonymous Symbol]                       0x0800589c   Section        0  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_GetPhaseCurrents)
    [Anonymous Symbol]                       0x080059bc   Section        0  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_HFCurrentsCalibrationAB)
    [Anonymous Symbol]                       0x08005a00   Section        0  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_HFCurrentsCalibrationC)
    [Anonymous Symbol]                       0x08005a38   Section        0  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_Init)
    [Anonymous Symbol]                       0x08005b6c   Section        0  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLDetectionModeDisable)
    [Anonymous Symbol]                       0x08005cdc   Section        0  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLDetectionModeEnable)
    [Anonymous Symbol]                       0x08005db0   Section        0  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLDetectionModeSetDuty)
    R3_1_RLGetPhaseCurrents                  0x08005de9   Thumb Code    58  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLGetPhaseCurrents)
    [Anonymous Symbol]                       0x08005de8   Section        0  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLGetPhaseCurrents)
    R3_1_RLSwitchOnPWM                       0x08005e25   Thumb Code   234  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLSwitchOnPWM)
    [Anonymous Symbol]                       0x08005e24   Section        0  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLSwitchOnPWM)
    R3_1_RLTurnOnLowSides                    0x08005f11   Thumb Code    96  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLTurnOnLowSides)
    [Anonymous Symbol]                       0x08005f10   Section        0  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLTurnOnLowSides)
    [Anonymous Symbol]                       0x08005f70   Section        0  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLTurnOnLowSidesAndStart)
    [Anonymous Symbol]                       0x08006014   Section        0  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointCalibration)
    [Anonymous Symbol]                       0x08006030   Section        0  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointSectX)
    [Anonymous Symbol]                       0x080060a0   Section        0  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_SetOffsetCalib)
    [Anonymous Symbol]                       0x080060b8   Section        0  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOffPWM)
    [Anonymous Symbol]                       0x0800612c   Section        0  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOnPWM)
    [Anonymous Symbol]                       0x080061d4   Section        0  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_TIMx_UP_IRQHandler)
    [Anonymous Symbol]                       0x0800621c   Section        0  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_TurnOnLowSides)
    [Anonymous Symbol]                       0x08006284   Section        0  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_WriteTIMRegisters)
    RCCEx_PLLSAI1_Config                     0x080062bd   Thumb Code   366  stm32l4xx_hal_rcc_ex.o(.text.RCCEx_PLLSAI1_Config)
    [Anonymous Symbol]                       0x080062bc   Section        0  stm32l4xx_hal_rcc_ex.o(.text.RCCEx_PLLSAI1_Config)
    RCCEx_PLLSAI2_Config                     0x0800642d   Thumb Code   326  stm32l4xx_hal_rcc_ex.o(.text.RCCEx_PLLSAI2_Config)
    [Anonymous Symbol]                       0x0800642c   Section        0  stm32l4xx_hal_rcc_ex.o(.text.RCCEx_PLLSAI2_Config)
    [Anonymous Symbol]                       0x08006574   Section        0  regular_conversion_manager.o(.text.RCM_ExecRegularConv)
    [Anonymous Symbol]                       0x080065f4   Section        0  regular_conversion_manager.o(.text.RCM_ExecUserConv)
    [Anonymous Symbol]                       0x080066ac   Section        0  regular_conversion_manager.o(.text.RCM_RegisterRegConv)
    [Anonymous Symbol]                       0x0800680c   Section        0  ramp_ext_mngr.o(.text.REMNG_Init)
    [Anonymous Symbol]                       0x0800681c   Section        0  register_interface.o(.text.RI_GetIDSize)
    [Anonymous Symbol]                       0x0800683c   Section        0  register_interface.o(.text.RI_GetPtrReg)
    [Anonymous Symbol]                       0x08006984   Section        0  register_interface.o(.text.RI_GetRegisterGlobal)
    [Anonymous Symbol]                       0x08006bcc   Section        0  register_interface.o(.text.RI_GetRegisterMotor1)
    [Anonymous Symbol]                       0x08007348   Section        0  register_interface.o(.text.RI_SetRegisterGlobal)
    [Anonymous Symbol]                       0x08007470   Section        0  register_interface.o(.text.RI_SetRegisterMotor1)
    [Anonymous Symbol]                       0x08007a84   Section        0  r_divider_bus_voltage_sensor.o(.text.RVBS_CalcAvVbus)
    [Anonymous Symbol]                       0x08007b30   Section        0  r_divider_bus_voltage_sensor.o(.text.RVBS_CheckFaultState)
    [Anonymous Symbol]                       0x08007b80   Section        0  r_divider_bus_voltage_sensor.o(.text.RVBS_Clear)
    [Anonymous Symbol]                       0x08007be0   Section        0  r_divider_bus_voltage_sensor.o(.text.RVBS_Init)
    [Anonymous Symbol]                       0x08007be4   Section        0  speed_pos_fdbk.o(.text.SPD_GetAvrgMecSpeedUnit)
    [Anonymous Symbol]                       0x08007bec   Section        0  speed_pos_fdbk.o(.text.SPD_GetElAngle)
    [Anonymous Symbol]                       0x08007bf4   Section        0  speed_pos_fdbk.o(.text.SPD_GetInstElSpeedDpp)
    [Anonymous Symbol]                       0x08007bfc   Section        0  speed_pos_fdbk.o(.text.SPD_GetMecAngle)
    [Anonymous Symbol]                       0x08007c00   Section        0  speed_pos_fdbk.o(.text.SPD_GetS16Speed)
    [Anonymous Symbol]                       0x08007c14   Section        0  speed_pos_fdbk.o(.text.SPD_IsMecSpeedReliable)
    [Anonymous Symbol]                       0x08007c6c   Section        0  speed_torq_ctrl.o(.text.STC_CalcTorqueReference)
    [Anonymous Symbol]                       0x08007cc0   Section        0  speed_torq_ctrl.o(.text.STC_Clear)
    [Anonymous Symbol]                       0x08007cd0   Section        0  speed_torq_ctrl.o(.text.STC_ExecRamp)
    [Anonymous Symbol]                       0x08007d6c   Section        0  speed_torq_ctrl.o(.text.STC_ForceSpeedReferenceToCurrentSpeed)
    [Anonymous Symbol]                       0x08007d7c   Section        0  speed_torq_ctrl.o(.text.STC_GetDefaultIqdref)
    [Anonymous Symbol]                       0x08007d84   Section        0  speed_torq_ctrl.o(.text.STC_GetMecSpeedRefUnit)
    [Anonymous Symbol]                       0x08007d8c   Section        0  speed_torq_ctrl.o(.text.STC_GetMecSpeedRefUnitDefault)
    [Anonymous Symbol]                       0x08007d94   Section        0  speed_torq_ctrl.o(.text.STC_GetSpeedSensor)
    [Anonymous Symbol]                       0x08007d98   Section        0  speed_torq_ctrl.o(.text.STC_GetTorqueRef)
    [Anonymous Symbol]                       0x08007da0   Section        0  speed_torq_ctrl.o(.text.STC_Init)
    [Anonymous Symbol]                       0x08007dcc   Section        0  speed_torq_ctrl.o(.text.STC_SetControlMode)
    [Anonymous Symbol]                       0x08007dd4   Section        0  speed_torq_ctrl.o(.text.STC_SetSpeedSensor)
    [Anonymous Symbol]                       0x08007dd8   Section        0  speed_torq_ctrl.o(.text.STC_StopRamp)
    [Anonymous Symbol]                       0x08007de0   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x08007e00   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x08007e10   Section        0  mc_tasks.o(.text.StartSafetyTask)
    [Anonymous Symbol]                       0x08007e1c   Section        0  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x08007e4c   Section        0  system_stm32l4xx.o(.text.SystemInit)
    [Anonymous Symbol]                       0x08007e60   Section        0  trajectory_ctrl.o(.text.TC_EncAlignmentCommand)
    [Anonymous Symbol]                       0x08007f90   Section        0  trajectory_ctrl.o(.text.TC_FollowCommand)
    [Anonymous Symbol]                       0x08008030   Section        0  trajectory_ctrl.o(.text.TC_GetAlignmentStatus)
    [Anonymous Symbol]                       0x08008038   Section        0  trajectory_ctrl.o(.text.TC_GetControlPositionStatus)
    [Anonymous Symbol]                       0x08008040   Section        0  trajectory_ctrl.o(.text.TC_GetCurrentPosition)
    [Anonymous Symbol]                       0x08008064   Section        0  trajectory_ctrl.o(.text.TC_GetMoveDuration)
    [Anonymous Symbol]                       0x0800806c   Section        0  trajectory_ctrl.o(.text.TC_GetTargetPosition)
    [Anonymous Symbol]                       0x08008074   Section        0  trajectory_ctrl.o(.text.TC_Init)
    [Anonymous Symbol]                       0x080080b4   Section        0  trajectory_ctrl.o(.text.TC_MoveCommand)
    [Anonymous Symbol]                       0x080081a0   Section        0  trajectory_ctrl.o(.text.TC_MoveExecution)
    [Anonymous Symbol]                       0x080082a4   Section        0  trajectory_ctrl.o(.text.TC_PositionRegulation)
    [Anonymous Symbol]                       0x08008338   Section        0  stm32l4xx_mc_it.o(.text.TIM1_BRK_TIM15_IRQHandler)
    [Anonymous Symbol]                       0x08008390   Section        0  stm32l4xx_mc_it.o(.text.TIM1_UP_TIM16_IRQHandler)
    [Anonymous Symbol]                       0x080083ac   Section        0  stm32l4xx_mc_it.o(.text.TIM3_IRQHandler)
    [Anonymous Symbol]                       0x080083d8   Section        0  stm32l4xx_it.o(.text.TIM6_DAC_IRQHandler)
    [Anonymous Symbol]                       0x080083e4   Section        0  stm32l4xx_hal_tim.o(.text.TIM_Base_SetConfig)
    TIM_SlaveTimer_SetConfig                 0x08008525   Thumb Code   218  stm32l4xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig)
    [Anonymous Symbol]                       0x08008524   Section        0  stm32l4xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig)
    [Anonymous Symbol]                       0x08008600   Section        0  mc_tasks.o(.text.TSK_ChargeBootCapDelayHasElapsedM1)
    [Anonymous Symbol]                       0x08008614   Section        0  mc_tasks.o(.text.TSK_HardwareFaultTask)
    [Anonymous Symbol]                       0x08008638   Section        0  mc_tasks.o(.text.TSK_HighFrequencyTask)
    [Anonymous Symbol]                       0x08008758   Section        0  mc_tasks.o(.text.TSK_MF_StopProcessing)
    [Anonymous Symbol]                       0x080087a4   Section        0  mc_tasks.o(.text.TSK_MediumFrequencyTaskM1)
    [Anonymous Symbol]                       0x08008aec   Section        0  mc_tasks.o(.text.TSK_SafetyTask)
    [Anonymous Symbol]                       0x08008b0c   Section        0  mc_tasks.o(.text.TSK_SafetyTask_PWMOFF)
    [Anonymous Symbol]                       0x08008be0   Section        0  mc_tasks.o(.text.TSK_SetChargeBootCapDelayM1)
    [Anonymous Symbol]                       0x08008bec   Section        0  mc_tasks.o(.text.TSK_SetStopPermanencyTimeM1)
    [Anonymous Symbol]                       0x08008bf8   Section        0  mc_tasks.o(.text.TSK_StopPermanencyTimeHasElapsedM1)
    [Anonymous Symbol]                       0x08008c0c   Section        0  stm32l4xx_hal_uart.o(.text.UART_AdvFeatureConfig)
    [Anonymous Symbol]                       0x08008cf4   Section        0  stm32l4xx_hal_uart.o(.text.UART_CheckIdleState)
    [Anonymous Symbol]                       0x08008e5c   Section        0  stm32l4xx_hal_uart.o(.text.UART_SetConfig)
    [Anonymous Symbol]                       0x080090c4   Section        0  stm32l4xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout)
    [Anonymous Symbol]                       0x08009390   Section        0  usart_aspep_driver.o(.text.UASPEP_IDLE_ENABLE)
    [Anonymous Symbol]                       0x080093d8   Section        0  usart_aspep_driver.o(.text.UASPEP_INIT)
    [Anonymous Symbol]                       0x08009524   Section        0  usart_aspep_driver.o(.text.UASPEP_RECEIVE_BUFFER)
    [Anonymous Symbol]                       0x08009564   Section        0  usart_aspep_driver.o(.text.UASPEP_SEND_PACKET)
    [Anonymous Symbol]                       0x080095a0   Section        0  mc_tasks.o(.text.UI_HandleStartStopButton_cb)
    [Anonymous Symbol]                       0x080095b8   Section        0  stm32l4xx_mc_it.o(.text.USART2_IRQHandler)
    [Anonymous Symbol]                       0x080097b0   Section        0  bus_voltage_sensor.o(.text.VBS_GetAvBusVoltage_V)
    [Anonymous Symbol]                       0x080097bc   Section        0  virtual_speed_sensor.o(.text.VSS_Clear)
    [Anonymous Symbol]                       0x080097d8   Section        0  virtual_speed_sensor.o(.text.VSS_Init)
    [Anonymous Symbol]                       0x080097dc   Section        0  virtual_speed_sensor.o(.text.VSS_SetMecAcceleration)
    [Anonymous Symbol]                       0x08009870   Section        0  virtual_speed_sensor.o(.text.VSS_SetMecAngle)
    [Anonymous Symbol]                       0x08009880   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x08009de8   Section        0  mc_tasks.o(.text.mc_lock_pins)
    [Anonymous Symbol]                       0x08009f38   Section        0  cmsis_os.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x08009f44   Section        0  cmsis_os.o(.text.osThreadCreate)
    prvAddNewTaskToReadyList                 0x08009fa1   Thumb Code   252  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x08009fa0   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvIdleTask                              0x0800a09d   Thumb Code   134  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x0800a09c   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseNewTask                     0x0800a125   Thumb Code   280  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x0800a124   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvPortStartFirstTask                    0x0800a23d   Thumb Code    34  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x0800a23c   Section        0  port.o(.text.prvPortStartFirstTask)
    prvTaskExitError                         0x0800a265   Thumb Code    62  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x0800a264   Section        0  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x0800a2a4   Section        0  heap_4.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x0800a4b0   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x0800a4d8   Section        0  mc_tasks.o(.text.startMediumFrequencyTask)
    [Anonymous Symbol]                       0x0800a4e4   Section        0  pwm_common.o(.text.startTimers)
    [Anonymous Symbol]                       0x0800a548   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x0800a56c   Section        0  freertos.o(.text.vApplicationGetIdleTaskMemory)
    [Anonymous Symbol]                       0x0800a588   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x0800a5a0   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x0800a5a8   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x0800a60c   Section        0  list.o(.text.vListInsertEnd)
    vPortEnableVFP                           0x0800a629   Thumb Code    14  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x0800a628   Section        0  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x0800a63c   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x0800a684   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x0800a6b4   Section        0  heap_4.o(.text.vPortFree)
    [Anonymous Symbol]                       0x0800a788   Section        0  motorcontrol.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x0800a7a4   Section        0  tasks.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x0800a844   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x0800a910   Section        0  tasks.o(.text.vTaskSuspendAll)
    [Anonymous Symbol]                       0x0800a920   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x0800a990   Section        0  pwm_common.o(.text.waitForPolarizationEnd)
    [Anonymous Symbol]                       0x0800a9dc   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x0800ab60   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x0800abc0   Section        0  tasks.o(.text.xTaskCreateStatic)
    [Anonymous Symbol]                       0x0800ac38   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x0800ad40   Section        0  tasks.o(.text.xTaskResumeAll)
    $v0                                      0x0800ae2a   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x0800ae2a   Section       26  fpinit.o(x$fpl$fpinit)
    .L__const.RI_GetRegCommandParser.GetRegFcts 0x0800ae44   Data           8  mcp.o(.rodata..L__const.RI_GetRegCommandParser.GetRegFcts)
    .L__const.RI_SetRegCommandParser.SetRegFcts 0x0800ae4c   Data           8  mcp.o(.rodata..L__const.RI_SetRegCommandParser.SetRegFcts)
    .L__const.main.os_thread_def_mediumFrequency 0x0800ae54   Data          28  main.o(.rodata..L__const.main.os_thread_def_mediumFrequency)
    .L__const.main.os_thread_def_safety      0x0800ae70   Data          28  main.o(.rodata..L__const.main.os_thread_def_safety)
    CHANNEL_OFFSET_TAB                       0x0800aea4   Data           7  usart_aspep_driver.o(.rodata.CHANNEL_OFFSET_TAB)
    [Anonymous Symbol]                       0x0800aea4   Section        0  usart_aspep_driver.o(.rodata.CHANNEL_OFFSET_TAB)
    CRC4_Lookup8                             0x0800aeab   Data         256  aspep.o(.rodata.CRC4_Lookup8)
    [Anonymous Symbol]                       0x0800aeab   Section        0  aspep.o(.rodata.CRC4_Lookup8)
    M1_ApplicationConfig_reg                 0x0800afd0   Data          16  mc_configuration_registers.o(.rodata.M1_ApplicationConfig_reg)
    [Anonymous Symbol]                       0x0800afd0   Section        0  mc_configuration_registers.o(.rodata.M1_ApplicationConfig_reg)
    M1_FOCConfig_reg                         0x0800afe0   Data          14  mc_configuration_registers.o(.rodata.M1_FOCConfig_reg)
    [Anonymous Symbol]                       0x0800afe0   Section        0  mc_configuration_registers.o(.rodata.M1_FOCConfig_reg)
    M1_MotorConfig_reg                       0x0800aff0   Data          60  mc_configuration_registers.o(.rodata.M1_MotorConfig_reg)
    [Anonymous Symbol]                       0x0800aff0   Section        0  mc_configuration_registers.o(.rodata.M1_MotorConfig_reg)
    M1_PWR_BOARD                             0x0800b02c   Data          17  mc_configuration_registers.o(.rodata.M1_PWR_BOARD)
    [Anonymous Symbol]                       0x0800b02c   Section        0  mc_configuration_registers.o(.rodata.M1_PWR_BOARD)
    CRC4_Lookup4                             0x0800b0a0   Data          16  aspep.o(.rodata.cst16)
    [Anonymous Symbol]                       0x0800b0a0   Section        0  aspep.o(.rodata.cst16)
    .Lswitch.table.UART_SetConfig.5          0x0800b0b0   Data          16  stm32l4xx_hal_uart.o(.rodata.cst16)
    [Anonymous Symbol]                       0x0800b2ca   Section        0  main.o(.rodata.str1.1)
    .L_MergedGlobals                         0x20000000   Data           8  stm32l4xx_hal.o(.data..L_MergedGlobals)
    [Anonymous Symbol]                       0x20000000   Section        0  stm32l4xx_hal.o(.data..L_MergedGlobals)
    UASPEP_A                                 0x20000360   Data          20  mcp_config.o(.data.UASPEP_A)
    [Anonymous Symbol]                       0x20000360   Section        0  mcp_config.o(.data.UASPEP_A)
    uxCriticalNesting                        0x20000454   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000454   Section        0  port.o(.data.uxCriticalNesting)
    .bss                                     0x20000458   Section       96  libspace.o(.bss)
    .L_MergedGlobals                         0x200004b8   Data          84  main.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x200004b8   Section        0  main.o(.bss..L_MergedGlobals)
    .L_MergedGlobals                         0x2000050c   Data         100  mc_tasks.o(.bss..L_MergedGlobals)
    bMCBootCompleted                         0x2000050c   Data           1  mc_tasks.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x2000050c   Section        0  mc_tasks.o(.bss..L_MergedGlobals)
    hMFTaskCounterM1                         0x2000050e   Data           2  mc_tasks.o(.bss..L_MergedGlobals)
    hBootCapDelayCounterM1                   0x20000510   Data           2  mc_tasks.o(.bss..L_MergedGlobals)
    hStopPermanencyCounterM1                 0x20000512   Data           2  mc_tasks.o(.bss..L_MergedGlobals)
    pwmcHandle                               0x20000514   Data           4  mc_tasks.o(.bss..L_MergedGlobals)
    pEAC                                     0x20000518   Data           4  mc_tasks.o(.bss..L_MergedGlobals)
    pREMNG                                   0x2000051c   Data           4  mc_tasks.o(.bss..L_MergedGlobals)
    FOCVars                                  0x20000520   Data          38  mc_tasks.o(.bss..L_MergedGlobals)
    .L_MergedGlobals                         0x20000570   Data          56  regular_conversion_manager.o(.bss..L_MergedGlobals)
    RCM_UserConvState                        0x20000570   Data           1  regular_conversion_manager.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x20000570   Section        0  regular_conversion_manager.o(.bss..L_MergedGlobals)
    RCM_UserConvValue                        0x20000572   Data           2  regular_conversion_manager.o(.bss..L_MergedGlobals)
    RCM_UserConvHandle                       0x20000574   Data           4  regular_conversion_manager.o(.bss..L_MergedGlobals)
    RCM_handle_array                         0x20000578   Data          16  regular_conversion_manager.o(.bss..L_MergedGlobals)
    RCM_CB_array                             0x20000588   Data          32  regular_conversion_manager.o(.bss..L_MergedGlobals)
    .L_MergedGlobals                         0x200005a8   Data         120  tasks.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x200005a8   Section        0  tasks.o(.bss..L_MergedGlobals)
    uxTopReadyPriority                       0x200005ac   Data           4  tasks.o(.bss..L_MergedGlobals)
    uxTaskNumber                             0x200005b0   Data           4  tasks.o(.bss..L_MergedGlobals)
    uxDeletedTasksWaitingCleanUp             0x200005b4   Data           4  tasks.o(.bss..L_MergedGlobals)
    uxCurrentNumberOfTasks                   0x200005b8   Data           4  tasks.o(.bss..L_MergedGlobals)
    xSchedulerRunning                        0x200005bc   Data           4  tasks.o(.bss..L_MergedGlobals)
    uxSchedulerSuspended                     0x200005c0   Data           4  tasks.o(.bss..L_MergedGlobals)
    xIdleTaskHandle                          0x200005c4   Data           4  tasks.o(.bss..L_MergedGlobals)
    xNextTaskUnblockTime                     0x200005c8   Data           4  tasks.o(.bss..L_MergedGlobals)
    xTickCount                               0x200005cc   Data           4  tasks.o(.bss..L_MergedGlobals)
    xYieldPending                            0x200005d0   Data           4  tasks.o(.bss..L_MergedGlobals)
    xPendedTicks                             0x200005d4   Data           4  tasks.o(.bss..L_MergedGlobals)
    pxDelayedTaskList                        0x200005d8   Data           4  tasks.o(.bss..L_MergedGlobals)
    pxOverflowDelayedTaskList                0x200005dc   Data           4  tasks.o(.bss..L_MergedGlobals)
    xNumOfOverflows                          0x200005e0   Data           4  tasks.o(.bss..L_MergedGlobals)
    xTasksWaitingTermination                 0x200005e4   Data          20  tasks.o(.bss..L_MergedGlobals)
    xSuspendedTaskList                       0x200005f8   Data          20  tasks.o(.bss..L_MergedGlobals)
    xPendingReadyList                        0x2000060c   Data          20  tasks.o(.bss..L_MergedGlobals)
    .L_MergedGlobals                         0x20000620   Data          32  heap_4.o(.bss..L_MergedGlobals)
    xBlockAllocatedBit                       0x20000620   Data           1  heap_4.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x20000620   Section        0  heap_4.o(.bss..L_MergedGlobals)
    pxEnd                                    0x20000624   Data           4  heap_4.o(.bss..L_MergedGlobals)
    xFreeBytesRemaining                      0x20000628   Data           4  heap_4.o(.bss..L_MergedGlobals)
    xMinimumEverFreeBytesRemaining           0x2000062c   Data           4  heap_4.o(.bss..L_MergedGlobals)
    xNumberOfSuccessfulAllocations           0x20000630   Data           4  heap_4.o(.bss..L_MergedGlobals)
    xNumberOfSuccessfulFrees                 0x20000634   Data           4  heap_4.o(.bss..L_MergedGlobals)
    xStart                                   0x20000638   Data           8  heap_4.o(.bss..L_MergedGlobals)
    .L_MergedGlobals                         0x20000640   Data           8  port.o(.bss..L_MergedGlobals)
    ucMaxSysCallPriority                     0x20000640   Data           1  port.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x20000640   Section        0  port.o(.bss..L_MergedGlobals)
    ulMaxPRIGROUPValue                       0x20000644   Data           4  port.o(.bss..L_MergedGlobals)
    .L_MergedGlobals.1                       0x20000648   Data          40  tasks.o(.bss..L_MergedGlobals.1)
    xDelayedTaskList1                        0x20000648   Data          20  tasks.o(.bss..L_MergedGlobals.1)
    [Anonymous Symbol]                       0x20000648   Section        0  tasks.o(.bss..L_MergedGlobals.1)
    xDelayedTaskList2                        0x2000065c   Data          20  tasks.o(.bss..L_MergedGlobals.1)
    MCPAsyncBuffUARTA_A                      0x20000674   Data        2054  mcp_config.o(.bss.MCPAsyncBuffUARTA_A)
    [Anonymous Symbol]                       0x20000674   Section        0  mcp_config.o(.bss.MCPAsyncBuffUARTA_A)
    MCPAsyncBuffUARTA_B                      0x20000e7c   Data        2054  mcp_config.o(.bss.MCPAsyncBuffUARTA_B)
    [Anonymous Symbol]                       0x20000e7c   Section        0  mcp_config.o(.bss.MCPAsyncBuffUARTA_B)
    MCPSyncRXBuff                            0x20001684   Data         130  mcp_config.o(.bss.MCPSyncRXBuff)
    [Anonymous Symbol]                       0x20001684   Section        0  mcp_config.o(.bss.MCPSyncRXBuff)
    MCPSyncTxBuff                            0x20001708   Data         134  mcp_config.o(.bss.MCPSyncTxBuff)
    [Anonymous Symbol]                       0x20001708   Section        0  mcp_config.o(.bss.MCPSyncTxBuff)
    RI_GetPtrReg.nullData16                  0x200017c8   Data           2  register_interface.o(.bss.RI_GetPtrReg.nullData16)
    [Anonymous Symbol]                       0x200017c8   Section        0  register_interface.o(.bss.RI_GetPtrReg.nullData16)
    RealBusVoltageSensorFilterBufferM1       0x200017ca   Data          12  mc_config.o(.bss.RealBusVoltageSensorFilterBufferM1)
    [Anonymous Symbol]                       0x200017ca   Section        0  mc_config.o(.bss.RealBusVoltageSensorFilterBufferM1)
    dataPtrTableA                            0x200017d8   Data          40  mcp_config.o(.bss.dataPtrTableA)
    [Anonymous Symbol]                       0x200017d8   Section        0  mcp_config.o(.bss.dataPtrTableA)
    dataPtrTableBuffA                        0x20001800   Data          40  mcp_config.o(.bss.dataPtrTableBuffA)
    [Anonymous Symbol]                       0x20001800   Section        0  mcp_config.o(.bss.dataPtrTableBuffA)
    dataSizeTableA                           0x20001828   Data          10  mcp_config.o(.bss.dataSizeTableA)
    [Anonymous Symbol]                       0x20001828   Section        0  mcp_config.o(.bss.dataSizeTableA)
    dataSizeTableBuffA                       0x20001832   Data          10  mcp_config.o(.bss.dataSizeTableBuffA)
    [Anonymous Symbol]                       0x20001832   Section        0  mcp_config.o(.bss.dataSizeTableBuffA)
    pxReadyTasksLists                        0x20001a90   Data         140  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x20001a90   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x20001b1c   Data        3000  heap_4.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x20001b1c   Section        0  heap_4.o(.bss.ucHeap)
    xIdleStack                               0x200026d8   Data         512  freertos.o(.bss.xIdleStack)
    [Anonymous Symbol]                       0x200026d8   Section        0  freertos.o(.bss.xIdleStack)
    xIdleTaskTCBBuffer                       0x200028d8   Data          84  freertos.o(.bss.xIdleTaskTCBBuffer)
    [Anonymous Symbol]                       0x200028d8   Section        0  freertos.o(.bss.xIdleTaskTCBBuffer)
    Heap_Mem                                 0x20002930   Data         512  startup_stm32l476xx.o(HEAP)
    HEAP                                     0x20002930   Section      512  startup_stm32l476xx.o(HEAP)
    Stack_Mem                                0x20002b30   Data        1024  startup_stm32l476xx.o(STACK)
    STACK                                    0x20002b30   Section     1024  startup_stm32l476xx.o(STACK)
    __initial_sp                             0x20002f30   Data           0  startup_stm32l476xx.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x00000188   Number         0  startup_stm32l476xx.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32l476xx.o(RESET)
    __Vectors_End                            0x08000188   Data           0  startup_stm32l476xx.o(RESET)
    __main                                   0x08000189   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x08000191   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x08000191   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x08000191   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x0800019f   Thumb Code     0  __scatter.o(!!!scatter)
    __decompress                             0x080001c5   Thumb Code    90  __dczerorl2.o(!!dczerorl2)
    __decompress1                            0x080001c5   Thumb Code     0  __dczerorl2.o(!!dczerorl2)
    __scatterload_zeroinit                   0x08000221   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x0800023d   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x0800023f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_alloca_1                   0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_trap_1                  0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_preinit_1                  0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_return                     0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x08000245   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x08000247   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x08000247   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x08000247   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x08000247   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x08000247   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x08000247   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x08000247   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x08000249   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08000249   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08000249   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x0800024f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x0800024f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x08000253   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x08000253   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0800025b   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x0800025d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x0800025d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08000261   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x08000269   Thumb Code     8  startup_stm32l476xx.o(.text)
    NMI_Handler                              0x08000271   Thumb Code     2  startup_stm32l476xx.o(.text)
    MemManage_Handler                        0x08000275   Thumb Code     2  startup_stm32l476xx.o(.text)
    BusFault_Handler                         0x08000277   Thumb Code     2  startup_stm32l476xx.o(.text)
    UsageFault_Handler                       0x08000279   Thumb Code     2  startup_stm32l476xx.o(.text)
    DebugMon_Handler                         0x0800027d   Thumb Code     2  startup_stm32l476xx.o(.text)
    ADC3_IRQHandler                          0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    CAN1_RX0_IRQHandler                      0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    CAN1_RX1_IRQHandler                      0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    CAN1_SCE_IRQHandler                      0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    CAN1_TX_IRQHandler                       0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    COMP_IRQHandler                          0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    DFSDM1_FLT0_IRQHandler                   0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    DFSDM1_FLT1_IRQHandler                   0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    DFSDM1_FLT2_IRQHandler                   0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    DFSDM1_FLT3_IRQHandler                   0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA1_Channel1_IRQHandler                 0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA1_Channel2_IRQHandler                 0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA1_Channel3_IRQHandler                 0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA1_Channel4_IRQHandler                 0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA1_Channel5_IRQHandler                 0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA1_Channel7_IRQHandler                 0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA2_Channel1_IRQHandler                 0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA2_Channel2_IRQHandler                 0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA2_Channel3_IRQHandler                 0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA2_Channel4_IRQHandler                 0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA2_Channel5_IRQHandler                 0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA2_Channel6_IRQHandler                 0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA2_Channel7_IRQHandler                 0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    EXTI0_IRQHandler                         0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    EXTI1_IRQHandler                         0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    EXTI2_IRQHandler                         0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    EXTI3_IRQHandler                         0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    EXTI4_IRQHandler                         0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    EXTI9_5_IRQHandler                       0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    FLASH_IRQHandler                         0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    FMC_IRQHandler                           0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    FPU_IRQHandler                           0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    I2C1_ER_IRQHandler                       0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    I2C1_EV_IRQHandler                       0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    I2C2_ER_IRQHandler                       0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    I2C2_EV_IRQHandler                       0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    I2C3_ER_IRQHandler                       0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    I2C3_EV_IRQHandler                       0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    LCD_IRQHandler                           0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    LPTIM1_IRQHandler                        0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    LPTIM2_IRQHandler                        0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    LPUART1_IRQHandler                       0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    OTG_FS_IRQHandler                        0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    PVD_PVM_IRQHandler                       0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    QUADSPI_IRQHandler                       0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    RCC_IRQHandler                           0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    RNG_IRQHandler                           0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    RTC_Alarm_IRQHandler                     0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    RTC_WKUP_IRQHandler                      0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    SAI1_IRQHandler                          0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    SAI2_IRQHandler                          0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    SDMMC1_IRQHandler                        0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    SPI1_IRQHandler                          0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    SPI2_IRQHandler                          0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    SPI3_IRQHandler                          0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    SWPMI1_IRQHandler                        0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    TAMP_STAMP_IRQHandler                    0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM1_CC_IRQHandler                       0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM1_TRG_COM_TIM17_IRQHandler            0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM2_IRQHandler                          0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM4_IRQHandler                          0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM5_IRQHandler                          0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM7_IRQHandler                          0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM8_BRK_IRQHandler                      0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM8_CC_IRQHandler                       0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM8_TRG_COM_IRQHandler                  0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM8_UP_IRQHandler                       0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    TSC_IRQHandler                           0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    UART4_IRQHandler                         0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    UART5_IRQHandler                         0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    USART1_IRQHandler                        0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    USART3_IRQHandler                        0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    WWDG_IRQHandler                          0x08000283   Thumb Code     0  startup_stm32l476xx.o(.text)
    __user_initial_stackheap                 0x08000285   Thumb Code     0  startup_stm32l476xx.o(.text)
    __aeabi_uldivmod                         0x080002a9   Thumb Code     0  lludivv7m.o(.text)
    _ll_udiv                                 0x080002a9   Thumb Code   240  lludivv7m.o(.text)
    __aeabi_memcpy                           0x08000399   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x08000399   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x080003ff   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memcpy4                          0x08000423   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x08000423   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x08000423   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x0800046b   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memclr4                          0x08000487   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x08000487   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x08000487   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x0800048b   Thumb Code    74  rt_memclr_w.o(.text)
    __use_two_region_memory                  0x080004d5   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x080004d7   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x080004d9   Thumb Code     2  heapauxi.o(.text)
    __user_setup_stackheap                   0x080004db   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x08000525   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x08000539   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x08000539   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x08000539   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x08000541   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x0800054d   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x0800054d   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x0800054f   Thumb Code     0  indicate_semi.o(.text)
    ADC1_2_IRQHandler                        0x08000551   Thumb Code    20  stm32l4xx_mc_it.o(.text.ADC1_2_IRQHandler)
    ASPEP_HWDMAReset                         0x08000565   Thumb Code    30  aspep.o(.text.ASPEP_HWDMAReset)
    ASPEP_HWDataReceivedIT                   0x08000585   Thumb Code   166  aspep.o(.text.ASPEP_HWDataReceivedIT)
    ASPEP_HWDataTransmittedIT                0x0800062d   Thumb Code   176  aspep.o(.text.ASPEP_HWDataTransmittedIT)
    ASPEP_RXframeProcess                     0x080006dd   Thumb Code  1472  aspep.o(.text.ASPEP_RXframeProcess)
    ASPEP_getBuffer                          0x08000d8d   Thumb Code    92  aspep.o(.text.ASPEP_getBuffer)
    ASPEP_sendPacket                         0x08000de9   Thumb Code    80  aspep.o(.text.ASPEP_sendPacket)
    ASPEP_start                              0x08000e39   Thumb Code    38  aspep.o(.text.ASPEP_start)
    Circle_Limitation                        0x08000e61   Thumb Code    78  circle_limitation.o(.text.Circle_Limitation)
    DMA1_Channel6_IRQHandler                 0x08000eb1   Thumb Code    32  stm32l4xx_mc_it.o(.text.DMA1_Channel6_IRQHandler)
    EAC_Exec                                 0x08000ed1   Thumb Code    48  enc_align_ctrl.o(.text.EAC_Exec)
    EAC_Init                                 0x08000f01   Thumb Code    10  enc_align_ctrl.o(.text.EAC_Init)
    EAC_IsAligned                            0x08000f0d   Thumb Code     4  enc_align_ctrl.o(.text.EAC_IsAligned)
    EAC_SetRestartState                      0x08000f11   Thumb Code     4  enc_align_ctrl.o(.text.EAC_SetRestartState)
    EAC_StartAlignment                       0x08000f15   Thumb Code    82  enc_align_ctrl.o(.text.EAC_StartAlignment)
    ENC_CalcAngle                            0x08000f69   Thumb Code    44  encoder_speed_pos_fdbk.o(.text.ENC_CalcAngle)
    ENC_CalcAvrgMecSpeedUnit                 0x08000f95   Thumb Code   394  encoder_speed_pos_fdbk.o(.text.ENC_CalcAvrgMecSpeedUnit)
    ENC_Clear                                0x08001131   Thumb Code    28  encoder_speed_pos_fdbk.o(.text.ENC_Clear)
    ENC_IRQHandler                           0x0800114d   Thumb Code    16  encoder_speed_pos_fdbk.o(.text.ENC_IRQHandler)
    ENC_Init                                 0x0800115d   Thumb Code   120  encoder_speed_pos_fdbk.o(.text.ENC_Init)
    ENC_SetMecAngle                          0x080011d5   Thumb Code    40  encoder_speed_pos_fdbk.o(.text.ENC_SetMecAngle)
    EXTI15_10_IRQHandler                     0x080011fd   Thumb Code    26  stm32l4xx_mc_it.o(.text.EXTI15_10_IRQHandler)
    Error_Handler                            0x08001219   Thumb Code    10  main.o(.text.Error_Handler)
    FOC_CalcCurrRef                          0x08001225   Thumb Code    48  mc_tasks.o(.text.FOC_CalcCurrRef)
    FOC_Clear                                0x08001255   Thumb Code   116  mc_tasks.o(.text.FOC_Clear)
    FOC_InitAdditionalMethods                0x080012c9   Thumb Code     2  mc_tasks.o(.text.FOC_InitAdditionalMethods)
    HAL_ADCEx_DisableInjectedQueue           0x080012cd   Thumb Code    44  stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_DisableInjectedQueue)
    HAL_ADCEx_InjectedConfigChannel          0x080012f9   Thumb Code  1098  stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConfigChannel)
    HAL_ADCEx_MultiModeConfigChannel         0x08001745   Thumb Code   208  stm32l4xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeConfigChannel)
    HAL_ADC_ConfigChannel                    0x08001815   Thumb Code   880  stm32l4xx_hal_adc.o(.text.HAL_ADC_ConfigChannel)
    HAL_ADC_Init                             0x08001b95   Thumb Code   528  stm32l4xx_hal_adc.o(.text.HAL_ADC_Init)
    HAL_ADC_MspInit                          0x08001da5   Thumb Code   216  stm32l4xx_hal_msp.o(.text.HAL_ADC_MspInit)
    HAL_DMA_Init                             0x08001e7d   Thumb Code   204  stm32l4xx_hal_dma.o(.text.HAL_DMA_Init)
    HAL_GPIO_Init                            0x08001f49   Thumb Code   522  stm32l4xx_hal_gpio.o(.text.HAL_GPIO_Init)
    HAL_GPIO_WritePin                        0x08002159   Thumb Code    12  stm32l4xx_hal_gpio.o(.text.HAL_GPIO_WritePin)
    HAL_GetTick                              0x08002165   Thumb Code    12  stm32l4xx_hal.o(.text.HAL_GetTick)
    HAL_IncTick                              0x08002171   Thumb Code    26  stm32l4xx_hal.o(.text.HAL_IncTick)
    HAL_Init                                 0x0800218d   Thumb Code    46  stm32l4xx_hal.o(.text.HAL_Init)
    HAL_InitTick                             0x080021bd   Thumb Code   188  stm32l4xx_hal_timebase_tim.o(.text.HAL_InitTick)
    HAL_MspInit                              0x08002279   Thumb Code    60  stm32l4xx_hal_msp.o(.text.HAL_MspInit)
    HAL_NVIC_EnableIRQ                       0x080022b5   Thumb Code    32  stm32l4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ)
    HAL_NVIC_SetPriority                     0x080022d5   Thumb Code    86  stm32l4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority)
    HAL_NVIC_SetPriorityGrouping             0x0800232d   Thumb Code    32  stm32l4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping)
    HAL_PWREx_ControlVoltageScaling          0x0800234d   Thumb Code   140  stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling)
    HAL_PWREx_GetVoltageRange                0x080023d9   Thumb Code    16  stm32l4xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange)
    HAL_RCCEx_PeriphCLKConfig                0x080023e9   Thumb Code   996  stm32l4xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig)
    HAL_RCC_ClockConfig                      0x080027cd   Thumb Code   634  stm32l4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    HAL_RCC_GetClockConfig                   0x08002a49   Thumb Code    66  stm32l4xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig)
    HAL_RCC_GetHCLKFreq                      0x08002a8d   Thumb Code    12  stm32l4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq)
    HAL_RCC_GetPCLK1Freq                     0x08002a99   Thumb Code    42  stm32l4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq)
    HAL_RCC_GetPCLK2Freq                     0x08002ac5   Thumb Code    42  stm32l4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq)
    HAL_RCC_GetSysClockFreq                  0x08002af1   Thumb Code   194  stm32l4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq)
    HAL_RCC_OscConfig                        0x08002bb5   Thumb Code  1908  stm32l4xx_hal_rcc.o(.text.HAL_RCC_OscConfig)
    HAL_SYSTICK_Config                       0x08003329   Thumb Code    44  stm32l4xx_hal_cortex.o(.text.HAL_SYSTICK_Config)
    HAL_TIMEx_Break2Callback                 0x08003355   Thumb Code     2  stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_Break2Callback)
    HAL_TIMEx_BreakCallback                  0x08003359   Thumb Code     2  stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback)
    HAL_TIMEx_CommutCallback                 0x0800335d   Thumb Code     2  stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback)
    HAL_TIMEx_ConfigBreakDeadTime            0x08003361   Thumb Code   164  stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigBreakDeadTime)
    HAL_TIMEx_ConfigBreakInput               0x08003405   Thumb Code   184  stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigBreakInput)
    HAL_TIMEx_MasterConfigSynchronization    0x0800353d   Thumb Code   190  stm32l4xx_hal_tim_ex.o(.text.HAL_TIMEx_MasterConfigSynchronization)
    HAL_TIM_Base_Init                        0x080035fd   Thumb Code    98  stm32l4xx_hal_tim.o(.text.HAL_TIM_Base_Init)
    HAL_TIM_Base_MspInit                     0x08003661   Thumb Code   106  stm32l4xx_hal_msp.o(.text.HAL_TIM_Base_MspInit)
    HAL_TIM_Base_Start_IT                    0x080036cd   Thumb Code   166  stm32l4xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT)
    HAL_TIM_IC_CaptureCallback               0x08003775   Thumb Code     2  stm32l4xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback)
    HAL_TIM_IRQHandler                       0x08003779   Thumb Code   364  stm32l4xx_hal_tim.o(.text.HAL_TIM_IRQHandler)
    HAL_TIM_MspPostInit                      0x080038e5   Thumb Code    82  stm32l4xx_hal_msp.o(.text.HAL_TIM_MspPostInit)
    HAL_TIM_OC_DelayElapsedCallback          0x08003939   Thumb Code     2  stm32l4xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback)
    HAL_TIM_PWM_ConfigChannel                0x0800393d   Thumb Code   918  stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel)
    HAL_TIM_PWM_Init                         0x08003cd5   Thumb Code    98  stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_Init)
    HAL_TIM_PWM_MspInit                      0x08003d39   Thumb Code     2  stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_MspInit)
    HAL_TIM_PWM_PulseFinishedCallback        0x08003d3d   Thumb Code     2  stm32l4xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback)
    HAL_TIM_PeriodElapsedCallback            0x08003d41   Thumb Code    20  main.o(.text.HAL_TIM_PeriodElapsedCallback)
    HAL_TIM_SlaveConfigSynchro               0x08003d55   Thumb Code    88  stm32l4xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro)
    HAL_TIM_TriggerCallback                  0x08003dad   Thumb Code     2  stm32l4xx_hal_tim.o(.text.HAL_TIM_TriggerCallback)
    HAL_UART_Init                            0x08003db1   Thumb Code    96  stm32l4xx_hal_uart.o(.text.HAL_UART_Init)
    HAL_UART_MspInit                         0x08003e11   Thumb Code   380  stm32l4xx_hal_msp.o(.text.HAL_UART_MspInit)
    HardFault_Handler                        0x08003f8d   Thumb Code     6  stm32l4xx_mc_it.o(.text.HardFault_Handler)
    MCI_Clear_Iqdref                         0x08003f95   Thumb Code    16  mc_interface.o(.text.MCI_Clear_Iqdref)
    MCI_Clear_PerfMeasure                    0x08003fa5   Thumb Code     6  mc_interface.o(.text.MCI_Clear_PerfMeasure)
    MCI_ExecBufferedCommands                 0x08003fad   Thumb Code   134  mc_interface.o(.text.MCI_ExecBufferedCommands)
    MCI_ExecPositionCommand                  0x08004035   Thumb Code   116  mc_interface.o(.text.MCI_ExecPositionCommand)
    MCI_ExecSpeedRamp                        0x080040a9   Thumb Code    16  mc_interface.o(.text.MCI_ExecSpeedRamp)
    MCI_ExecTorqueRamp                       0x080040b9   Thumb Code    16  mc_interface.o(.text.MCI_ExecTorqueRamp)
    MCI_FaultAcknowledged                    0x080040c9   Thumb Code    44  mc_interface.o(.text.MCI_FaultAcknowledged)
    MCI_FaultProcessing                      0x080040f5   Thumb Code    18  mc_interface.o(.text.MCI_FaultProcessing)
    MCI_GetAvrgMecSpeedUnit                  0x08004109   Thumb Code    16  mc_interface.o(.text.MCI_GetAvrgMecSpeedUnit)
    MCI_GetControlMode                       0x08004119   Thumb Code     6  mc_interface.o(.text.MCI_GetControlMode)
    MCI_GetCurrentFaults                     0x08004121   Thumb Code     4  mc_interface.o(.text.MCI_GetCurrentFaults)
    MCI_GetCurrentPosition                   0x08004125   Thumb Code     6  mc_interface.o(.text.MCI_GetCurrentPosition)
    MCI_GetFaultState                        0x0800412d   Thumb Code    10  mc_interface.o(.text.MCI_GetFaultState)
    MCI_GetIab                               0x08004139   Thumb Code     6  mc_interface.o(.text.MCI_GetIab)
    MCI_GetIalphabeta                        0x08004141   Thumb Code     6  mc_interface.o(.text.MCI_GetIalphabeta)
    MCI_GetIqd                               0x08004149   Thumb Code     6  mc_interface.o(.text.MCI_GetIqd)
    MCI_GetIqdref                            0x08004151   Thumb Code     6  mc_interface.o(.text.MCI_GetIqdref)
    MCI_GetLastRampFinalDuration             0x08004159   Thumb Code     4  mc_interface.o(.text.MCI_GetLastRampFinalDuration)
    MCI_GetLastRampFinalSpeed                0x0800415d   Thumb Code     6  mc_interface.o(.text.MCI_GetLastRampFinalSpeed)
    MCI_GetLastRampFinalTorque               0x08004165   Thumb Code     6  mc_interface.o(.text.MCI_GetLastRampFinalTorque)
    MCI_GetMecSpeedRefUnit                   0x0800416d   Thumb Code     6  mc_interface.o(.text.MCI_GetMecSpeedRefUnit)
    MCI_GetOccurredFaults                    0x08004175   Thumb Code     4  mc_interface.o(.text.MCI_GetOccurredFaults)
    MCI_GetSTMState                          0x08004179   Thumb Code     6  mc_interface.o(.text.MCI_GetSTMState)
    MCI_GetTeref                             0x08004181   Thumb Code     8  mc_interface.o(.text.MCI_GetTeref)
    MCI_GetValphabeta                        0x08004189   Thumb Code     8  mc_interface.o(.text.MCI_GetValphabeta)
    MCI_GetVqd                               0x08004191   Thumb Code     8  mc_interface.o(.text.MCI_GetVqd)
    MCI_Init                                 0x08004199   Thumb Code    28  mc_interface.o(.text.MCI_Init)
    MCI_SetCurrentReferences                 0x080041b5   Thumb Code    18  mc_interface.o(.text.MCI_SetCurrentReferences)
    MCI_StartMotor                           0x080041c9   Thumb Code    44  mc_interface.o(.text.MCI_StartMotor)
    MCI_StartWithPolarizationMotor           0x080041f5   Thumb Code    58  mc_interface.o(.text.MCI_StartWithPolarizationMotor)
    MCI_StopMotor                            0x08004231   Thumb Code    70  mc_interface.o(.text.MCI_StopMotor)
    MCI_StopRamp                             0x08004279   Thumb Code     6  mc_interface.o(.text.MCI_StopRamp)
    MCM_Clarke                               0x08004281   Thumb Code    72  mc_math.o(.text.MCM_Clarke)
    MCM_Park                                 0x080042c9   Thumb Code   122  mc_math.o(.text.MCM_Park)
    MCM_Rev_Park                             0x08004345   Thumb Code    38  mc_math.o(.text.MCM_Rev_Park)
    MCM_Sqrt                                 0x0800436d   Thumb Code   236  mc_math.o(.text.MCM_Sqrt)
    MCM_Trig_Functions                       0x08004459   Thumb Code   142  mc_math.o(.text.MCM_Trig_Functions)
    MCPA_cfgLog                              0x080044e9   Thumb Code   290  mcpa.o(.text.MCPA_cfgLog)
    MCPA_dataLog                             0x0800460d   Thumb Code   730  mcpa.o(.text.MCPA_dataLog)
    MCPA_flushDataLog                        0x080048ed   Thumb Code   172  mcpa.o(.text.MCPA_flushDataLog)
    MCP_ReceivedPacket                       0x08004999   Thumb Code   758  mcp.o(.text.MCP_ReceivedPacket)
    MC_APP_BootHook                          0x08004c95   Thumb Code     2  mc_app_hooks.o(.text.MC_APP_BootHook)
    MC_APP_PostMediumFrequencyHook_M1        0x08004c99   Thumb Code     2  mc_app_hooks.o(.text.MC_APP_PostMediumFrequencyHook_M1)
    MC_BG_Perf_Measure_Start                 0x08004c9d   Thumb Code    26  mc_perf.o(.text.MC_BG_Perf_Measure_Start)
    MC_BG_Perf_Measure_Stop                  0x08004cb9   Thumb Code    78  mc_perf.o(.text.MC_BG_Perf_Measure_Stop)
    MC_GetSTMStateMotor1                     0x08004d09   Thumb Code    14  mc_api.o(.text.MC_GetSTMStateMotor1)
    MC_Perf_Clear                            0x08004d19   Thumb Code    24  mc_perf.o(.text.MC_Perf_Clear)
    MC_Perf_GetCPU_Load                      0x08004d31   Thumb Code    92  mc_perf.o(.text.MC_Perf_GetCPU_Load)
    MC_Perf_GetMaxCPU_Load                   0x08004d8d   Thumb Code    92  mc_perf.o(.text.MC_Perf_GetMaxCPU_Load)
    MC_Perf_GetMinCPU_Load                   0x08004de9   Thumb Code   120  mc_perf.o(.text.MC_Perf_GetMinCPU_Load)
    MC_Perf_Measure_Init                     0x08004e61   Thumb Code    68  mc_perf.o(.text.MC_Perf_Measure_Init)
    MC_Perf_Measure_Start                    0x08004ea5   Thumb Code    18  mc_perf.o(.text.MC_Perf_Measure_Start)
    MC_Perf_Measure_Stop                     0x08004eb9   Thumb Code    64  mc_perf.o(.text.MC_Perf_Measure_Stop)
    MC_ProfilerCommand                       0x08004ef9   Thumb Code     4  mc_api.o(.text.MC_ProfilerCommand)
    MC_RunMotorControlTasks                  0x08004efd   Thumb Code    20  mc_tasks.o(.text.MC_RunMotorControlTasks)
    MC_Scheduler                             0x08004f11   Thumb Code   128  mc_tasks.o(.text.MC_Scheduler)
    MC_StartMotor1                           0x08004f91   Thumb Code    14  mc_api.o(.text.MC_StartMotor1)
    MC_StopMotor1                            0x08004fa1   Thumb Code    14  mc_api.o(.text.MC_StopMotor1)
    MCboot                                   0x08004fb1   Thumb Code   416  mc_tasks.o(.text.MCboot)
    MX_MotorControl_Init                     0x08005151   Thumb Code    22  motorcontrol.o(.text.MX_MotorControl_Init)
    NTC_CalcAvTemp                           0x08005169   Thumb Code    50  ntc_temperature_sensor.o(.text.NTC_CalcAvTemp)
    NTC_Clear                                0x0800519d   Thumb Code     6  ntc_temperature_sensor.o(.text.NTC_Clear)
    NTC_GetAvTemp_C                          0x080051a5   Thumb Code    34  ntc_temperature_sensor.o(.text.NTC_GetAvTemp_C)
    NTC_Init                                 0x080051c9   Thumb Code    20  ntc_temperature_sensor.o(.text.NTC_Init)
    NTC_SetFaultState                        0x080051dd   Thumb Code    24  ntc_temperature_sensor.o(.text.NTC_SetFaultState)
    PID_Controller                           0x080051f5   Thumb Code    68  pid_regulator.o(.text.PID_Controller)
    PID_GetKD                                0x08005239   Thumb Code     6  pid_regulator.o(.text.PID_GetKD)
    PID_GetKDDivisorPOW2                     0x08005241   Thumb Code     4  pid_regulator.o(.text.PID_GetKDDivisorPOW2)
    PID_GetKI                                0x08005245   Thumb Code     6  pid_regulator.o(.text.PID_GetKI)
    PID_GetKIDivisorPOW2                     0x0800524d   Thumb Code     4  pid_regulator.o(.text.PID_GetKIDivisorPOW2)
    PID_GetKP                                0x08005251   Thumb Code     6  pid_regulator.o(.text.PID_GetKP)
    PID_GetKPDivisorPOW2                     0x08005259   Thumb Code     4  pid_regulator.o(.text.PID_GetKPDivisorPOW2)
    PID_HandleInit                           0x0800525d   Thumb Code    16  pid_regulator.o(.text.PID_HandleInit)
    PID_SetIntegralTerm                      0x0800526d   Thumb Code     4  pid_regulator.o(.text.PID_SetIntegralTerm)
    PID_SetKD                                0x08005271   Thumb Code     4  pid_regulator.o(.text.PID_SetKD)
    PID_SetKDDivisorPOW2                     0x08005275   Thumb Code    12  pid_regulator.o(.text.PID_SetKDDivisorPOW2)
    PID_SetKI                                0x08005281   Thumb Code     4  pid_regulator.o(.text.PID_SetKI)
    PID_SetKIDivisorPOW2                     0x08005285   Thumb Code    50  pid_regulator.o(.text.PID_SetKIDivisorPOW2)
    PID_SetKP                                0x080052b9   Thumb Code     4  pid_regulator.o(.text.PID_SetKP)
    PID_SetKPDivisorPOW2                     0x080052bd   Thumb Code    12  pid_regulator.o(.text.PID_SetKPDivisorPOW2)
    PID_SetLowerIntegralTermLimit            0x080052c9   Thumb Code     4  pid_regulator.o(.text.PID_SetLowerIntegralTermLimit)
    PID_SetUpperIntegralTermLimit            0x080052cd   Thumb Code     4  pid_regulator.o(.text.PID_SetUpperIntegralTermLimit)
    PI_Controller                            0x080052d1   Thumb Code   144  pid_regulator.o(.text.PI_Controller)
    PQD_CalcElMotorPower                     0x08005361   Thumb Code    40  pqd_motor_power_measurement.o(.text.PQD_CalcElMotorPower)
    PQD_Clear                                0x08005389   Thumb Code     6  pqd_motor_power_measurement.o(.text.PQD_Clear)
    PQD_GetAvrgElMotorPowerW                 0x08005391   Thumb Code    52  pqd_motor_power_measurement.o(.text.PQD_GetAvrgElMotorPowerW)
    PWMC_CurrentReadingCalibr                0x080053c5   Thumb Code    60  pwm_curr_fdbk.o(.text.PWMC_CurrentReadingCalibr)
    PWMC_DP_Handler                          0x08005401   Thumb Code    68  pwm_curr_fdbk.o(.text.PWMC_DP_Handler)
    PWMC_GetPhaseCurrents                    0x08005445   Thumb Code     4  pwm_curr_fdbk.o(.text.PWMC_GetPhaseCurrents)
    PWMC_IsFaultOccurred                     0x08005449   Thumb Code    56  pwm_curr_fdbk.o(.text.PWMC_IsFaultOccurred)
    PWMC_OVP_Handler                         0x08005481   Thumb Code    26  pwm_curr_fdbk.o(.text.PWMC_OVP_Handler)
    PWMC_SetPhaseVoltage                     0x0800549d   Thumb Code   564  pwm_curr_fdbk.o(.text.PWMC_SetPhaseVoltage)
    PWMC_SwitchOffPWM                        0x080056d1   Thumb Code     4  pwm_curr_fdbk.o(.text.PWMC_SwitchOffPWM)
    PWMC_SwitchOnPWM                         0x080056d5   Thumb Code     4  pwm_curr_fdbk.o(.text.PWMC_SwitchOnPWM)
    PendSV_Handler                           0x080056e1   Thumb Code   100  port.o(.text.PendSV_Handler)
    R3_1_CurrentReadingCalibration           0x0800575d   Thumb Code   302  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration)
    R3_1_GetOffsetCalib                      0x0800588d   Thumb Code    16  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_GetOffsetCalib)
    R3_1_GetPhaseCurrents                    0x0800589d   Thumb Code   288  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_GetPhaseCurrents)
    R3_1_HFCurrentsCalibrationAB             0x080059bd   Thumb Code    66  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_HFCurrentsCalibrationAB)
    R3_1_HFCurrentsCalibrationC              0x08005a01   Thumb Code    54  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_HFCurrentsCalibrationC)
    R3_1_Init                                0x08005a39   Thumb Code   306  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_Init)
    R3_1_RLDetectionModeDisable              0x08005b6d   Thumb Code   368  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLDetectionModeDisable)
    R3_1_RLDetectionModeEnable               0x08005cdd   Thumb Code   210  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLDetectionModeEnable)
    R3_1_RLDetectionModeSetDuty              0x08005db1   Thumb Code    56  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLDetectionModeSetDuty)
    R3_1_RLTurnOnLowSidesAndStart            0x08005f71   Thumb Code   164  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_RLTurnOnLowSidesAndStart)
    R3_1_SetADCSampPointCalibration          0x08006015   Thumb Code    26  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointCalibration)
    R3_1_SetADCSampPointSectX                0x08006031   Thumb Code   110  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointSectX)
    R3_1_SetOffsetCalib                      0x080060a1   Thumb Code    22  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_SetOffsetCalib)
    R3_1_SwitchOffPWM                        0x080060b9   Thumb Code   114  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOffPWM)
    R3_1_SwitchOnPWM                         0x0800612d   Thumb Code   168  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOnPWM)
    R3_1_TIMx_UP_IRQHandler                  0x080061d5   Thumb Code    72  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_TIMx_UP_IRQHandler)
    R3_1_TurnOnLowSides                      0x0800621d   Thumb Code   104  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_TurnOnLowSides)
    R3_1_WriteTIMRegisters                   0x08006285   Thumb Code    56  r3_1_l4xx_pwm_curr_fdbk.o(.text.R3_1_WriteTIMRegisters)
    RCM_ExecRegularConv                      0x08006575   Thumb Code   126  regular_conversion_manager.o(.text.RCM_ExecRegularConv)
    RCM_ExecUserConv                         0x080065f5   Thumb Code   182  regular_conversion_manager.o(.text.RCM_ExecUserConv)
    RCM_RegisterRegConv                      0x080066ad   Thumb Code   350  regular_conversion_manager.o(.text.RCM_RegisterRegConv)
    REMNG_Init                               0x0800680d   Thumb Code    16  ramp_ext_mngr.o(.text.REMNG_Init)
    RI_GetIDSize                             0x0800681d   Thumb Code    30  register_interface.o(.text.RI_GetIDSize)
    RI_GetPtrReg                             0x0800683d   Thumb Code   328  register_interface.o(.text.RI_GetPtrReg)
    RI_GetRegisterGlobal                     0x08006985   Thumb Code   582  register_interface.o(.text.RI_GetRegisterGlobal)
    RI_GetRegisterMotor1                     0x08006bcd   Thumb Code  1914  register_interface.o(.text.RI_GetRegisterMotor1)
    RI_SetRegisterGlobal                     0x08007349   Thumb Code   294  register_interface.o(.text.RI_SetRegisterGlobal)
    RI_SetRegisterMotor1                     0x08007471   Thumb Code  1554  register_interface.o(.text.RI_SetRegisterMotor1)
    RVBS_CalcAvVbus                          0x08007a85   Thumb Code   170  r_divider_bus_voltage_sensor.o(.text.RVBS_CalcAvVbus)
    RVBS_CheckFaultState                     0x08007b31   Thumb Code    78  r_divider_bus_voltage_sensor.o(.text.RVBS_CheckFaultState)
    RVBS_Clear                               0x08007b81   Thumb Code    94  r_divider_bus_voltage_sensor.o(.text.RVBS_Clear)
    RVBS_Init                                0x08007be1   Thumb Code     4  r_divider_bus_voltage_sensor.o(.text.RVBS_Init)
    SPD_GetAvrgMecSpeedUnit                  0x08007be5   Thumb Code     6  speed_pos_fdbk.o(.text.SPD_GetAvrgMecSpeedUnit)
    SPD_GetElAngle                           0x08007bed   Thumb Code     6  speed_pos_fdbk.o(.text.SPD_GetElAngle)
    SPD_GetInstElSpeedDpp                    0x08007bf5   Thumb Code     6  speed_pos_fdbk.o(.text.SPD_GetInstElSpeedDpp)
    SPD_GetMecAngle                          0x08007bfd   Thumb Code     4  speed_pos_fdbk.o(.text.SPD_GetMecAngle)
    SPD_GetS16Speed                          0x08007c01   Thumb Code    20  speed_pos_fdbk.o(.text.SPD_GetS16Speed)
    SPD_IsMecSpeedReliable                   0x08007c15   Thumb Code    88  speed_pos_fdbk.o(.text.SPD_IsMecSpeedReliable)
    STC_CalcTorqueReference                  0x08007c6d   Thumb Code    84  speed_torq_ctrl.o(.text.STC_CalcTorqueReference)
    STC_Clear                                0x08007cc1   Thumb Code    16  speed_torq_ctrl.o(.text.STC_Clear)
    STC_ExecRamp                             0x08007cd1   Thumb Code   156  speed_torq_ctrl.o(.text.STC_ExecRamp)
    STC_ForceSpeedReferenceToCurrentSpeed    0x08007d6d   Thumb Code    16  speed_torq_ctrl.o(.text.STC_ForceSpeedReferenceToCurrentSpeed)
    STC_GetDefaultIqdref                     0x08007d7d   Thumb Code     6  speed_torq_ctrl.o(.text.STC_GetDefaultIqdref)
    STC_GetMecSpeedRefUnit                   0x08007d85   Thumb Code     6  speed_torq_ctrl.o(.text.STC_GetMecSpeedRefUnit)
    STC_GetMecSpeedRefUnitDefault            0x08007d8d   Thumb Code     6  speed_torq_ctrl.o(.text.STC_GetMecSpeedRefUnitDefault)
    STC_GetSpeedSensor                       0x08007d95   Thumb Code     4  speed_torq_ctrl.o(.text.STC_GetSpeedSensor)
    STC_GetTorqueRef                         0x08007d99   Thumb Code     6  speed_torq_ctrl.o(.text.STC_GetTorqueRef)
    STC_Init                                 0x08007da1   Thumb Code    42  speed_torq_ctrl.o(.text.STC_Init)
    STC_SetControlMode                       0x08007dcd   Thumb Code     8  speed_torq_ctrl.o(.text.STC_SetControlMode)
    STC_SetSpeedSensor                       0x08007dd5   Thumb Code     4  speed_torq_ctrl.o(.text.STC_SetSpeedSensor)
    STC_StopRamp                             0x08007dd9   Thumb Code     8  speed_torq_ctrl.o(.text.STC_StopRamp)
    SVC_Handler                              0x08007de1   Thumb Code    36  port.o(.text.SVC_Handler)
    StartSafetyTask                          0x08007e11   Thumb Code    12  mc_tasks.o(.text.StartSafetyTask)
    SysTick_Handler                          0x08007e1d   Thumb Code    46  port.o(.text.SysTick_Handler)
    SystemInit                               0x08007e4d   Thumb Code    18  system_stm32l4xx.o(.text.SystemInit)
    TC_EncAlignmentCommand                   0x08007e61   Thumb Code   304  trajectory_ctrl.o(.text.TC_EncAlignmentCommand)
    TC_FollowCommand                         0x08007f91   Thumb Code   160  trajectory_ctrl.o(.text.TC_FollowCommand)
    TC_GetAlignmentStatus                    0x08008031   Thumb Code     6  trajectory_ctrl.o(.text.TC_GetAlignmentStatus)
    TC_GetControlPositionStatus              0x08008039   Thumb Code     6  trajectory_ctrl.o(.text.TC_GetControlPositionStatus)
    TC_GetCurrentPosition                    0x08008041   Thumb Code    36  trajectory_ctrl.o(.text.TC_GetCurrentPosition)
    TC_GetMoveDuration                       0x08008065   Thumb Code     6  trajectory_ctrl.o(.text.TC_GetMoveDuration)
    TC_GetTargetPosition                     0x0800806d   Thumb Code     6  trajectory_ctrl.o(.text.TC_GetTargetPosition)
    TC_Init                                  0x08008075   Thumb Code    62  trajectory_ctrl.o(.text.TC_Init)
    TC_MoveCommand                           0x080080b5   Thumb Code   234  trajectory_ctrl.o(.text.TC_MoveCommand)
    TC_MoveExecution                         0x080081a1   Thumb Code   260  trajectory_ctrl.o(.text.TC_MoveExecution)
    TC_PositionRegulation                    0x080082a5   Thumb Code   148  trajectory_ctrl.o(.text.TC_PositionRegulation)
    TIM1_BRK_TIM15_IRQHandler                0x08008339   Thumb Code    86  stm32l4xx_mc_it.o(.text.TIM1_BRK_TIM15_IRQHandler)
    TIM1_UP_TIM16_IRQHandler                 0x08008391   Thumb Code    26  stm32l4xx_mc_it.o(.text.TIM1_UP_TIM16_IRQHandler)
    TIM3_IRQHandler                          0x080083ad   Thumb Code    42  stm32l4xx_mc_it.o(.text.TIM3_IRQHandler)
    TIM6_DAC_IRQHandler                      0x080083d9   Thumb Code    12  stm32l4xx_it.o(.text.TIM6_DAC_IRQHandler)
    TIM_Base_SetConfig                       0x080083e5   Thumb Code   318  stm32l4xx_hal_tim.o(.text.TIM_Base_SetConfig)
    TSK_ChargeBootCapDelayHasElapsedM1       0x08008601   Thumb Code    18  mc_tasks.o(.text.TSK_ChargeBootCapDelayHasElapsedM1)
    TSK_HardwareFaultTask                    0x08008615   Thumb Code    36  mc_tasks.o(.text.TSK_HardwareFaultTask)
    TSK_HighFrequencyTask                    0x08008639   Thumb Code   280  mc_tasks.o(.text.TSK_HighFrequencyTask)
    TSK_MF_StopProcessing                    0x08008759   Thumb Code    76  mc_tasks.o(.text.TSK_MF_StopProcessing)
    TSK_MediumFrequencyTaskM1                0x080087a5   Thumb Code   838  mc_tasks.o(.text.TSK_MediumFrequencyTaskM1)
    TSK_SafetyTask                           0x08008aed   Thumb Code    32  mc_tasks.o(.text.TSK_SafetyTask)
    TSK_SafetyTask_PWMOFF                    0x08008b0d   Thumb Code   212  mc_tasks.o(.text.TSK_SafetyTask_PWMOFF)
    TSK_SetChargeBootCapDelayM1              0x08008be1   Thumb Code    12  mc_tasks.o(.text.TSK_SetChargeBootCapDelayM1)
    TSK_SetStopPermanencyTimeM1              0x08008bed   Thumb Code    12  mc_tasks.o(.text.TSK_SetStopPermanencyTimeM1)
    TSK_StopPermanencyTimeHasElapsedM1       0x08008bf9   Thumb Code    18  mc_tasks.o(.text.TSK_StopPermanencyTimeHasElapsedM1)
    UART_AdvFeatureConfig                    0x08008c0d   Thumb Code   232  stm32l4xx_hal_uart.o(.text.UART_AdvFeatureConfig)
    UART_CheckIdleState                      0x08008cf5   Thumb Code   360  stm32l4xx_hal_uart.o(.text.UART_CheckIdleState)
    UART_SetConfig                           0x08008e5d   Thumb Code   600  stm32l4xx_hal_uart.o(.text.UART_SetConfig)
    UART_WaitOnFlagUntilTimeout              0x080090c5   Thumb Code   714  stm32l4xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout)
    UASPEP_IDLE_ENABLE                       0x08009391   Thumb Code    72  usart_aspep_driver.o(.text.UASPEP_IDLE_ENABLE)
    UASPEP_INIT                              0x080093d9   Thumb Code   332  usart_aspep_driver.o(.text.UASPEP_INIT)
    UASPEP_RECEIVE_BUFFER                    0x08009525   Thumb Code    64  usart_aspep_driver.o(.text.UASPEP_RECEIVE_BUFFER)
    UASPEP_SEND_PACKET                       0x08009565   Thumb Code    58  usart_aspep_driver.o(.text.UASPEP_SEND_PACKET)
    UI_HandleStartStopButton_cb              0x080095a1   Thumb Code    24  mc_tasks.o(.text.UI_HandleStartStopButton_cb)
    USART2_IRQHandler                        0x080095b9   Thumb Code   502  stm32l4xx_mc_it.o(.text.USART2_IRQHandler)
    VBS_GetAvBusVoltage_V                    0x080097b1   Thumb Code    10  bus_voltage_sensor.o(.text.VBS_GetAvBusVoltage_V)
    VSS_Clear                                0x080097bd   Thumb Code    26  virtual_speed_sensor.o(.text.VSS_Clear)
    VSS_Init                                 0x080097d9   Thumb Code     4  virtual_speed_sensor.o(.text.VSS_Init)
    VSS_SetMecAcceleration                   0x080097dd   Thumb Code   148  virtual_speed_sensor.o(.text.VSS_SetMecAcceleration)
    VSS_SetMecAngle                          0x08009871   Thumb Code    14  virtual_speed_sensor.o(.text.VSS_SetMecAngle)
    main                                     0x08009881   Thumb Code  1382  main.o(.text.main)
    mc_lock_pins                             0x08009de9   Thumb Code   334  mc_tasks.o(.text.mc_lock_pins)
    osKernelStart                            0x08009f39   Thumb Code    10  cmsis_os.o(.text.osKernelStart)
    osThreadCreate                           0x08009f45   Thumb Code    92  cmsis_os.o(.text.osThreadCreate)
    pvPortMalloc                             0x0800a2a5   Thumb Code   522  heap_4.o(.text.pvPortMalloc)
    pxPortInitialiseStack                    0x0800a4b1   Thumb Code    40  port.o(.text.pxPortInitialiseStack)
    startMediumFrequencyTask                 0x0800a4d9   Thumb Code    12  mc_tasks.o(.text.startMediumFrequencyTask)
    startTimers                              0x0800a4e5   Thumb Code    98  pwm_common.o(.text.startTimers)
    uxListRemove                             0x0800a549   Thumb Code    36  list.o(.text.uxListRemove)
    vApplicationGetIdleTaskMemory            0x0800a56d   Thumb Code    26  freertos.o(.text.vApplicationGetIdleTaskMemory)
    vListInitialise                          0x0800a589   Thumb Code    22  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x0800a5a1   Thumb Code     6  list.o(.text.vListInitialiseItem)
    vListInsert                              0x0800a5a9   Thumb Code    98  list.o(.text.vListInsert)
    vListInsertEnd                           0x0800a60d   Thumb Code    28  list.o(.text.vListInsertEnd)
    vPortEnterCritical                       0x0800a63d   Thumb Code    70  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x0800a685   Thumb Code    46  port.o(.text.vPortExitCritical)
    vPortFree                                0x0800a6b5   Thumb Code   212  heap_4.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x0800a789   Thumb Code    28  motorcontrol.o(.text.vPortSetupTimerInterrupt)
    vTaskDelay                               0x0800a7a5   Thumb Code   158  tasks.o(.text.vTaskDelay)
    vTaskStartScheduler                      0x0800a845   Thumb Code   196  tasks.o(.text.vTaskStartScheduler)
    vTaskSuspendAll                          0x0800a911   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x0800a921   Thumb Code   110  tasks.o(.text.vTaskSwitchContext)
    waitForPolarizationEnd                   0x0800a991   Thumb Code    76  pwm_common.o(.text.waitForPolarizationEnd)
    xPortStartScheduler                      0x0800a9dd   Thumb Code   388  port.o(.text.xPortStartScheduler)
    xTaskCreate                              0x0800ab61   Thumb Code    96  tasks.o(.text.xTaskCreate)
    xTaskCreateStatic                        0x0800abc1   Thumb Code   118  tasks.o(.text.xTaskCreateStatic)
    xTaskIncrementTick                       0x0800ac39   Thumb Code   262  tasks.o(.text.xTaskIncrementTick)
    xTaskResumeAll                           0x0800ad41   Thumb Code   234  tasks.o(.text.xTaskResumeAll)
    _fp_init                                 0x0800ae2b   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x0800ae43   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x0800ae43   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    AHBPrescTable                            0x0800ae8c   Data          16  system_stm32l4xx.o(.rodata.AHBPrescTable)
    APBPrescTable                            0x0800ae9c   Data           8  system_stm32l4xx.o(.rodata.APBPrescTable)
    CTL_BOARD                                0x0800afab   Data          14  mc_configuration_registers.o(.rodata.CTL_BOARD)
    FIRMWARE_NAME                            0x0800afb9   Data          20  mc_configuration_registers.o(.rodata.FIRMWARE_NAME)
    MSIRangeTable                            0x0800b040   Data          48  system_stm32l4xx.o(.rodata.MSIRangeTable)
    R3_1_ParamsM1                            0x0800b070   Data          48  mc_parameters.o(.rodata.R3_1_ParamsM1)
    globalConfig_reg                         0x0800b0c0   Data          10  mc_configuration_registers.o(.rodata.globalConfig_reg)
    hSin_Cos_Table                           0x0800b0ca   Data         512  mc_math.o(.rodata.hSin_Cos_Table)
    Region$$Table$$Base                      0x0800b2e4   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x0800b304   Number         0  anon$$obj.o(Region$$Table)
    uwTickFreq                               0x20000000   Data           1  stm32l4xx_hal.o(.data..L_MergedGlobals)
    uwTickPrio                               0x20000004   Data           4  stm32l4xx_hal.o(.data..L_MergedGlobals)
    ApplicationConfig_reg                    0x20000008   Data           4  mc_configuration_registers.o(.data.ApplicationConfig_reg)
    BusVoltageSensor_M1                      0x2000000c   Data          28  mc_config.o(.data.BusVoltageSensor_M1)
    CircleLimitationM1                       0x20000028   Data           4  mc_config.o(.data.CircleLimitationM1)
    ENCODER_M1                               0x2000002c   Data         128  mc_config.o(.data.ENCODER_M1)
    EncAlignCtrlM1                           0x200000ac   Data          28  mc_config.o(.data.EncAlignCtrlM1)
    FOCConfig_reg                            0x200000c8   Data           4  mc_configuration_registers.o(.data.FOCConfig_reg)
    MCPA_UART_A                              0x200000cc   Data          44  mcp_config.o(.data.MCPA_UART_A)
    MCP_Over_UartA                           0x200000f8   Data          16  mcp_config.o(.data.MCP_Over_UartA)
    MotorConfig_reg                          0x20000108   Data           4  mc_configuration_registers.o(.data.MotorConfig_reg)
    PIDIdHandle_M1                           0x2000010c   Data          44  mc_config.o(.data.PIDIdHandle_M1)
    PIDIqHandle_M1                           0x20000138   Data          44  mc_config.o(.data.PIDIqHandle_M1)
    PIDSpeedHandle_M1                        0x20000164   Data          44  mc_config.o(.data.PIDSpeedHandle_M1)
    PID_PosParamsM1                          0x20000190   Data          44  mc_config.o(.data.PID_PosParamsM1)
    PQD_MotorPowMeasM1                       0x200001bc   Data          16  mc_config.o(.data.PQD_MotorPowMeasM1)
    PWM_Handle_M1                            0x200001cc   Data         164  mc_config.o(.data.PWM_Handle_M1)
    PWR_BOARD_NAME                           0x20000270   Data           4  mc_configuration_registers.o(.data.PWR_BOARD_NAME)
    PosCtrlM1                                0x20000274   Data         112  mc_config.o(.data.PosCtrlM1)
    RampExtMngrHFParamsM1                    0x200002e4   Data          24  mc_config.o(.data.RampExtMngrHFParamsM1)
    SpeednTorqCtrlM1                         0x200002fc   Data          52  mc_config.o(.data.SpeednTorqCtrlM1)
    SystemCoreClock                          0x20000330   Data           4  system_stm32l4xx.o(.data.SystemCoreClock)
    TempRegConv_M1                           0x20000334   Data          16  mc_config.o(.data.TempRegConv_M1)
    TempSensor_M1                            0x20000344   Data          28  mc_config.o(.data.TempSensor_M1)
    VbusRegConv_M1                           0x20000374   Data          16  mc_config.o(.data.VbusRegConv_M1)
    VirtualSpeedSensorM1                     0x20000384   Data          56  mc_config.o(.data.VirtualSpeedSensorM1)
    aspepOverUartA                           0x200003bc   Data         116  mcp_config.o(.data.aspepOverUartA)
    pMPM                                     0x20000430   Data           4  mc_config.o(.data.pMPM)
    pPIDId                                   0x20000434   Data           4  mc_config.o(.data.pPIDId)
    pPIDIq                                   0x20000438   Data           4  mc_config.o(.data.pPIDIq)
    pPosCtrl                                 0x2000043c   Data           4  mc_config.o(.data.pPosCtrl)
    pSTC                                     0x20000440   Data           4  mc_config.o(.data.pSTC)
    scaleParams_M1                           0x20000444   Data          16  mc_parameters.o(.data.scaleParams_M1)
    __libspace_start                         0x20000458   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x200004b8   Data           0  libspace.o(.bss)
    mediumFrequencyHandle                    0x200004b8   Data           4  main.o(.bss..L_MergedGlobals)
    safetyHandle                             0x200004bc   Data           4  main.o(.bss..L_MergedGlobals)
    htim1                                    0x200004c0   Data          76  main.o(.bss..L_MergedGlobals)
    PerfTraces                               0x20000548   Data          40  mc_tasks.o(.bss..L_MergedGlobals)
    pxCurrentTCB                             0x200005a8   Data           4  tasks.o(.bss..L_MergedGlobals)
    GLOBAL_TIMESTAMP                         0x20000670   Data           4  mcpa.o(.bss.GLOBAL_TIMESTAMP)
    MCP_UserCallBack                         0x20001790   Data           8  mcp_config.o(.bss.MCP_UserCallBack)
    Mci                                      0x20001798   Data          48  mc_config.o(.bss.Mci)
    hadc1                                    0x2000183c   Data         100  main.o(.bss.hadc1)
    hdma_usart2_rx                           0x200018a0   Data          72  main.o(.bss.hdma_usart2_rx)
    hdma_usart2_tx                           0x200018e8   Data          72  main.o(.bss.hdma_usart2_tx)
    htim6                                    0x20001930   Data          76  stm32l4xx_hal_timebase_tim.o(.bss.htim6)
    huart2                                   0x2000197c   Data         136  main.o(.bss.huart2)
    huart4                                   0x20001a04   Data         136  main.o(.bss.huart4)
    pMCI                                     0x20001a8c   Data           4  motorcontrol.o(.bss.pMCI)
    uwTick                                   0x200026d4   Data           4  stm32l4xx_hal.o(.bss.uwTick)



==============================================================================

Memory Map of the image

  Image Entry point : 0x08000189

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x0000b760, Max: 0x00100000, ABSOLUTE, COMPRESSED[0x0000b4c8])

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x0000b304, Max: 0x00100000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x00000188   Data   RO            3    RESET               startup_stm32l476xx.o
    0x08000188   0x08000188   0x00000008   Code   RO         2802  * !!!main             c_w.l(__main.o)
    0x08000190   0x08000190   0x00000034   Code   RO         2981    !!!scatter          c_w.l(__scatter.o)
    0x080001c4   0x080001c4   0x0000005a   Code   RO         2979    !!dczerorl2         c_w.l(__dczerorl2.o)
    0x0800021e   0x0800021e   0x00000002   PAD
    0x08000220   0x08000220   0x0000001c   Code   RO         2983    !!handler_zi        c_w.l(__scatter_zi.o)
    0x0800023c   0x0800023c   0x00000002   Code   RO         2841    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x0800023e   0x0800023e   0x00000004   Code   RO         2853    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO         2856    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO         2858    .ARM.Collect$$libinit$$00000006  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO         2861    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO         2863    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO         2865    .ARM.Collect$$libinit$$00000010  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO         2868    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO         2870    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO         2872    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO         2874    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO         2876    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO         2878    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO         2880    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO         2882    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO         2884    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO         2886    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO         2888    .ARM.Collect$$libinit$$00000027  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO         2892    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO         2894    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO         2896    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO         2898    .ARM.Collect$$libinit$$00000034  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000002   Code   RO         2899    .ARM.Collect$$libinit$$00000035  c_w.l(libinit2.o)
    0x08000244   0x08000244   0x00000002   Code   RO         2934    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x08000246   0x08000246   0x00000000   Code   RO         2962    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x08000246   0x08000246   0x00000000   Code   RO         2964    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x08000246   0x08000246   0x00000000   Code   RO         2967    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x08000246   0x08000246   0x00000000   Code   RO         2970    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x08000246   0x08000246   0x00000000   Code   RO         2972    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x08000246   0x08000246   0x00000000   Code   RO         2975    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x08000246   0x08000246   0x00000002   Code   RO         2976    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x08000248   0x08000248   0x00000000   Code   RO         2804    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x08000248   0x08000248   0x00000000   Code   RO         2812    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x08000248   0x08000248   0x00000006   Code   RO         2824    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x0800024e   0x0800024e   0x00000000   Code   RO         2814    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x0800024e   0x0800024e   0x00000004   Code   RO         2815    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x08000252   0x08000252   0x00000000   Code   RO         2817    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x08000252   0x08000252   0x00000008   Code   RO         2818    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x0800025a   0x0800025a   0x00000002   Code   RO         2845    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x0800025c   0x0800025c   0x00000000   Code   RO         2905    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x0800025c   0x0800025c   0x00000004   Code   RO         2906    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x08000260   0x08000260   0x00000006   Code   RO         2907    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x08000266   0x08000266   0x00000002   PAD
    0x08000268   0x08000268   0x00000040   Code   RO            4    .text               startup_stm32l476xx.o
    0x080002a8   0x080002a8   0x000000f0   Code   RO         2790    .text               c_w.l(lludivv7m.o)
    0x08000398   0x08000398   0x0000008a   Code   RO         2792    .text               c_w.l(rt_memcpy_v6.o)
    0x08000422   0x08000422   0x00000064   Code   RO         2794    .text               c_w.l(rt_memcpy_w.o)
    0x08000486   0x08000486   0x0000004e   Code   RO         2798    .text               c_w.l(rt_memclr_w.o)
    0x080004d4   0x080004d4   0x00000006   Code   RO         2800    .text               c_w.l(heapauxi.o)
    0x080004da   0x080004da   0x0000004a   Code   RO         2828    .text               c_w.l(sys_stackheap_outer.o)
    0x08000524   0x08000524   0x00000012   Code   RO         2830    .text               c_w.l(exit.o)
    0x08000536   0x08000536   0x00000002   PAD
    0x08000538   0x08000538   0x00000008   Code   RO         2842    .text               c_w.l(libspace.o)
    0x08000540   0x08000540   0x0000000c   Code   RO         2900    .text               c_w.l(sys_exit.o)
    0x0800054c   0x0800054c   0x00000002   Code   RO         2923    .text               c_w.l(use_no_semi.o)
    0x0800054e   0x0800054e   0x00000000   Code   RO         2925    .text               c_w.l(indicate_semi.o)
    0x0800054e   0x0800054e   0x00000002   PAD
    0x08000550   0x08000550   0x00000014   Code   RO          515    .text.ADC1_2_IRQHandler  stm32l4xx_mc_it.o
    0x08000564   0x08000564   0x0000001e   Code   RO          668    .text.ASPEP_HWDMAReset  aspep.o
    0x08000582   0x08000582   0x00000002   PAD
    0x08000584   0x08000584   0x000000a6   Code   RO          666    .text.ASPEP_HWDataReceivedIT  aspep.o
    0x0800062a   0x0800062a   0x00000002   PAD
    0x0800062c   0x0800062c   0x000000b0   Code   RO          662    .text.ASPEP_HWDataTransmittedIT  aspep.o
    0x080006dc   0x080006dc   0x000005c6   Code   RO          664    .text.ASPEP_RXframeProcess  aspep.o
    0x08000ca2   0x08000ca2   0x00000002   PAD
    0x08000ca4   0x08000ca4   0x000000e8   Code   RO          654    .text.ASPEP_TXframeProcess  aspep.o
    0x08000d8c   0x08000d8c   0x0000005c   Code   RO          658    .text.ASPEP_getBuffer  aspep.o
    0x08000de8   0x08000de8   0x00000050   Code   RO          660    .text.ASPEP_sendPacket  aspep.o
    0x08000e38   0x08000e38   0x00000026   Code   RO          650    .text.ASPEP_start   aspep.o
    0x08000e5e   0x08000e5e   0x00000002   PAD
    0x08000e60   0x08000e60   0x0000004e   Code   RO         2303    .text.Circle_Limitation  circle_limitation.o
    0x08000eae   0x08000eae   0x00000002   PAD
    0x08000eb0   0x08000eb0   0x00000020   Code   RO          523    .text.DMA1_Channel6_IRQHandler  stm32l4xx_mc_it.o
    0x08000ed0   0x08000ed0   0x00000030   Code   RO         2328    .text.EAC_Exec      enc_align_ctrl.o
    0x08000f00   0x08000f00   0x0000000a   Code   RO         2324    .text.EAC_Init      enc_align_ctrl.o
    0x08000f0a   0x08000f0a   0x00000002   PAD
    0x08000f0c   0x08000f0c   0x00000004   Code   RO         2330    .text.EAC_IsAligned  enc_align_ctrl.o
    0x08000f10   0x08000f10   0x00000004   Code   RO         2332    .text.EAC_SetRestartState  enc_align_ctrl.o
    0x08000f14   0x08000f14   0x00000052   Code   RO         2326    .text.EAC_StartAlignment  enc_align_ctrl.o
    0x08000f66   0x08000f66   0x00000002   PAD
    0x08000f68   0x08000f68   0x0000002c   Code   RO         2348    .text.ENC_CalcAngle  encoder_speed_pos_fdbk.o
    0x08000f94   0x08000f94   0x0000019a   Code   RO         2350    .text.ENC_CalcAvrgMecSpeedUnit  encoder_speed_pos_fdbk.o
    0x0800112e   0x0800112e   0x00000002   PAD
    0x08001130   0x08001130   0x0000001c   Code   RO         2346    .text.ENC_Clear     encoder_speed_pos_fdbk.o
    0x0800114c   0x0800114c   0x00000010   Code   RO         2354    .text.ENC_IRQHandler  encoder_speed_pos_fdbk.o
    0x0800115c   0x0800115c   0x00000078   Code   RO         2344    .text.ENC_Init      encoder_speed_pos_fdbk.o
    0x080011d4   0x080011d4   0x00000028   Code   RO         2352    .text.ENC_SetMecAngle  encoder_speed_pos_fdbk.o
    0x080011fc   0x080011fc   0x0000001a   Code   RO          529    .text.EXTI15_10_IRQHandler  stm32l4xx_mc_it.o
    0x08001216   0x08001216   0x00000002   PAD
    0x08001218   0x08001218   0x0000000a   Code   RO           17    .text.Error_Handler  main.o
    0x08001222   0x08001222   0x00000002   PAD
    0x08001224   0x08001224   0x00000030   Code   RO          240    .text.FOC_CalcCurrRef  mc_tasks.o
    0x08001254   0x08001254   0x00000074   Code   RO          222    .text.FOC_Clear     mc_tasks.o
    0x080012c8   0x080012c8   0x00000002   Code   RO          238    .text.FOC_InitAdditionalMethods  mc_tasks.o
    0x080012ca   0x080012ca   0x00000002   PAD
    0x080012cc   0x080012cc   0x0000002c   Code   RO          850    .text.HAL_ADCEx_DisableInjectedQueue  stm32l4xx_hal_adc_ex.o
    0x080012f8   0x080012f8   0x0000044a   Code   RO          844    .text.HAL_ADCEx_InjectedConfigChannel  stm32l4xx_hal_adc_ex.o
    0x08001742   0x08001742   0x00000002   PAD
    0x08001744   0x08001744   0x000000d0   Code   RO          846    .text.HAL_ADCEx_MultiModeConfigChannel  stm32l4xx_hal_adc_ex.o
    0x08001814   0x08001814   0x00000380   Code   RO          786    .text.HAL_ADC_ConfigChannel  stm32l4xx_hal_adc.o
    0x08001b94   0x08001b94   0x00000210   Code   RO          738    .text.HAL_ADC_Init  stm32l4xx_hal_adc.o
    0x08001da4   0x08001da4   0x000000d8   Code   RO          701    .text.HAL_ADC_MspInit  stm32l4xx_hal_msp.o
    0x08001e7c   0x08001e7c   0x000000cc   Code   RO         1120    .text.HAL_DMA_Init  stm32l4xx_hal_dma.o
    0x08001f48   0x08001f48   0x00000210   Code   RO         1094    .text.HAL_GPIO_Init  stm32l4xx_hal_gpio.o
    0x08002158   0x08002158   0x0000000c   Code   RO         1100    .text.HAL_GPIO_WritePin  stm32l4xx_hal_gpio.o
    0x08002164   0x08002164   0x0000000c   Code   RO          876    .text.HAL_GetTick   stm32l4xx_hal.o
    0x08002170   0x08002170   0x0000001a   Code   RO          874    .text.HAL_IncTick   stm32l4xx_hal.o
    0x0800218a   0x0800218a   0x00000002   PAD
    0x0800218c   0x0800218c   0x0000002e   Code   RO          864    .text.HAL_Init      stm32l4xx_hal.o
    0x080021ba   0x080021ba   0x00000002   PAD
    0x080021bc   0x080021bc   0x000000bc   Code   RO          723    .text.HAL_InitTick  stm32l4xx_hal_timebase_tim.o
    0x08002278   0x08002278   0x0000003c   Code   RO          699    .text.HAL_MspInit   stm32l4xx_hal_msp.o
    0x080022b4   0x080022b4   0x00000020   Code   RO         1287    .text.HAL_NVIC_EnableIRQ  stm32l4xx_hal_cortex.o
    0x080022d4   0x080022d4   0x00000056   Code   RO         1285    .text.HAL_NVIC_SetPriority  stm32l4xx_hal_cortex.o
    0x0800232a   0x0800232a   0x00000002   PAD
    0x0800232c   0x0800232c   0x00000020   Code   RO         1283    .text.HAL_NVIC_SetPriorityGrouping  stm32l4xx_hal_cortex.o
    0x0800234c   0x0800234c   0x0000008c   Code   RO         1195    .text.HAL_PWREx_ControlVoltageScaling  stm32l4xx_hal_pwr_ex.o
    0x080023d8   0x080023d8   0x00000010   Code   RO         1193    .text.HAL_PWREx_GetVoltageRange  stm32l4xx_hal_pwr_ex.o
    0x080023e8   0x080023e8   0x000003e4   Code   RO          980    .text.HAL_RCCEx_PeriphCLKConfig  stm32l4xx_hal_rcc_ex.o
    0x080027cc   0x080027cc   0x0000027a   Code   RO          950    .text.HAL_RCC_ClockConfig  stm32l4xx_hal_rcc.o
    0x08002a46   0x08002a46   0x00000002   PAD
    0x08002a48   0x08002a48   0x00000042   Code   RO          962    .text.HAL_RCC_GetClockConfig  stm32l4xx_hal_rcc.o
    0x08002a8a   0x08002a8a   0x00000002   PAD
    0x08002a8c   0x08002a8c   0x0000000c   Code   RO          954    .text.HAL_RCC_GetHCLKFreq  stm32l4xx_hal_rcc.o
    0x08002a98   0x08002a98   0x0000002a   Code   RO          956    .text.HAL_RCC_GetPCLK1Freq  stm32l4xx_hal_rcc.o
    0x08002ac2   0x08002ac2   0x00000002   PAD
    0x08002ac4   0x08002ac4   0x0000002a   Code   RO          958    .text.HAL_RCC_GetPCLK2Freq  stm32l4xx_hal_rcc.o
    0x08002aee   0x08002aee   0x00000002   PAD
    0x08002af0   0x08002af0   0x000000c2   Code   RO          948    .text.HAL_RCC_GetSysClockFreq  stm32l4xx_hal_rcc.o
    0x08002bb2   0x08002bb2   0x00000002   PAD
    0x08002bb4   0x08002bb4   0x00000774   Code   RO          946    .text.HAL_RCC_OscConfig  stm32l4xx_hal_rcc.o
    0x08003328   0x08003328   0x0000002c   Code   RO         1295    .text.HAL_SYSTICK_Config  stm32l4xx_hal_cortex.o
    0x08003354   0x08003354   0x00000002   Code   RO         1666    .text.HAL_TIMEx_Break2Callback  stm32l4xx_hal_tim_ex.o
    0x08003356   0x08003356   0x00000002   PAD
    0x08003358   0x08003358   0x00000002   Code   RO         1664    .text.HAL_TIMEx_BreakCallback  stm32l4xx_hal_tim_ex.o
    0x0800335a   0x0800335a   0x00000002   PAD
    0x0800335c   0x0800335c   0x00000002   Code   RO         1660    .text.HAL_TIMEx_CommutCallback  stm32l4xx_hal_tim_ex.o
    0x0800335e   0x0800335e   0x00000002   PAD
    0x08003360   0x08003360   0x000000a4   Code   RO         1652    .text.HAL_TIMEx_ConfigBreakDeadTime  stm32l4xx_hal_tim_ex.o
    0x08003404   0x08003404   0x00000138   Code   RO         1654    .text.HAL_TIMEx_ConfigBreakInput  stm32l4xx_hal_tim_ex.o
    0x0800353c   0x0800353c   0x000000be   Code   RO         1650    .text.HAL_TIMEx_MasterConfigSynchronization  stm32l4xx_hal_tim_ex.o
    0x080035fa   0x080035fa   0x00000002   PAD
    0x080035fc   0x080035fc   0x00000062   Code   RO         1355    .text.HAL_TIM_Base_Init  stm32l4xx_hal_tim.o
    0x0800365e   0x0800365e   0x00000002   PAD
    0x08003660   0x08003660   0x0000006a   Code   RO          705    .text.HAL_TIM_Base_MspInit  stm32l4xx_hal_msp.o
    0x080036ca   0x080036ca   0x00000002   PAD
    0x080036cc   0x080036cc   0x000000a6   Code   RO         1369    .text.HAL_TIM_Base_Start_IT  stm32l4xx_hal_tim.o
    0x08003772   0x08003772   0x00000002   PAD
    0x08003774   0x08003774   0x00000002   Code   RO         1491    .text.HAL_TIM_IC_CaptureCallback  stm32l4xx_hal_tim.o
    0x08003776   0x08003776   0x00000002   PAD
    0x08003778   0x08003778   0x0000016c   Code   RO         1489    .text.HAL_TIM_IRQHandler  stm32l4xx_hal_tim.o
    0x080038e4   0x080038e4   0x00000052   Code   RO          707    .text.HAL_TIM_MspPostInit  stm32l4xx_hal_msp.o
    0x08003936   0x08003936   0x00000002   PAD
    0x08003938   0x08003938   0x00000002   Code   RO         1493    .text.HAL_TIM_OC_DelayElapsedCallback  stm32l4xx_hal_tim.o
    0x0800393a   0x0800393a   0x00000002   PAD
    0x0800393c   0x0800393c   0x00000396   Code   RO         1509    .text.HAL_TIM_PWM_ConfigChannel  stm32l4xx_hal_tim.o
    0x08003cd2   0x08003cd2   0x00000002   PAD
    0x08003cd4   0x08003cd4   0x00000062   Code   RO         1409    .text.HAL_TIM_PWM_Init  stm32l4xx_hal_tim.o
    0x08003d36   0x08003d36   0x00000002   PAD
    0x08003d38   0x08003d38   0x00000002   Code   RO         1411    .text.HAL_TIM_PWM_MspInit  stm32l4xx_hal_tim.o
    0x08003d3a   0x08003d3a   0x00000002   PAD
    0x08003d3c   0x08003d3c   0x00000002   Code   RO         1495    .text.HAL_TIM_PWM_PulseFinishedCallback  stm32l4xx_hal_tim.o
    0x08003d3e   0x08003d3e   0x00000002   PAD
    0x08003d40   0x08003d40   0x00000014   Code   RO           19    .text.HAL_TIM_PeriodElapsedCallback  main.o
    0x08003d54   0x08003d54   0x00000058   Code   RO         1539    .text.HAL_TIM_SlaveConfigSynchro  stm32l4xx_hal_tim.o
    0x08003dac   0x08003dac   0x00000002   Code   RO         1499    .text.HAL_TIM_TriggerCallback  stm32l4xx_hal_tim.o
    0x08003dae   0x08003dae   0x00000002   PAD
    0x08003db0   0x08003db0   0x00000060   Code   RO         1680    .text.HAL_UART_Init  stm32l4xx_hal_uart.o
    0x08003e10   0x08003e10   0x0000017c   Code   RO          711    .text.HAL_UART_MspInit  stm32l4xx_hal_msp.o
    0x08003f8c   0x08003f8c   0x00000006   Code   RO          527    .text.HardFault_Handler  stm32l4xx_mc_it.o
    0x08003f92   0x08003f92   0x00000002   PAD
    0x08003f94   0x08003f94   0x00000010   Code   RO          503    .text.MCI_Clear_Iqdref  mc_interface.o
    0x08003fa4   0x08003fa4   0x00000006   Code   RO          505    .text.MCI_Clear_PerfMeasure  mc_interface.o
    0x08003faa   0x08003faa   0x00000002   PAD
    0x08003fac   0x08003fac   0x00000086   Code   RO          429    .text.MCI_ExecBufferedCommands  mc_interface.o
    0x08004032   0x08004032   0x00000002   PAD
    0x08004034   0x08004034   0x00000074   Code   RO          405    .text.MCI_ExecPositionCommand  mc_interface.o
    0x080040a8   0x080040a8   0x00000010   Code   RO          393    .text.MCI_ExecSpeedRamp  mc_interface.o
    0x080040b8   0x080040b8   0x00000010   Code   RO          397    .text.MCI_ExecTorqueRamp  mc_interface.o
    0x080040c8   0x080040c8   0x0000002c   Code   RO          425    .text.MCI_FaultAcknowledged  mc_interface.o
    0x080040f4   0x080040f4   0x00000012   Code   RO          427    .text.MCI_FaultProcessing  mc_interface.o
    0x08004106   0x08004106   0x00000002   PAD
    0x08004108   0x08004108   0x00000010   Code   RO          465    .text.MCI_GetAvrgMecSpeedUnit  mc_interface.o
    0x08004118   0x08004118   0x00000006   Code   RO          445    .text.MCI_GetControlMode  mc_interface.o
    0x0800411e   0x0800411e   0x00000002   PAD
    0x08004120   0x08004120   0x00000004   Code   RO          413    .text.MCI_GetCurrentFaults  mc_interface.o
    0x08004124   0x08004124   0x00000006   Code   RO          437    .text.MCI_GetCurrentPosition  mc_interface.o
    0x0800412a   0x0800412a   0x00000002   PAD
    0x0800412c   0x0800412c   0x0000000a   Code   RO          443    .text.MCI_GetFaultState  mc_interface.o
    0x08004136   0x08004136   0x00000002   PAD
    0x08004138   0x08004138   0x00000006   Code   RO          473    .text.MCI_GetIab    mc_interface.o
    0x0800413e   0x0800413e   0x00000002   PAD
    0x08004140   0x08004140   0x00000006   Code   RO          477    .text.MCI_GetIalphabeta  mc_interface.o
    0x08004146   0x08004146   0x00000002   PAD
    0x08004148   0x08004148   0x00000006   Code   RO          479    .text.MCI_GetIqd    mc_interface.o
    0x0800414e   0x0800414e   0x00000002   PAD
    0x08004150   0x08004150   0x00000006   Code   RO          485    .text.MCI_GetIqdref  mc_interface.o
    0x08004156   0x08004156   0x00000002   PAD
    0x08004158   0x08004158   0x00000004   Code   RO          453    .text.MCI_GetLastRampFinalDuration  mc_interface.o
    0x0800415c   0x0800415c   0x00000006   Code   RO          449    .text.MCI_GetLastRampFinalSpeed  mc_interface.o
    0x08004162   0x08004162   0x00000002   PAD
    0x08004164   0x08004164   0x00000006   Code   RO          451    .text.MCI_GetLastRampFinalTorque  mc_interface.o
    0x0800416a   0x0800416a   0x00000002   PAD
    0x0800416c   0x0800416c   0x00000006   Code   RO          469    .text.MCI_GetMecSpeedRefUnit  mc_interface.o
    0x08004172   0x08004172   0x00000002   PAD
    0x08004174   0x08004174   0x00000004   Code   RO          411    .text.MCI_GetOccurredFaults  mc_interface.o
    0x08004178   0x08004178   0x00000006   Code   RO          409    .text.MCI_GetSTMState  mc_interface.o
    0x0800417e   0x0800417e   0x00000002   PAD
    0x08004180   0x08004180   0x00000008   Code   RO          495    .text.MCI_GetTeref  mc_interface.o
    0x08004188   0x08004188   0x00000008   Code   RO          491    .text.MCI_GetValphabeta  mc_interface.o
    0x08004190   0x08004190   0x00000008   Code   RO          489    .text.MCI_GetVqd    mc_interface.o
    0x08004198   0x08004198   0x0000001c   Code   RO          391    .text.MCI_Init      mc_interface.o
    0x080041b4   0x080041b4   0x00000012   Code   RO          401    .text.MCI_SetCurrentReferences  mc_interface.o
    0x080041c6   0x080041c6   0x00000002   PAD
    0x080041c8   0x080041c8   0x0000002c   Code   RO          407    .text.MCI_StartMotor  mc_interface.o
    0x080041f4   0x080041f4   0x0000003a   Code   RO          415    .text.MCI_StartWithPolarizationMotor  mc_interface.o
    0x0800422e   0x0800422e   0x00000002   PAD
    0x08004230   0x08004230   0x00000046   Code   RO          423    .text.MCI_StopMotor  mc_interface.o
    0x08004276   0x08004276   0x00000002   PAD
    0x08004278   0x08004278   0x00000006   Code   RO          461    .text.MCI_StopRamp  mc_interface.o
    0x0800427e   0x0800427e   0x00000002   PAD
    0x08004280   0x08004280   0x00000048   Code   RO          370    .text.MCM_Clarke    mc_math.o
    0x080042c8   0x080042c8   0x0000007a   Code   RO          372    .text.MCM_Park      mc_math.o
    0x08004342   0x08004342   0x00000002   PAD
    0x08004344   0x08004344   0x00000026   Code   RO          376    .text.MCM_Rev_Park  mc_math.o
    0x0800436a   0x0800436a   0x00000002   PAD
    0x0800436c   0x0800436c   0x000000ec   Code   RO          378    .text.MCM_Sqrt      mc_math.o
    0x08004458   0x08004458   0x0000008e   Code   RO          374    .text.MCM_Trig_Functions  mc_math.o
    0x080044e6   0x080044e6   0x00000002   PAD
    0x080044e8   0x080044e8   0x00000122   Code   RO         2778    .text.MCPA_cfgLog   mcpa.o
    0x0800460a   0x0800460a   0x00000002   PAD
    0x0800460c   0x0800460c   0x000002e0   Code   RO         2774    .text.MCPA_dataLog  mcpa.o
    0x080048ec   0x080048ec   0x000000ac   Code   RO         2776    .text.MCPA_flushDataLog  mcpa.o
    0x08004998   0x08004998   0x000002fc   Code   RO          573    .text.MCP_ReceivedPacket  mcp.o
    0x08004c94   0x08004c94   0x00000002   Code   RO          680    .text.MC_APP_BootHook  mc_app_hooks.o
    0x08004c96   0x08004c96   0x00000002   PAD
    0x08004c98   0x08004c98   0x00000002   Code   RO          682    .text.MC_APP_PostMediumFrequencyHook_M1  mc_app_hooks.o
    0x08004c9a   0x08004c9a   0x00000002   PAD
    0x08004c9c   0x08004c9c   0x0000001a   Code   RO          593    .text.MC_BG_Perf_Measure_Start  mc_perf.o
    0x08004cb6   0x08004cb6   0x00000002   PAD
    0x08004cb8   0x08004cb8   0x0000004e   Code   RO          597    .text.MC_BG_Perf_Measure_Stop  mc_perf.o
    0x08004d06   0x08004d06   0x00000002   PAD
    0x08004d08   0x08004d08   0x0000000e   Code   RO          142    .text.MC_GetSTMStateMotor1  mc_api.o
    0x08004d16   0x08004d16   0x00000002   PAD
    0x08004d18   0x08004d18   0x00000018   Code   RO          589    .text.MC_Perf_Clear  mc_perf.o
    0x08004d30   0x08004d30   0x0000005c   Code   RO          599    .text.MC_Perf_GetCPU_Load  mc_perf.o
    0x08004d8c   0x08004d8c   0x0000005c   Code   RO          601    .text.MC_Perf_GetMaxCPU_Load  mc_perf.o
    0x08004de8   0x08004de8   0x00000078   Code   RO          603    .text.MC_Perf_GetMinCPU_Load  mc_perf.o
    0x08004e60   0x08004e60   0x00000044   Code   RO          587    .text.MC_Perf_Measure_Init  mc_perf.o
    0x08004ea4   0x08004ea4   0x00000012   Code   RO          591    .text.MC_Perf_Measure_Start  mc_perf.o
    0x08004eb6   0x08004eb6   0x00000002   PAD
    0x08004eb8   0x08004eb8   0x00000040   Code   RO          595    .text.MC_Perf_Measure_Stop  mc_perf.o
    0x08004ef8   0x08004ef8   0x00000004   Code   RO          162    .text.MC_ProfilerCommand  mc_api.o
    0x08004efc   0x08004efc   0x00000014   Code   RO          224    .text.MC_RunMotorControlTasks  mc_tasks.o
    0x08004f10   0x08004f10   0x00000080   Code   RO          226    .text.MC_Scheduler  mc_tasks.o
    0x08004f90   0x08004f90   0x0000000e   Code   RO           62    .text.MC_StartMotor1  mc_api.o
    0x08004f9e   0x08004f9e   0x00000002   PAD
    0x08004fa0   0x08004fa0   0x0000000e   Code   RO           64    .text.MC_StopMotor1  mc_api.o
    0x08004fae   0x08004fae   0x00000002   PAD
    0x08004fb0   0x08004fb0   0x000001a0   Code   RO          220    .text.MCboot        mc_tasks.o
    0x08005150   0x08005150   0x00000016   Code   RO           50    .text.MX_MotorControl_Init  motorcontrol.o
    0x08005166   0x08005166   0x00000002   PAD
    0x08005168   0x08005168   0x00000032   Code   RO         2408    .text.NTC_CalcAvTemp  ntc_temperature_sensor.o
    0x0800519a   0x0800519a   0x00000002   PAD
    0x0800519c   0x0800519c   0x00000006   Code   RO         2406    .text.NTC_Clear     ntc_temperature_sensor.o
    0x080051a2   0x080051a2   0x00000002   PAD
    0x080051a4   0x080051a4   0x00000022   Code   RO         2412    .text.NTC_GetAvTemp_C  ntc_temperature_sensor.o
    0x080051c6   0x080051c6   0x00000002   PAD
    0x080051c8   0x080051c8   0x00000014   Code   RO         2404    .text.NTC_Init      ntc_temperature_sensor.o
    0x080051dc   0x080051dc   0x00000018   Code   RO         2402    .text.NTC_SetFaultState  ntc_temperature_sensor.o
    0x080051f4   0x080051f4   0x00000044   Code   RO         2494    .text.PID_Controller  pid_regulator.o
    0x08005238   0x08005238   0x00000006   Code   RO         2484    .text.PID_GetKD     pid_regulator.o
    0x0800523e   0x0800523e   0x00000002   PAD
    0x08005240   0x08005240   0x00000004   Code   RO         2488    .text.PID_GetKDDivisorPOW2  pid_regulator.o
    0x08005244   0x08005244   0x00000006   Code   RO         2452    .text.PID_GetKI     pid_regulator.o
    0x0800524a   0x0800524a   0x00000002   PAD
    0x0800524c   0x0800524c   0x00000004   Code   RO         2468    .text.PID_GetKIDivisorPOW2  pid_regulator.o
    0x08005250   0x08005250   0x00000006   Code   RO         2450    .text.PID_GetKP     pid_regulator.o
    0x08005256   0x08005256   0x00000002   PAD
    0x08005258   0x08005258   0x00000004   Code   RO         2462    .text.PID_GetKPDivisorPOW2  pid_regulator.o
    0x0800525c   0x0800525c   0x00000010   Code   RO         2444    .text.PID_HandleInit  pid_regulator.o
    0x0800526c   0x0800526c   0x00000004   Code   RO         2458    .text.PID_SetIntegralTerm  pid_regulator.o
    0x08005270   0x08005270   0x00000004   Code   RO         2482    .text.PID_SetKD     pid_regulator.o
    0x08005274   0x08005274   0x0000000c   Code   RO         2490    .text.PID_SetKDDivisorPOW2  pid_regulator.o
    0x08005280   0x08005280   0x00000004   Code   RO         2448    .text.PID_SetKI     pid_regulator.o
    0x08005284   0x08005284   0x00000032   Code   RO         2470    .text.PID_SetKIDivisorPOW2  pid_regulator.o
    0x080052b6   0x080052b6   0x00000002   PAD
    0x080052b8   0x080052b8   0x00000004   Code   RO         2446    .text.PID_SetKP     pid_regulator.o
    0x080052bc   0x080052bc   0x0000000c   Code   RO         2464    .text.PID_SetKPDivisorPOW2  pid_regulator.o
    0x080052c8   0x080052c8   0x00000004   Code   RO         2474    .text.PID_SetLowerIntegralTermLimit  pid_regulator.o
    0x080052cc   0x080052cc   0x00000004   Code   RO         2472    .text.PID_SetUpperIntegralTermLimit  pid_regulator.o
    0x080052d0   0x080052d0   0x00000090   Code   RO         2492    .text.PI_Controller  pid_regulator.o
    0x08005360   0x08005360   0x00000028   Code   RO         2504    .text.PQD_CalcElMotorPower  pqd_motor_power_measurement.o
    0x08005388   0x08005388   0x00000006   Code   RO         2506    .text.PQD_Clear     pqd_motor_power_measurement.o
    0x0800538e   0x0800538e   0x00000002   PAD
    0x08005390   0x08005390   0x00000034   Code   RO         2508    .text.PQD_GetAvrgElMotorPowerW  pqd_motor_power_measurement.o
    0x080053c4   0x080053c4   0x0000003c   Code   RO          285    .text.PWMC_CurrentReadingCalibr  pwm_curr_fdbk.o
    0x08005400   0x08005400   0x00000044   Code   RO          293    .text.PWMC_DP_Handler  pwm_curr_fdbk.o
    0x08005444   0x08005444   0x00000004   Code   RO          277    .text.PWMC_GetPhaseCurrents  pwm_curr_fdbk.o
    0x08005448   0x08005448   0x00000038   Code   RO          297    .text.PWMC_IsFaultOccurred  pwm_curr_fdbk.o
    0x08005480   0x08005480   0x0000001a   Code   RO          295    .text.PWMC_OVP_Handler  pwm_curr_fdbk.o
    0x0800549a   0x0800549a   0x00000002   PAD
    0x0800549c   0x0800549c   0x00000234   Code   RO          279    .text.PWMC_SetPhaseVoltage  pwm_curr_fdbk.o
    0x080056d0   0x080056d0   0x00000004   Code   RO          281    .text.PWMC_SwitchOffPWM  pwm_curr_fdbk.o
    0x080056d4   0x080056d4   0x00000004   Code   RO          283    .text.PWMC_SwitchOnPWM  pwm_curr_fdbk.o
    0x080056d8   0x080056d8   0x00000008   PAD
    0x080056e0   0x080056e0   0x0000007a   Code   RO         2271    .text.PendSV_Handler  port.o
    0x0800575a   0x0800575a   0x00000002   PAD
    0x0800575c   0x0800575c   0x0000012e   Code   RO         2726    .text.R3_1_CurrentReadingCalibration  r3_1_l4xx_pwm_curr_fdbk.o
    0x0800588a   0x0800588a   0x00000002   PAD
    0x0800588c   0x0800588c   0x00000010   Code   RO         2724    .text.R3_1_GetOffsetCalib  r3_1_l4xx_pwm_curr_fdbk.o
    0x0800589c   0x0800589c   0x00000120   Code   RO         2738    .text.R3_1_GetPhaseCurrents  r3_1_l4xx_pwm_curr_fdbk.o
    0x080059bc   0x080059bc   0x00000042   Code   RO         2728    .text.R3_1_HFCurrentsCalibrationAB  r3_1_l4xx_pwm_curr_fdbk.o
    0x080059fe   0x080059fe   0x00000002   PAD
    0x08005a00   0x08005a00   0x00000036   Code   RO         2736    .text.R3_1_HFCurrentsCalibrationC  r3_1_l4xx_pwm_curr_fdbk.o
    0x08005a36   0x08005a36   0x00000002   PAD
    0x08005a38   0x08005a38   0x00000132   Code   RO         2720    .text.R3_1_Init     r3_1_l4xx_pwm_curr_fdbk.o
    0x08005b6a   0x08005b6a   0x00000002   PAD
    0x08005b6c   0x08005b6c   0x00000170   Code   RO         2760    .text.R3_1_RLDetectionModeDisable  r3_1_l4xx_pwm_curr_fdbk.o
    0x08005cdc   0x08005cdc   0x000000d2   Code   RO         2752    .text.R3_1_RLDetectionModeEnable  r3_1_l4xx_pwm_curr_fdbk.o
    0x08005dae   0x08005dae   0x00000002   PAD
    0x08005db0   0x08005db0   0x00000038   Code   RO         2762    .text.R3_1_RLDetectionModeSetDuty  r3_1_l4xx_pwm_curr_fdbk.o
    0x08005de8   0x08005de8   0x0000003a   Code   RO         2754    .text.R3_1_RLGetPhaseCurrents  r3_1_l4xx_pwm_curr_fdbk.o
    0x08005e22   0x08005e22   0x00000002   PAD
    0x08005e24   0x08005e24   0x000000ea   Code   RO         2758    .text.R3_1_RLSwitchOnPWM  r3_1_l4xx_pwm_curr_fdbk.o
    0x08005f0e   0x08005f0e   0x00000002   PAD
    0x08005f10   0x08005f10   0x00000060   Code   RO         2756    .text.R3_1_RLTurnOnLowSides  r3_1_l4xx_pwm_curr_fdbk.o
    0x08005f70   0x08005f70   0x000000a4   Code   RO         2764    .text.R3_1_RLTurnOnLowSidesAndStart  r3_1_l4xx_pwm_curr_fdbk.o
    0x08006014   0x08006014   0x0000001a   Code   RO         2730    .text.R3_1_SetADCSampPointCalibration  r3_1_l4xx_pwm_curr_fdbk.o
    0x0800602e   0x0800602e   0x00000002   PAD
    0x08006030   0x08006030   0x0000006e   Code   RO         2746    .text.R3_1_SetADCSampPointSectX  r3_1_l4xx_pwm_curr_fdbk.o
    0x0800609e   0x0800609e   0x00000002   PAD
    0x080060a0   0x080060a0   0x00000016   Code   RO         2722    .text.R3_1_SetOffsetCalib  r3_1_l4xx_pwm_curr_fdbk.o
    0x080060b6   0x080060b6   0x00000002   PAD
    0x080060b8   0x080060b8   0x00000072   Code   RO         2734    .text.R3_1_SwitchOffPWM  r3_1_l4xx_pwm_curr_fdbk.o
    0x0800612a   0x0800612a   0x00000002   PAD
    0x0800612c   0x0800612c   0x000000a8   Code   RO         2732    .text.R3_1_SwitchOnPWM  r3_1_l4xx_pwm_curr_fdbk.o
    0x080061d4   0x080061d4   0x00000048   Code   RO         2750    .text.R3_1_TIMx_UP_IRQHandler  r3_1_l4xx_pwm_curr_fdbk.o
    0x0800621c   0x0800621c   0x00000068   Code   RO         2742    .text.R3_1_TurnOnLowSides  r3_1_l4xx_pwm_curr_fdbk.o
    0x08006284   0x08006284   0x00000038   Code   RO         2744    .text.R3_1_WriteTIMRegisters  r3_1_l4xx_pwm_curr_fdbk.o
    0x080062bc   0x080062bc   0x0000016e   Code   RO          982    .text.RCCEx_PLLSAI1_Config  stm32l4xx_hal_rcc_ex.o
    0x0800642a   0x0800642a   0x00000002   PAD
    0x0800642c   0x0800642c   0x00000146   Code   RO          984    .text.RCCEx_PLLSAI2_Config  stm32l4xx_hal_rcc_ex.o
    0x08006572   0x08006572   0x00000002   PAD
    0x08006574   0x08006574   0x0000007e   Code   RO          351    .text.RCM_ExecRegularConv  regular_conversion_manager.o
    0x080065f2   0x080065f2   0x00000002   PAD
    0x080065f4   0x080065f4   0x000000b6   Code   RO          357    .text.RCM_ExecUserConv  regular_conversion_manager.o
    0x080066aa   0x080066aa   0x00000002   PAD
    0x080066ac   0x080066ac   0x0000015e   Code   RO          349    .text.RCM_RegisterRegConv  regular_conversion_manager.o
    0x0800680a   0x0800680a   0x00000002   PAD
    0x0800680c   0x0800680c   0x00000010   Code   RO         2546    .text.REMNG_Init    ramp_ext_mngr.o
    0x0800681c   0x0800681c   0x0000001e   Code   RO          556    .text.RI_GetIDSize  register_interface.o
    0x0800683a   0x0800683a   0x00000002   PAD
    0x0800683c   0x0800683c   0x00000148   Code   RO          558    .text.RI_GetPtrReg  register_interface.o
    0x08006984   0x08006984   0x00000246   Code   RO          552    .text.RI_GetRegisterGlobal  register_interface.o
    0x08006bca   0x08006bca   0x00000002   PAD
    0x08006bcc   0x08006bcc   0x0000077a   Code   RO          554    .text.RI_GetRegisterMotor1  register_interface.o
    0x08007346   0x08007346   0x00000002   PAD
    0x08007348   0x08007348   0x00000126   Code   RO          546    .text.RI_SetRegisterGlobal  register_interface.o
    0x0800746e   0x0800746e   0x00000002   PAD
    0x08007470   0x08007470   0x00000612   Code   RO          550    .text.RI_SetRegisterMotor1  register_interface.o
    0x08007a82   0x08007a82   0x00000002   PAD
    0x08007a84   0x08007a84   0x000000aa   Code   RO         2534    .text.RVBS_CalcAvVbus  r_divider_bus_voltage_sensor.o
    0x08007b2e   0x08007b2e   0x00000002   PAD
    0x08007b30   0x08007b30   0x0000004e   Code   RO         2536    .text.RVBS_CheckFaultState  r_divider_bus_voltage_sensor.o
    0x08007b7e   0x08007b7e   0x00000002   PAD
    0x08007b80   0x08007b80   0x0000005e   Code   RO         2532    .text.RVBS_Clear    r_divider_bus_voltage_sensor.o
    0x08007bde   0x08007bde   0x00000002   PAD
    0x08007be0   0x08007be0   0x00000004   Code   RO         2530    .text.RVBS_Init     r_divider_bus_voltage_sensor.o
    0x08007be4   0x08007be4   0x00000006   Code   RO         2616    .text.SPD_GetAvrgMecSpeedUnit  speed_pos_fdbk.o
    0x08007bea   0x08007bea   0x00000002   PAD
    0x08007bec   0x08007bec   0x00000006   Code   RO         2612    .text.SPD_GetElAngle  speed_pos_fdbk.o
    0x08007bf2   0x08007bf2   0x00000002   PAD
    0x08007bf4   0x08007bf4   0x00000006   Code   RO         2620    .text.SPD_GetInstElSpeedDpp  speed_pos_fdbk.o
    0x08007bfa   0x08007bfa   0x00000002   PAD
    0x08007bfc   0x08007bfc   0x00000004   Code   RO         2614    .text.SPD_GetMecAngle  speed_pos_fdbk.o
    0x08007c00   0x08007c00   0x00000014   Code   RO         2626    .text.SPD_GetS16Speed  speed_pos_fdbk.o
    0x08007c14   0x08007c14   0x00000058   Code   RO         2624    .text.SPD_IsMecSpeedReliable  speed_pos_fdbk.o
    0x08007c6c   0x08007c6c   0x00000054   Code   RO         2660    .text.STC_CalcTorqueReference  speed_torq_ctrl.o
    0x08007cc0   0x08007cc0   0x00000010   Code   RO         2646    .text.STC_Clear     speed_torq_ctrl.o
    0x08007cd0   0x08007cd0   0x0000009c   Code   RO         2656    .text.STC_ExecRamp  speed_torq_ctrl.o
    0x08007d6c   0x08007d6c   0x00000010   Code   RO         2676    .text.STC_ForceSpeedReferenceToCurrentSpeed  speed_torq_ctrl.o
    0x08007d7c   0x08007d7c   0x00000006   Code   RO         2672    .text.STC_GetDefaultIqdref  speed_torq_ctrl.o
    0x08007d82   0x08007d82   0x00000002   PAD
    0x08007d84   0x08007d84   0x00000006   Code   RO         2648    .text.STC_GetMecSpeedRefUnit  speed_torq_ctrl.o
    0x08007d8a   0x08007d8a   0x00000002   PAD
    0x08007d8c   0x08007d8c   0x00000006   Code   RO         2662    .text.STC_GetMecSpeedRefUnitDefault  speed_torq_ctrl.o
    0x08007d92   0x08007d92   0x00000002   PAD
    0x08007d94   0x08007d94   0x00000004   Code   RO         2644    .text.STC_GetSpeedSensor  speed_torq_ctrl.o
    0x08007d98   0x08007d98   0x00000006   Code   RO         2650    .text.STC_GetTorqueRef  speed_torq_ctrl.o
    0x08007d9e   0x08007d9e   0x00000002   PAD
    0x08007da0   0x08007da0   0x0000002a   Code   RO         2640    .text.STC_Init      speed_torq_ctrl.o
    0x08007dca   0x08007dca   0x00000002   PAD
    0x08007dcc   0x08007dcc   0x00000008   Code   RO         2652    .text.STC_SetControlMode  speed_torq_ctrl.o
    0x08007dd4   0x08007dd4   0x00000004   Code   RO         2642    .text.STC_SetSpeedSensor  speed_torq_ctrl.o
    0x08007dd8   0x08007dd8   0x00000008   Code   RO         2658    .text.STC_StopRamp  speed_torq_ctrl.o
    0x08007de0   0x08007de0   0x0000002e   Code   RO         2255    .text.SVC_Handler   port.o
    0x08007e0e   0x08007e0e   0x00000002   PAD
    0x08007e10   0x08007e10   0x0000000c   Code   RO          256    .text.StartSafetyTask  mc_tasks.o
    0x08007e1c   0x08007e1c   0x0000002e   Code   RO         2273    .text.SysTick_Handler  port.o
    0x08007e4a   0x08007e4a   0x00000002   PAD
    0x08007e4c   0x08007e4c   0x00000012   Code   RO         1847    .text.SystemInit    system_stm32l4xx.o
    0x08007e5e   0x08007e5e   0x00000002   PAD
    0x08007e60   0x08007e60   0x00000130   Code   RO         2378    .text.TC_EncAlignmentCommand  trajectory_ctrl.o
    0x08007f90   0x08007f90   0x000000a0   Code   RO         2368    .text.TC_FollowCommand  trajectory_ctrl.o
    0x08008030   0x08008030   0x00000006   Code   RO         2390    .text.TC_GetAlignmentStatus  trajectory_ctrl.o
    0x08008036   0x08008036   0x00000002   PAD
    0x08008038   0x08008038   0x00000006   Code   RO         2388    .text.TC_GetControlPositionStatus  trajectory_ctrl.o
    0x0800803e   0x0800803e   0x00000002   PAD
    0x08008040   0x08008040   0x00000024   Code   RO         2382    .text.TC_GetCurrentPosition  trajectory_ctrl.o
    0x08008064   0x08008064   0x00000006   Code   RO         2386    .text.TC_GetMoveDuration  trajectory_ctrl.o
    0x0800806a   0x0800806a   0x00000002   PAD
    0x0800806c   0x0800806c   0x00000006   Code   RO         2384    .text.TC_GetTargetPosition  trajectory_ctrl.o
    0x08008072   0x08008072   0x00000002   PAD
    0x08008074   0x08008074   0x0000003e   Code   RO         2364    .text.TC_Init       trajectory_ctrl.o
    0x080080b2   0x080080b2   0x00000002   PAD
    0x080080b4   0x080080b4   0x000000ea   Code   RO         2366    .text.TC_MoveCommand  trajectory_ctrl.o
    0x0800819e   0x0800819e   0x00000002   PAD
    0x080081a0   0x080081a0   0x00000104   Code   RO         2372    .text.TC_MoveExecution  trajectory_ctrl.o
    0x080082a4   0x080082a4   0x00000094   Code   RO         2370    .text.TC_PositionRegulation  trajectory_ctrl.o
    0x08008338   0x08008338   0x00000056   Code   RO          519    .text.TIM1_BRK_TIM15_IRQHandler  stm32l4xx_mc_it.o
    0x0800838e   0x0800838e   0x00000002   PAD
    0x08008390   0x08008390   0x0000001a   Code   RO          517    .text.TIM1_UP_TIM16_IRQHandler  stm32l4xx_mc_it.o
    0x080083aa   0x080083aa   0x00000002   PAD
    0x080083ac   0x080083ac   0x0000002a   Code   RO          521    .text.TIM3_IRQHandler  stm32l4xx_mc_it.o
    0x080083d6   0x080083d6   0x00000002   PAD
    0x080083d8   0x080083d8   0x0000000c   Code   RO          691    .text.TIM6_DAC_IRQHandler  stm32l4xx_it.o
    0x080083e4   0x080083e4   0x0000013e   Code   RO         1359    .text.TIM_Base_SetConfig  stm32l4xx_hal_tim.o
    0x08008522   0x08008522   0x00000002   PAD
    0x08008524   0x08008524   0x000000da   Code   RO         1541    .text.TIM_SlaveTimer_SetConfig  stm32l4xx_hal_tim.o
    0x080085fe   0x080085fe   0x00000002   PAD
    0x08008600   0x08008600   0x00000012   Code   RO          236    .text.TSK_ChargeBootCapDelayHasElapsedM1  mc_tasks.o
    0x08008612   0x08008612   0x00000002   PAD
    0x08008614   0x08008614   0x00000024   Code   RO          252    .text.TSK_HardwareFaultTask  mc_tasks.o
    0x08008638   0x08008638   0x0000011e   Code   RO          244    .text.TSK_HighFrequencyTask  mc_tasks.o
    0x08008756   0x08008756   0x00000002   PAD
    0x08008758   0x08008758   0x0000004c   Code   RO          228    .text.TSK_MF_StopProcessing  mc_tasks.o
    0x080087a4   0x080087a4   0x00000346   Code   RO          232    .text.TSK_MediumFrequencyTaskM1  mc_tasks.o
    0x08008aea   0x08008aea   0x00000002   PAD
    0x08008aec   0x08008aec   0x00000020   Code   RO          246    .text.TSK_SafetyTask  mc_tasks.o
    0x08008b0c   0x08008b0c   0x000000d4   Code   RO          248    .text.TSK_SafetyTask_PWMOFF  mc_tasks.o
    0x08008be0   0x08008be0   0x0000000c   Code   RO          234    .text.TSK_SetChargeBootCapDelayM1  mc_tasks.o
    0x08008bec   0x08008bec   0x0000000c   Code   RO          230    .text.TSK_SetStopPermanencyTimeM1  mc_tasks.o
    0x08008bf8   0x08008bf8   0x00000012   Code   RO          242    .text.TSK_StopPermanencyTimeHasElapsedM1  mc_tasks.o
    0x08008c0a   0x08008c0a   0x00000002   PAD
    0x08008c0c   0x08008c0c   0x000000e8   Code   RO         1684    .text.UART_AdvFeatureConfig  stm32l4xx_hal_uart.o
    0x08008cf4   0x08008cf4   0x00000168   Code   RO         1688    .text.UART_CheckIdleState  stm32l4xx_hal_uart.o
    0x08008e5c   0x08008e5c   0x00000268   Code   RO         1686    .text.UART_SetConfig  stm32l4xx_hal_uart.o
    0x080090c4   0x080090c4   0x000002ca   Code   RO         1702    .text.UART_WaitOnFlagUntilTimeout  stm32l4xx_hal_uart.o
    0x0800938e   0x0800938e   0x00000002   PAD
    0x08009390   0x08009390   0x00000048   Code   RO          623    .text.UASPEP_IDLE_ENABLE  usart_aspep_driver.o
    0x080093d8   0x080093d8   0x0000014c   Code   RO          613    .text.UASPEP_INIT   usart_aspep_driver.o
    0x08009524   0x08009524   0x00000040   Code   RO          621    .text.UASPEP_RECEIVE_BUFFER  usart_aspep_driver.o
    0x08009564   0x08009564   0x0000003a   Code   RO          619    .text.UASPEP_SEND_PACKET  usart_aspep_driver.o
    0x0800959e   0x0800959e   0x00000002   PAD
    0x080095a0   0x080095a0   0x00000018   Code   RO          258    .text.UI_HandleStartStopButton_cb  mc_tasks.o
    0x080095b8   0x080095b8   0x000001f6   Code   RO          525    .text.USART2_IRQHandler  stm32l4xx_mc_it.o
    0x080097ae   0x080097ae   0x00000002   PAD
    0x080097b0   0x080097b0   0x0000000a   Code   RO         2291    .text.VBS_GetAvBusVoltage_V  bus_voltage_sensor.o
    0x080097ba   0x080097ba   0x00000002   PAD
    0x080097bc   0x080097bc   0x0000001a   Code   RO         2688    .text.VSS_Clear     virtual_speed_sensor.o
    0x080097d6   0x080097d6   0x00000002   PAD
    0x080097d8   0x080097d8   0x00000004   Code   RO         2686    .text.VSS_Init      virtual_speed_sensor.o
    0x080097dc   0x080097dc   0x00000094   Code   RO         2696    .text.VSS_SetMecAcceleration  virtual_speed_sensor.o
    0x08009870   0x08009870   0x0000000e   Code   RO         2694    .text.VSS_SetMecAngle  virtual_speed_sensor.o
    0x0800987e   0x0800987e   0x00000002   PAD
    0x08009880   0x08009880   0x00000566   Code   RO           11    .text.main          main.o
    0x08009de6   0x08009de6   0x00000002   PAD
    0x08009de8   0x08009de8   0x0000014e   Code   RO          260    .text.mc_lock_pins  mc_tasks.o
    0x08009f36   0x08009f36   0x00000002   PAD
    0x08009f38   0x08009f38   0x0000000a   Code   RO         2115    .text.osKernelStart  cmsis_os.o
    0x08009f42   0x08009f42   0x00000002   PAD
    0x08009f44   0x08009f44   0x0000005c   Code   RO         2121    .text.osThreadCreate  cmsis_os.o
    0x08009fa0   0x08009fa0   0x000000fc   Code   RO         2013    .text.prvAddNewTaskToReadyList  tasks.o
    0x0800a09c   0x0800a09c   0x00000086   Code   RO         2043    .text.prvIdleTask   tasks.o
    0x0800a122   0x0800a122   0x00000002   PAD
    0x0800a124   0x0800a124   0x00000118   Code   RO         2011    .text.prvInitialiseNewTask  tasks.o
    0x0800a23c   0x0800a23c   0x00000028   Code   RO         2263    .text.prvPortStartFirstTask  port.o
    0x0800a264   0x0800a264   0x0000003e   Code   RO         2253    .text.prvTaskExitError  port.o
    0x0800a2a2   0x0800a2a2   0x00000002   PAD
    0x0800a2a4   0x0800a2a4   0x0000020a   Code   RO         2229    .text.pvPortMalloc  heap_4.o
    0x0800a4ae   0x0800a4ae   0x00000002   PAD
    0x0800a4b0   0x0800a4b0   0x00000028   Code   RO         2251    .text.pxPortInitialiseStack  port.o
    0x0800a4d8   0x0800a4d8   0x0000000c   Code   RO          254    .text.startMediumFrequencyTask  mc_tasks.o
    0x0800a4e4   0x0800a4e4   0x00000062   Code   RO         2518    .text.startTimers   pwm_common.o
    0x0800a546   0x0800a546   0x00000002   PAD
    0x0800a548   0x0800a548   0x00000024   Code   RO         1900    .text.uxListRemove  list.o
    0x0800a56c   0x0800a56c   0x0000001a   Code   RO           39    .text.vApplicationGetIdleTaskMemory  freertos.o
    0x0800a586   0x0800a586   0x00000002   PAD
    0x0800a588   0x0800a588   0x00000016   Code   RO         1892    .text.vListInitialise  list.o
    0x0800a59e   0x0800a59e   0x00000002   PAD
    0x0800a5a0   0x0800a5a0   0x00000006   Code   RO         1894    .text.vListInitialiseItem  list.o
    0x0800a5a6   0x0800a5a6   0x00000002   PAD
    0x0800a5a8   0x0800a5a8   0x00000062   Code   RO         1898    .text.vListInsert   list.o
    0x0800a60a   0x0800a60a   0x00000002   PAD
    0x0800a60c   0x0800a60c   0x0000001c   Code   RO         1896    .text.vListInsertEnd  list.o
    0x0800a628   0x0800a628   0x00000014   Code   RO         2261    .text.vPortEnableVFP  port.o
    0x0800a63c   0x0800a63c   0x00000046   Code   RO         2267    .text.vPortEnterCritical  port.o
    0x0800a682   0x0800a682   0x00000002   PAD
    0x0800a684   0x0800a684   0x0000002e   Code   RO         2269    .text.vPortExitCritical  port.o
    0x0800a6b2   0x0800a6b2   0x00000002   PAD
    0x0800a6b4   0x0800a6b4   0x000000d4   Code   RO         2231    .text.vPortFree     heap_4.o
    0x0800a788   0x0800a788   0x0000001c   Code   RO           52    .text.vPortSetupTimerInterrupt  motorcontrol.o
    0x0800a7a4   0x0800a7a4   0x0000009e   Code   RO         2019    .text.vTaskDelay    tasks.o
    0x0800a842   0x0800a842   0x00000002   PAD
    0x0800a844   0x0800a844   0x000000cc   Code   RO         2041    .text.vTaskStartScheduler  tasks.o
    0x0800a910   0x0800a910   0x00000010   Code   RO         2021    .text.vTaskSuspendAll  tasks.o
    0x0800a920   0x0800a920   0x0000006e   Code   RO         2035    .text.vTaskSwitchContext  tasks.o
    0x0800a98e   0x0800a98e   0x00000002   PAD
    0x0800a990   0x0800a990   0x0000004c   Code   RO         2520    .text.waitForPolarizationEnd  pwm_common.o
    0x0800a9dc   0x0800a9dc   0x00000184   Code   RO         2257    .text.xPortStartScheduler  port.o
    0x0800ab60   0x0800ab60   0x00000060   Code   RO         2015    .text.xTaskCreate   tasks.o
    0x0800abc0   0x0800abc0   0x00000076   Code   RO         2009    .text.xTaskCreateStatic  tasks.o
    0x0800ac36   0x0800ac36   0x00000002   PAD
    0x0800ac38   0x0800ac38   0x00000106   Code   RO         2047    .text.xTaskIncrementTick  tasks.o
    0x0800ad3e   0x0800ad3e   0x00000002   PAD
    0x0800ad40   0x0800ad40   0x000000ea   Code   RO         2025    .text.xTaskResumeAll  tasks.o
    0x0800ae2a   0x0800ae2a   0x0000001a   Code   RO         2917    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x0800ae44   0x0800ae44   0x00000008   Data   RO          578    .rodata..L__const.RI_GetRegCommandParser.GetRegFcts  mcp.o
    0x0800ae4c   0x0800ae4c   0x00000008   Data   RO          577    .rodata..L__const.RI_SetRegCommandParser.SetRegFcts  mcp.o
    0x0800ae54   0x0800ae54   0x0000001c   Data   RO           22    .rodata..L__const.main.os_thread_def_mediumFrequency  main.o
    0x0800ae70   0x0800ae70   0x0000001c   Data   RO           23    .rodata..L__const.main.os_thread_def_safety  main.o
    0x0800ae8c   0x0800ae8c   0x00000010   Data   RO         1852    .rodata.AHBPrescTable  system_stm32l4xx.o
    0x0800ae9c   0x0800ae9c   0x00000008   Data   RO         1853    .rodata.APBPrescTable  system_stm32l4xx.o
    0x0800aea4   0x0800aea4   0x00000007   Data   RO          625    .rodata.CHANNEL_OFFSET_TAB  usart_aspep_driver.o
    0x0800aeab   0x0800aeab   0x00000100   Data   RO          670    .rodata.CRC4_Lookup8  aspep.o
    0x0800afab   0x0800afab   0x0000000e   Data   RO          634    .rodata.CTL_BOARD   mc_configuration_registers.o
    0x0800afb9   0x0800afb9   0x00000014   Data   RO          635    .rodata.FIRMWARE_NAME  mc_configuration_registers.o
    0x0800afcd   0x0800afcd   0x00000003   PAD
    0x0800afd0   0x0800afd0   0x00000010   Data   RO          643    .rodata.M1_ApplicationConfig_reg  mc_configuration_registers.o
    0x0800afe0   0x0800afe0   0x0000000e   Data   RO          639    .rodata.M1_FOCConfig_reg  mc_configuration_registers.o
    0x0800afee   0x0800afee   0x00000002   PAD
    0x0800aff0   0x0800aff0   0x0000003c   Data   RO          641    .rodata.M1_MotorConfig_reg  mc_configuration_registers.o
    0x0800b02c   0x0800b02c   0x00000011   Data   RO          637    .rodata.M1_PWR_BOARD  mc_configuration_registers.o
    0x0800b03d   0x0800b03d   0x00000003   PAD
    0x0800b040   0x0800b040   0x00000030   Data   RO         1854    .rodata.MSIRangeTable  system_stm32l4xx.o
    0x0800b070   0x0800b070   0x00000030   Data   RO          539    .rodata.R3_1_ParamsM1  mc_parameters.o
    0x0800b0a0   0x0800b0a0   0x00000010   Data   RO          671    .rodata.cst16       aspep.o
    0x0800b0b0   0x0800b0b0   0x00000010   Data   RO         1806    .rodata.cst16       stm32l4xx_hal_uart.o
    0x0800b0c0   0x0800b0c0   0x0000000a   Data   RO          636    .rodata.globalConfig_reg  mc_configuration_registers.o
    0x0800b0ca   0x0800b0ca   0x00000200   Data   RO          382    .rodata.hSin_Cos_Table  mc_math.o
    0x0800b2ca   0x0800b2ca   0x00000017   Data   RO           21    .rodata.str1.1      main.o
    0x0800b2e1   0x0800b2e1   0x00000003   PAD
    0x0800b2e4   0x0800b2e4   0x00000020   Data   RO         2978    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM2 (Exec base: 0x10000000, Load base: 0x0800b4c8, Size: 0x00000000, Max: 0x00008000, ABSOLUTE)

    **** No section assigned to this execution region ****


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x0800b308, Size: 0x00002f30, Max: 0x00018000, ABSOLUTE, COMPRESSED[0x000001c0])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   COMPRESSED   0x00000008   Data   RW          935    .data..L_MergedGlobals  stm32l4xx_hal.o
    0x20000008   COMPRESSED   0x00000004   Data   RW          644    .data.ApplicationConfig_reg  mc_configuration_registers.o
    0x2000000c   COMPRESSED   0x0000001c   Data   RW          187    .data.BusVoltageSensor_M1  mc_config.o
    0x20000028   COMPRESSED   0x00000004   Data   RW          189    .data.CircleLimitationM1  mc_config.o
    0x2000002c   COMPRESSED   0x00000080   Data   RW          181    .data.ENCODER_M1    mc_config.o
    0x200000ac   COMPRESSED   0x0000001c   Data   RW          182    .data.EncAlignCtrlM1  mc_config.o
    0x200000c8   COMPRESSED   0x00000004   Data   RW          640    .data.FOCConfig_reg  mc_configuration_registers.o
    0x200000cc   COMPRESSED   0x0000002c   Data   RW          213    .data.MCPA_UART_A   mcp_config.o
    0x200000f8   COMPRESSED   0x00000010   Data   RW          208    .data.MCP_Over_UartA  mcp_config.o
    0x20000108   COMPRESSED   0x00000004   Data   RW          642    .data.MotorConfig_reg  mc_configuration_registers.o
    0x2000010c   COMPRESSED   0x0000002c   Data   RW          175    .data.PIDIdHandle_M1  mc_config.o
    0x20000138   COMPRESSED   0x0000002c   Data   RW          174    .data.PIDIqHandle_M1  mc_config.o
    0x20000164   COMPRESSED   0x0000002c   Data   RW          173    .data.PIDSpeedHandle_M1  mc_config.o
    0x20000190   COMPRESSED   0x0000002c   Data   RW          176    .data.PID_PosParamsM1  mc_config.o
    0x200001bc   COMPRESSED   0x00000010   Data   RW          172    .data.PQD_MotorPowMeasM1  mc_config.o
    0x200001cc   COMPRESSED   0x000000a4   Data   RW          179    .data.PWM_Handle_M1  mc_config.o
    0x20000270   COMPRESSED   0x00000004   Data   RW          638    .data.PWR_BOARD_NAME  mc_configuration_registers.o
    0x20000274   COMPRESSED   0x00000070   Data   RW          177    .data.PosCtrlM1     mc_config.o
    0x200002e4   COMPRESSED   0x00000018   Data   RW          188    .data.RampExtMngrHFParamsM1  mc_config.o
    0x200002fc   COMPRESSED   0x00000034   Data   RW          178    .data.SpeednTorqCtrlM1  mc_config.o
    0x20000330   COMPRESSED   0x00000004   Data   RW         1851    .data.SystemCoreClock  system_stm32l4xx.o
    0x20000334   COMPRESSED   0x00000010   Data   RW          183    .data.TempRegConv_M1  mc_config.o
    0x20000344   COMPRESSED   0x0000001c   Data   RW          184    .data.TempSensor_M1  mc_config.o
    0x20000360   COMPRESSED   0x00000014   Data   RW          202    .data.UASPEP_A      mcp_config.o
    0x20000374   COMPRESSED   0x00000010   Data   RW          185    .data.VbusRegConv_M1  mc_config.o
    0x20000384   COMPRESSED   0x00000038   Data   RW          180    .data.VirtualSpeedSensorM1  mc_config.o
    0x200003bc   COMPRESSED   0x00000074   Data   RW          207    .data.aspepOverUartA  mcp_config.o
    0x20000430   COMPRESSED   0x00000004   Data   RW          194    .data.pMPM          mc_config.o
    0x20000434   COMPRESSED   0x00000004   Data   RW          193    .data.pPIDId        mc_config.o
    0x20000438   COMPRESSED   0x00000004   Data   RW          192    .data.pPIDIq        mc_config.o
    0x2000043c   COMPRESSED   0x00000004   Data   RW          195    .data.pPosCtrl      mc_config.o
    0x20000440   COMPRESSED   0x00000004   Data   RW          190    .data.pSTC          mc_config.o
    0x20000444   COMPRESSED   0x00000010   Data   RW          540    .data.scaleParams_M1  mc_parameters.o
    0x20000454   COMPRESSED   0x00000004   Data   RW         2277    .data.uxCriticalNesting  port.o
    0x20000458        -       0x00000060   Zero   RW         2843    .bss                c_w.l(libspace.o)
    0x200004b8        -       0x00000054   Zero   RW           30    .bss..L_MergedGlobals  main.o
    0x2000050c        -       0x00000064   Zero   RW          262    .bss..L_MergedGlobals  mc_tasks.o
    0x20000570        -       0x00000038   Zero   RW          361    .bss..L_MergedGlobals  regular_conversion_manager.o
    0x200005a8        -       0x00000078   Zero   RW         2104    .bss..L_MergedGlobals  tasks.o
    0x20000620        -       0x00000020   Zero   RW         2242    .bss..L_MergedGlobals  heap_4.o
    0x20000640        -       0x00000008   Zero   RW         2278    .bss..L_MergedGlobals  port.o
    0x20000648        -       0x00000028   Zero   RW         2105    .bss..L_MergedGlobals.1  tasks.o
    0x20000670        -       0x00000004   Zero   RW         2780    .bss.GLOBAL_TIMESTAMP  mcpa.o
    0x20000674        -       0x00000806   Zero   RW          205    .bss.MCPAsyncBuffUARTA_A  mcp_config.o
    0x20000e7a   COMPRESSED   0x00000002   PAD
    0x20000e7c        -       0x00000806   Zero   RW          206    .bss.MCPAsyncBuffUARTA_B  mcp_config.o
    0x20001682   COMPRESSED   0x00000002   PAD
    0x20001684        -       0x00000082   Zero   RW          203    .bss.MCPSyncRXBuff  mcp_config.o
    0x20001706   COMPRESSED   0x00000002   PAD
    0x20001708        -       0x00000086   Zero   RW          204    .bss.MCPSyncTxBuff  mcp_config.o
    0x2000178e   COMPRESSED   0x00000002   PAD
    0x20001790        -       0x00000008   Zero   RW          214    .bss.MCP_UserCallBack  mcp_config.o
    0x20001798        -       0x00000030   Zero   RW          196    .bss.Mci            mc_config.o
    0x200017c8        -       0x00000002   Zero   RW          560    .bss.RI_GetPtrReg.nullData16  register_interface.o
    0x200017ca        -       0x0000000c   Zero   RW          186    .bss.RealBusVoltageSensorFilterBufferM1  mc_config.o
    0x200017d6   COMPRESSED   0x00000002   PAD
    0x200017d8        -       0x00000028   Zero   RW          209    .bss.dataPtrTableA  mcp_config.o
    0x20001800        -       0x00000028   Zero   RW          210    .bss.dataPtrTableBuffA  mcp_config.o
    0x20001828        -       0x0000000a   Zero   RW          211    .bss.dataSizeTableA  mcp_config.o
    0x20001832        -       0x0000000a   Zero   RW          212    .bss.dataSizeTableBuffA  mcp_config.o
    0x2000183c        -       0x00000064   Zero   RW           24    .bss.hadc1          main.o
    0x200018a0        -       0x00000048   Zero   RW           27    .bss.hdma_usart2_rx  main.o
    0x200018e8        -       0x00000048   Zero   RW           28    .bss.hdma_usart2_tx  main.o
    0x20001930        -       0x0000004c   Zero   RW          729    .bss.htim6          stm32l4xx_hal_timebase_tim.o
    0x2000197c        -       0x00000088   Zero   RW           26    .bss.huart2         main.o
    0x20001a04        -       0x00000088   Zero   RW           25    .bss.huart4         main.o
    0x20001a8c        -       0x00000004   Zero   RW           54    .bss.pMCI           motorcontrol.o
    0x20001a90        -       0x0000008c   Zero   RW         2103    .bss.pxReadyTasksLists  tasks.o
    0x20001b1c        -       0x00000bb8   Zero   RW         2241    .bss.ucHeap         heap_4.o
    0x200026d4        -       0x00000004   Zero   RW          934    .bss.uwTick         stm32l4xx_hal.o
    0x200026d8        -       0x00000200   Zero   RW           42    .bss.xIdleStack     freertos.o
    0x200028d8        -       0x00000054   Zero   RW           41    .bss.xIdleTaskTCBBuffer  freertos.o
    0x2000292c   COMPRESSED   0x00000004   PAD
    0x20002930        -       0x00000200   Zero   RW            2    HEAP                startup_stm32l476xx.o
    0x20002b30        -       0x00000400   Zero   RW            1    STACK               startup_stm32l476xx.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      2292          0        272          0          0      15323   aspep.o
        10          0          0          0          0       1712   bus_voltage_sensor.o
        78          0          0          0          0       1812   circle_limitation.o
       102          0          0          0          0      25525   cmsis_os.o
       148          0          0          0          0       5816   enc_align_ctrl.o
       658          0          0          0          0       6880   encoder_speed_pos_fdbk.o
        26          0          0          0        596       1614   freertos.o
       734          0          0          0       3032       5708   heap_4.o
       190          0          0          0          0       2334   list.o
      1412          0         79          0        600      17562   main.o
        46          0          0          0          0      18362   mc_api.o
         4          0          0          0          0        490   mc_app_hooks.o
         0          0          0        868         60      13944   mc_config.o
         0          0        151         16          0       2139   mc_configuration_registers.o
       712          4          0          0          0      22917   mc_interface.o
       610          6        512          0          0       4151   mc_math.o
         0          0         48         16          0       2500   mc_parameters.o
       582         52          0          0          0       4464   mc_perf.o
      2652         24          0          0        100      18125   mc_tasks.o
       764         66         16          0          0      15315   mcp.o
         0          0          0        196       4480       4491   mcp_config.o
      1198          0          0          0          4       4921   mcpa.o
        50          0          0          0          4       9931   motorcontrol.o
       134          0          0          0          0       2865   ntc_temperature_sensor.o
       356          0          0          0          0       6284   pid_regulator.o
       880         16          0          4          8       4107   port.o
        98          0          0          0          0       2469   pqd_motor_power_measurement.o
       174          0          0          0          0       3816   pwm_common.o
       786          0          0          0          0      12025   pwm_curr_fdbk.o
      2890          0          0          0          0      24110   r3_1_l4xx_pwm_curr_fdbk.o
       346          0          0          0          0       2962   r_divider_bus_voltage_sensor.o
        16          0          0          0          0       3311   ramp_ext_mngr.o
      4702        298          0          0          2      31052   register_interface.o
       658          0          0          0         56       6173   regular_conversion_manager.o
       130          0          0          0          0       3585   speed_pos_fdbk.o
       362          0          0          0          0       7114   speed_torq_ctrl.o
        64         26        392          0       1536        852   startup_stm32l476xx.o
        84          0          0          8          4       9226   stm32l4xx_hal.o
      1424         16          0          0          0      27469   stm32l4xx_hal_adc.o
      1350          0          0          0          0      21256   stm32l4xx_hal_adc_ex.o
       194          0          0          0          0      10492   stm32l4xx_hal_cortex.o
       204          0          0          0          0       7797   stm32l4xx_hal_dma.o
       540          0          0          0          0       5579   stm32l4xx_hal_gpio.o
       844          0          0          0          0      13522   stm32l4xx_hal_msp.o
       156          0          0          0          0      10076   stm32l4xx_hal_pwr_ex.o
      2898          0          0          0          0      12038   stm32l4xx_hal_rcc.o
      1688          8          0          0          0      14261   stm32l4xx_hal_rcc_ex.o
      2278         22          0          0          0      60072   stm32l4xx_hal_tim.o
       672        128          0          0          0      23214   stm32l4xx_hal_tim_ex.o
       188          0          0          0         76       7406   stm32l4xx_hal_timebase_tim.o
      2018         48         16          0          0      35028   stm32l4xx_hal_uart.o
        12          0          0          0          0       3638   stm32l4xx_it.o
       740          0          0          0          0      12676   stm32l4xx_mc_it.o
        18          0         72          4          0       2946   system_stm32l4xx.o
      1864          8          0          0        300      28411   tasks.o
      1228         24          0          0          0       9878   trajectory_ctrl.o
       526          0          7          0          0       7296   usart_aspep_driver.o
       192          0          0          0          0       5770   virtual_speed_sensor.o

    ----------------------------------------------------------------------
     43290        746       1608       1112      10872     644812   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       308          0         11          0         14          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        90          0          0          0          0          0   __dczerorl2.o
         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
       240          0          0          0          0        100   lludivv7m.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        26          0          0          0          0        116   fpinit.o

    ----------------------------------------------------------------------
       930         16          0          0         96       1028   Library Totals
         8          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       896         16          0          0         96        912   c_w.l
        26          0          0          0          0        116   fz_wm.l

    ----------------------------------------------------------------------
       930         16          0          0         96       1028   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     44220        762       1608       1112      10968     644436   Grand Totals
     44220        762       1608        448      10968     644436   ELF Image Totals (compressed)
     44220        762       1608        448          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                45828 (  44.75kB)
    Total RW  Size (RW Data + ZI Data)             12080 (  11.80kB)
    Total ROM Size (Code + RO Data + RW Data)      46276 (  45.19kB)

==============================================================================

